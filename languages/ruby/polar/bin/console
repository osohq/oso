#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'osohq/polar'

polar = Osohq::Polar::Polar.new.tap do |polar|
  polar.load('f(1); f(2); g(1); g(2); h(2); k(x) := f(x), h(x), g(x);')
  puts 'f(x)', polar.query_str('f(x)').to_a
  puts 'k(x)', polar.query_str('k(x)').to_a

  polar.load('foo(1, 2); foo(3, 4); foo(5, 6);')
  if polar.query_str('foo(x, y)').to_a != [{ 'x' => 1, 'y' => 2 }, { 'x' => 3, 'y' => 4 }, { 'x' => 5, 'y' => 6 }]
    raise 'AssertionError'
  end

  class TestClass
    def my_method
      1
    end
  end

  polar.register_class(TestClass)

  polar.load('external(x, 3) := x = TestClass{}.my_method;')
  results = polar.query_str('external(1, x)')
  p results.next

  # polar.load('testDebug() := debug(), foo(x, y), k(y);')
  # polar.query_str('testDebug()').next
end

require 'pry'
Pry.start
