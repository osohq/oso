<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1670" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1653.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1653.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.3030%" y="917" width="0.1010%" height="15" fill="rgb(227,0,7)"/><text x="0.5530%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.3030%" y="901" width="0.1010%" height="15" fill="rgb(217,0,24)"/><text x="0.5530%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="0.3030%" y="885" width="0.1010%" height="15" fill="rgb(221,193,54)"/><text x="0.5530%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="0.3030%" y="869" width="0.1010%" height="15" fill="rgb(248,212,6)"/><text x="0.5530%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="0.3030%" y="853" width="0.1010%" height="15" fill="rgb(208,68,35)"/><text x="0.5530%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="0.3030%" y="837" width="0.1010%" height="15" fill="rgb(232,128,0)"/><text x="0.5530%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="0.3030%" y="821" width="0.1010%" height="15" fill="rgb(207,160,47)"/><text x="0.5530%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="0.3030%" y="805" width="0.1010%" height="15" fill="rgb(228,23,34)"/><text x="0.5530%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="0.3030%" y="789" width="0.1010%" height="15" fill="rgb(218,30,26)"/><text x="0.5530%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="0.3030%" y="773" width="0.1010%" height="15" fill="rgb(220,122,19)"/><text x="0.5530%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="0.3030%" y="757" width="0.1010%" height="15" fill="rgb(250,228,42)"/><text x="0.5530%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="0.4040%" y="901" width="0.5051%" height="15" fill="rgb(240,193,28)"/><text x="0.6540%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="0.4040%" y="885" width="0.5051%" height="15" fill="rgb(216,20,37)"/><text x="0.6540%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="0.4040%" y="869" width="0.5051%" height="15" fill="rgb(206,188,39)"/><text x="0.6540%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="0.7071%" y="853" width="0.2020%" height="15" fill="rgb(217,207,13)"/><text x="0.9571%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="0.8081%" y="837" width="0.1010%" height="15" fill="rgb(231,73,38)"/><text x="1.0581%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="0.8081%" y="821" width="0.1010%" height="15" fill="rgb(225,20,46)"/><text x="1.0581%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="0.8081%" y="805" width="0.1010%" height="15" fill="rgb(210,31,41)"/><text x="1.0581%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="0.8081%" y="789" width="0.1010%" height="15" fill="rgb(221,200,47)"/><text x="1.0581%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="0.8081%" y="773" width="0.1010%" height="15" fill="rgb(226,26,5)"/><text x="1.0581%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="0.8081%" y="757" width="0.1010%" height="15" fill="rgb(249,33,26)"/><text x="1.0581%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 1.01%)</title><rect x="0.0000%" y="1125" width="1.0101%" height="15" fill="rgb(235,183,28)"/><text x="0.2500%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (10 samples, 1.01%)</title><rect x="0.0000%" y="1109" width="1.0101%" height="15" fill="rgb(221,5,38)"/><text x="0.2500%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 1.01%)</title><rect x="0.0000%" y="1093" width="1.0101%" height="15" fill="rgb(247,18,42)"/><text x="0.2500%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 1.01%)</title><rect x="0.0000%" y="1077" width="1.0101%" height="15" fill="rgb(241,131,45)"/><text x="0.2500%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.01%)</title><rect x="0.0000%" y="1061" width="1.0101%" height="15" fill="rgb(249,31,29)"/><text x="0.2500%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.01%)</title><rect x="0.0000%" y="1045" width="1.0101%" height="15" fill="rgb(225,111,53)"/><text x="0.2500%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 1.01%)</title><rect x="0.0000%" y="1029" width="1.0101%" height="15" fill="rgb(238,160,17)"/><text x="0.2500%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 1.01%)</title><rect x="0.0000%" y="1013" width="1.0101%" height="15" fill="rgb(214,148,48)"/><text x="0.2500%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (10 samples, 1.01%)</title><rect x="0.0000%" y="997" width="1.0101%" height="15" fill="rgb(232,36,49)"/><text x="0.2500%" y="1007.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (10 samples, 1.01%)</title><rect x="0.0000%" y="981" width="1.0101%" height="15" fill="rgb(209,103,24)"/><text x="0.2500%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 1.01%)</title><rect x="0.0000%" y="965" width="1.0101%" height="15" fill="rgb(229,88,8)"/><text x="0.2500%" y="975.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (10 samples, 1.01%)</title><rect x="0.0000%" y="949" width="1.0101%" height="15" fill="rgb(213,181,19)"/><text x="0.2500%" y="959.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="0.2020%" y="933" width="0.8081%" height="15" fill="rgb(254,191,54)"/><text x="0.4520%" y="943.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="0.4040%" y="917" width="0.6061%" height="15" fill="rgb(241,83,37)"/><text x="0.6540%" y="927.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.9091%" y="901" width="0.1010%" height="15" fill="rgb(233,36,39)"/><text x="1.1591%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.9091%" y="885" width="0.1010%" height="15" fill="rgb(226,3,54)"/><text x="1.1591%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.9091%" y="869" width="0.1010%" height="15" fill="rgb(245,192,40)"/><text x="1.1591%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="0.9091%" y="853" width="0.1010%" height="15" fill="rgb(238,167,29)"/><text x="1.1591%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="0.9091%" y="837" width="0.1010%" height="15" fill="rgb(232,182,51)"/><text x="1.1591%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="0.9091%" y="821" width="0.1010%" height="15" fill="rgb(231,60,39)"/><text x="1.1591%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="0.9091%" y="805" width="0.1010%" height="15" fill="rgb(208,69,12)"/><text x="1.1591%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="0.9091%" y="789" width="0.1010%" height="15" fill="rgb(235,93,37)"/><text x="1.1591%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="0.9091%" y="773" width="0.1010%" height="15" fill="rgb(213,116,39)"/><text x="1.1591%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="0.9091%" y="757" width="0.1010%" height="15" fill="rgb(222,207,29)"/><text x="1.1591%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="0.9091%" y="741" width="0.1010%" height="15" fill="rgb(206,96,30)"/><text x="1.1591%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="0.9091%" y="725" width="0.1010%" height="15" fill="rgb(218,138,4)"/><text x="1.1591%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 2.42%)</title><rect x="0.0000%" y="1173" width="2.4242%" height="15" fill="rgb(250,191,14)"/><text x="0.2500%" y="1183.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 2.42%)</title><rect x="0.0000%" y="1157" width="2.4242%" height="15" fill="rgb(239,60,40)"/><text x="0.2500%" y="1167.50">al..</text></g><g><title>alloc::slice::hack::to_vec (24 samples, 2.42%)</title><rect x="0.0000%" y="1141" width="2.4242%" height="15" fill="rgb(206,27,48)"/><text x="0.2500%" y="1151.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 1.41%)</title><rect x="1.0101%" y="1125" width="1.4141%" height="15" fill="rgb(225,35,8)"/><text x="1.2601%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 1.41%)</title><rect x="1.0101%" y="1109" width="1.4141%" height="15" fill="rgb(250,213,24)"/><text x="1.2601%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 1.41%)</title><rect x="1.0101%" y="1093" width="1.4141%" height="15" fill="rgb(247,123,22)"/><text x="1.2601%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 1.41%)</title><rect x="1.0101%" y="1077" width="1.4141%" height="15" fill="rgb(231,138,38)"/><text x="1.2601%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (14 samples, 1.41%)</title><rect x="1.0101%" y="1061" width="1.4141%" height="15" fill="rgb(231,145,46)"/><text x="1.2601%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 1.41%)</title><rect x="1.0101%" y="1045" width="1.4141%" height="15" fill="rgb(251,118,11)"/><text x="1.2601%" y="1055.50"></text></g><g><title>__GI___libc_malloc (14 samples, 1.41%)</title><rect x="1.0101%" y="1029" width="1.4141%" height="15" fill="rgb(217,147,25)"/><text x="1.2601%" y="1039.50"></text></g><g><title>_int_malloc (14 samples, 1.41%)</title><rect x="1.0101%" y="1013" width="1.4141%" height="15" fill="rgb(247,81,37)"/><text x="1.2601%" y="1023.50"></text></g><g><title>malloc_consolidate (11 samples, 1.11%)</title><rect x="1.3131%" y="997" width="1.1111%" height="15" fill="rgb(209,12,38)"/><text x="1.5631%" y="1007.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.20%)</title><rect x="2.2222%" y="981" width="0.2020%" height="15" fill="rgb(227,1,9)"/><text x="2.4722%" y="991.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="2.4242%" y="997" width="0.1010%" height="15" fill="rgb(248,47,43)"/><text x="2.6742%" y="1007.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (28 samples, 2.83%)</title><rect x="0.0000%" y="1189" width="2.8283%" height="15" fill="rgb(221,10,30)"/><text x="0.2500%" y="1199.50">po..</text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (4 samples, 0.40%)</title><rect x="2.4242%" y="1173" width="0.4040%" height="15" fill="rgb(210,229,1)"/><text x="2.6742%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (4 samples, 0.40%)</title><rect x="2.4242%" y="1157" width="0.4040%" height="15" fill="rgb(222,148,37)"/><text x="2.6742%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (4 samples, 0.40%)</title><rect x="2.4242%" y="1141" width="0.4040%" height="15" fill="rgb(234,67,33)"/><text x="2.6742%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.40%)</title><rect x="2.4242%" y="1125" width="0.4040%" height="15" fill="rgb(247,98,35)"/><text x="2.6742%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.40%)</title><rect x="2.4242%" y="1109" width="0.4040%" height="15" fill="rgb(247,138,52)"/><text x="2.6742%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.40%)</title><rect x="2.4242%" y="1093" width="0.4040%" height="15" fill="rgb(213,79,30)"/><text x="2.6742%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (4 samples, 0.40%)</title><rect x="2.4242%" y="1077" width="0.4040%" height="15" fill="rgb(246,177,23)"/><text x="2.6742%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (4 samples, 0.40%)</title><rect x="2.4242%" y="1061" width="0.4040%" height="15" fill="rgb(230,62,27)"/><text x="2.6742%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.40%)</title><rect x="2.4242%" y="1045" width="0.4040%" height="15" fill="rgb(216,154,8)"/><text x="2.6742%" y="1055.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.40%)</title><rect x="2.4242%" y="1029" width="0.4040%" height="15" fill="rgb(244,35,45)"/><text x="2.6742%" y="1039.50"></text></g><g><title>_int_realloc (4 samples, 0.40%)</title><rect x="2.4242%" y="1013" width="0.4040%" height="15" fill="rgb(251,115,12)"/><text x="2.6742%" y="1023.50"></text></g><g><title>_int_malloc (3 samples, 0.30%)</title><rect x="2.5253%" y="997" width="0.3030%" height="15" fill="rgb(240,54,50)"/><text x="2.7753%" y="1007.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query (1 samples, 0.10%)</title><rect x="2.8283%" y="1189" width="0.1010%" height="15" fill="rgb(233,84,52)"/><text x="3.0783%" y="1199.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query_for_predicate (1 samples, 0.10%)</title><rect x="2.8283%" y="1173" width="0.1010%" height="15" fill="rgb(207,117,47)"/><text x="3.0783%" y="1183.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.10%)</title><rect x="2.8283%" y="1157" width="0.1010%" height="15" fill="rgb(249,43,39)"/><text x="3.0783%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="2.8283%" y="1141" width="0.1010%" height="15" fill="rgb(209,38,44)"/><text x="3.0783%" y="1151.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::_{{closure}} (1 samples, 0.10%)</title><rect x="2.8283%" y="1125" width="0.1010%" height="15" fill="rgb(236,212,23)"/><text x="3.0783%" y="1135.50"></text></g><g><title>&lt;polar::types::GenericRule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="1109" width="0.1010%" height="15" fill="rgb(242,79,21)"/><text x="3.0783%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="1093" width="0.1010%" height="15" fill="rgb(211,96,35)"/><text x="3.0783%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="2.8283%" y="1077" width="0.1010%" height="15" fill="rgb(253,215,40)"/><text x="3.0783%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="2.8283%" y="1061" width="0.1010%" height="15" fill="rgb(211,81,21)"/><text x="3.0783%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="2.8283%" y="1045" width="0.1010%" height="15" fill="rgb(208,190,38)"/><text x="3.0783%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="2.8283%" y="1029" width="0.1010%" height="15" fill="rgb(235,213,38)"/><text x="3.0783%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="2.8283%" y="1013" width="0.1010%" height="15" fill="rgb(237,122,38)"/><text x="3.0783%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="2.8283%" y="997" width="0.1010%" height="15" fill="rgb(244,218,35)"/><text x="3.0783%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="2.8283%" y="981" width="0.1010%" height="15" fill="rgb(240,68,47)"/><text x="3.0783%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="2.8283%" y="965" width="0.1010%" height="15" fill="rgb(210,16,53)"/><text x="3.0783%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="2.8283%" y="949" width="0.1010%" height="15" fill="rgb(235,124,12)"/><text x="3.0783%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="2.8283%" y="933" width="0.1010%" height="15" fill="rgb(224,169,11)"/><text x="3.0783%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="2.8283%" y="917" width="0.1010%" height="15" fill="rgb(250,166,2)"/><text x="3.0783%" y="927.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="2.8283%" y="901" width="0.1010%" height="15" fill="rgb(242,216,29)"/><text x="3.0783%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="2.8283%" y="885" width="0.1010%" height="15" fill="rgb(230,116,27)"/><text x="3.0783%" y="895.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="869" width="0.1010%" height="15" fill="rgb(228,99,48)"/><text x="3.0783%" y="879.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="853" width="0.1010%" height="15" fill="rgb(253,11,6)"/><text x="3.0783%" y="863.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="837" width="0.1010%" height="15" fill="rgb(247,143,39)"/><text x="3.0783%" y="847.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="821" width="0.1010%" height="15" fill="rgb(236,97,10)"/><text x="3.0783%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="805" width="0.1010%" height="15" fill="rgb(233,208,19)"/><text x="3.0783%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="2.8283%" y="789" width="0.1010%" height="15" fill="rgb(216,164,2)"/><text x="3.0783%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="2.8283%" y="773" width="0.1010%" height="15" fill="rgb(220,129,5)"/><text x="3.0783%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="2.8283%" y="757" width="0.1010%" height="15" fill="rgb(242,17,10)"/><text x="3.0783%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="2.8283%" y="741" width="0.1010%" height="15" fill="rgb(242,107,0)"/><text x="3.0783%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="2.8283%" y="725" width="0.1010%" height="15" fill="rgb(251,28,31)"/><text x="3.0783%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="2.8283%" y="709" width="0.1010%" height="15" fill="rgb(233,223,10)"/><text x="3.0783%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="2.8283%" y="693" width="0.1010%" height="15" fill="rgb(215,21,27)"/><text x="3.0783%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="2.8283%" y="677" width="0.1010%" height="15" fill="rgb(232,23,21)"/><text x="3.0783%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="2.8283%" y="661" width="0.1010%" height="15" fill="rgb(244,5,23)"/><text x="3.0783%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="2.8283%" y="645" width="0.1010%" height="15" fill="rgb(226,81,46)"/><text x="3.0783%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="2.8283%" y="629" width="0.1010%" height="15" fill="rgb(247,70,30)"/><text x="3.0783%" y="639.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="2.8283%" y="613" width="0.1010%" height="15" fill="rgb(212,68,19)"/><text x="3.0783%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="2.8283%" y="597" width="0.1010%" height="15" fill="rgb(240,187,13)"/><text x="3.0783%" y="607.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="581" width="0.1010%" height="15" fill="rgb(223,113,26)"/><text x="3.0783%" y="591.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="565" width="0.1010%" height="15" fill="rgb(206,192,2)"/><text x="3.0783%" y="575.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="549" width="0.1010%" height="15" fill="rgb(241,108,4)"/><text x="3.0783%" y="559.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="533" width="0.1010%" height="15" fill="rgb(247,173,49)"/><text x="3.0783%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="517" width="0.1010%" height="15" fill="rgb(224,114,35)"/><text x="3.0783%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="2.8283%" y="501" width="0.1010%" height="15" fill="rgb(245,159,27)"/><text x="3.0783%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="2.8283%" y="485" width="0.1010%" height="15" fill="rgb(245,172,44)"/><text x="3.0783%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="2.8283%" y="469" width="0.1010%" height="15" fill="rgb(236,23,11)"/><text x="3.0783%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="2.8283%" y="453" width="0.1010%" height="15" fill="rgb(205,117,38)"/><text x="3.0783%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="2.8283%" y="437" width="0.1010%" height="15" fill="rgb(237,72,25)"/><text x="3.0783%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="2.8283%" y="421" width="0.1010%" height="15" fill="rgb(244,70,9)"/><text x="3.0783%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="2.8283%" y="405" width="0.1010%" height="15" fill="rgb(217,125,39)"/><text x="3.0783%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="2.8283%" y="389" width="0.1010%" height="15" fill="rgb(235,36,10)"/><text x="3.0783%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="2.8283%" y="373" width="0.1010%" height="15" fill="rgb(251,123,47)"/><text x="3.0783%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="2.8283%" y="357" width="0.1010%" height="15" fill="rgb(221,13,13)"/><text x="3.0783%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="2.9293%" y="565" width="0.3030%" height="15" fill="rgb(238,131,9)"/><text x="3.1793%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="2.9293%" y="549" width="0.3030%" height="15" fill="rgb(211,50,8)"/><text x="3.1793%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="2.9293%" y="533" width="0.3030%" height="15" fill="rgb(245,182,24)"/><text x="3.1793%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="2.9293%" y="517" width="0.3030%" height="15" fill="rgb(242,14,37)"/><text x="3.1793%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="2.9293%" y="501" width="0.3030%" height="15" fill="rgb(246,228,12)"/><text x="3.1793%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="2.9293%" y="485" width="0.3030%" height="15" fill="rgb(213,55,15)"/><text x="3.1793%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="2.9293%" y="469" width="0.3030%" height="15" fill="rgb(209,9,3)"/><text x="3.1793%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="2.9293%" y="453" width="0.3030%" height="15" fill="rgb(230,59,30)"/><text x="3.1793%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="2.9293%" y="437" width="0.3030%" height="15" fill="rgb(209,121,21)"/><text x="3.1793%" y="447.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="2.9293%" y="421" width="0.3030%" height="15" fill="rgb(220,109,13)"/><text x="3.1793%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.30%)</title><rect x="2.9293%" y="405" width="0.3030%" height="15" fill="rgb(232,18,1)"/><text x="3.1793%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (3 samples, 0.30%)</title><rect x="2.9293%" y="389" width="0.3030%" height="15" fill="rgb(215,41,42)"/><text x="3.1793%" y="399.50"></text></g><g><title>core::ptr::write (3 samples, 0.30%)</title><rect x="2.9293%" y="373" width="0.3030%" height="15" fill="rgb(224,123,36)"/><text x="3.1793%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="2.9293%" y="613" width="0.4040%" height="15" fill="rgb(240,125,3)"/><text x="3.1793%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="2.9293%" y="597" width="0.4040%" height="15" fill="rgb(205,98,50)"/><text x="3.1793%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="2.9293%" y="581" width="0.4040%" height="15" fill="rgb(205,185,37)"/><text x="3.1793%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="3.2323%" y="565" width="0.1010%" height="15" fill="rgb(238,207,15)"/><text x="3.4823%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="3.2323%" y="549" width="0.1010%" height="15" fill="rgb(213,199,42)"/><text x="3.4823%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="3.2323%" y="533" width="0.1010%" height="15" fill="rgb(235,201,11)"/><text x="3.4823%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="3.2323%" y="517" width="0.1010%" height="15" fill="rgb(207,46,11)"/><text x="3.4823%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="3.2323%" y="501" width="0.1010%" height="15" fill="rgb(241,35,35)"/><text x="3.4823%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="3.2323%" y="485" width="0.1010%" height="15" fill="rgb(243,32,47)"/><text x="3.4823%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="3.2323%" y="469" width="0.1010%" height="15" fill="rgb(247,202,23)"/><text x="3.4823%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="3.2323%" y="453" width="0.1010%" height="15" fill="rgb(219,102,11)"/><text x="3.4823%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="3.3333%" y="533" width="0.2020%" height="15" fill="rgb(243,110,44)"/><text x="3.5833%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="3.3333%" y="517" width="0.2020%" height="15" fill="rgb(222,74,54)"/><text x="3.5833%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.20%)</title><rect x="3.3333%" y="501" width="0.2020%" height="15" fill="rgb(216,99,12)"/><text x="3.5833%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.20%)</title><rect x="3.3333%" y="485" width="0.2020%" height="15" fill="rgb(226,22,26)"/><text x="3.5833%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="3.4343%" y="469" width="0.1010%" height="15" fill="rgb(217,163,10)"/><text x="3.6843%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="1173" width="0.7071%" height="15" fill="rgb(213,25,53)"/><text x="3.1793%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.71%)</title><rect x="2.9293%" y="1157" width="0.7071%" height="15" fill="rgb(252,105,26)"/><text x="3.1793%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.71%)</title><rect x="2.9293%" y="1141" width="0.7071%" height="15" fill="rgb(220,39,43)"/><text x="3.1793%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.71%)</title><rect x="2.9293%" y="1125" width="0.7071%" height="15" fill="rgb(229,68,48)"/><text x="3.1793%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="2.9293%" y="1109" width="0.7071%" height="15" fill="rgb(252,8,32)"/><text x="3.1793%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="2.9293%" y="1093" width="0.7071%" height="15" fill="rgb(223,20,43)"/><text x="3.1793%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.71%)</title><rect x="2.9293%" y="1077" width="0.7071%" height="15" fill="rgb(229,81,49)"/><text x="3.1793%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.71%)</title><rect x="2.9293%" y="1061" width="0.7071%" height="15" fill="rgb(236,28,36)"/><text x="3.1793%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.71%)</title><rect x="2.9293%" y="1045" width="0.7071%" height="15" fill="rgb(249,185,26)"/><text x="3.1793%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.71%)</title><rect x="2.9293%" y="1029" width="0.7071%" height="15" fill="rgb(249,174,33)"/><text x="3.1793%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.71%)</title><rect x="2.9293%" y="1013" width="0.7071%" height="15" fill="rgb(233,201,37)"/><text x="3.1793%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (7 samples, 0.71%)</title><rect x="2.9293%" y="997" width="0.7071%" height="15" fill="rgb(221,78,26)"/><text x="3.1793%" y="1007.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (7 samples, 0.71%)</title><rect x="2.9293%" y="981" width="0.7071%" height="15" fill="rgb(250,127,30)"/><text x="3.1793%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.71%)</title><rect x="2.9293%" y="965" width="0.7071%" height="15" fill="rgb(230,49,44)"/><text x="3.1793%" y="975.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="949" width="0.7071%" height="15" fill="rgb(229,67,23)"/><text x="3.1793%" y="959.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="933" width="0.7071%" height="15" fill="rgb(249,83,47)"/><text x="3.1793%" y="943.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="917" width="0.7071%" height="15" fill="rgb(215,43,3)"/><text x="3.1793%" y="927.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="901" width="0.7071%" height="15" fill="rgb(238,154,13)"/><text x="3.1793%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="885" width="0.7071%" height="15" fill="rgb(219,56,2)"/><text x="3.1793%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.71%)</title><rect x="2.9293%" y="869" width="0.7071%" height="15" fill="rgb(233,0,4)"/><text x="3.1793%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.71%)</title><rect x="2.9293%" y="853" width="0.7071%" height="15" fill="rgb(235,30,7)"/><text x="3.1793%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.71%)</title><rect x="2.9293%" y="837" width="0.7071%" height="15" fill="rgb(250,79,13)"/><text x="3.1793%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="2.9293%" y="821" width="0.7071%" height="15" fill="rgb(211,146,34)"/><text x="3.1793%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="2.9293%" y="805" width="0.7071%" height="15" fill="rgb(228,22,38)"/><text x="3.1793%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.71%)</title><rect x="2.9293%" y="789" width="0.7071%" height="15" fill="rgb(235,168,5)"/><text x="3.1793%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.71%)</title><rect x="2.9293%" y="773" width="0.7071%" height="15" fill="rgb(221,155,16)"/><text x="3.1793%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.71%)</title><rect x="2.9293%" y="757" width="0.7071%" height="15" fill="rgb(215,215,53)"/><text x="3.1793%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.71%)</title><rect x="2.9293%" y="741" width="0.7071%" height="15" fill="rgb(223,4,10)"/><text x="3.1793%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.71%)</title><rect x="2.9293%" y="725" width="0.7071%" height="15" fill="rgb(234,103,6)"/><text x="3.1793%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (7 samples, 0.71%)</title><rect x="2.9293%" y="709" width="0.7071%" height="15" fill="rgb(227,97,0)"/><text x="3.1793%" y="719.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (7 samples, 0.71%)</title><rect x="2.9293%" y="693" width="0.7071%" height="15" fill="rgb(234,150,53)"/><text x="3.1793%" y="703.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.71%)</title><rect x="2.9293%" y="677" width="0.7071%" height="15" fill="rgb(228,201,54)"/><text x="3.1793%" y="687.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="661" width="0.7071%" height="15" fill="rgb(222,22,37)"/><text x="3.1793%" y="671.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="645" width="0.7071%" height="15" fill="rgb(237,53,32)"/><text x="3.1793%" y="655.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="2.9293%" y="629" width="0.7071%" height="15" fill="rgb(233,25,53)"/><text x="3.1793%" y="639.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="3.3333%" y="613" width="0.3030%" height="15" fill="rgb(210,40,34)"/><text x="3.5833%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="3.3333%" y="597" width="0.3030%" height="15" fill="rgb(241,220,44)"/><text x="3.5833%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="3.3333%" y="581" width="0.3030%" height="15" fill="rgb(235,28,35)"/><text x="3.5833%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="3.3333%" y="565" width="0.3030%" height="15" fill="rgb(210,56,17)"/><text x="3.5833%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="3.3333%" y="549" width="0.3030%" height="15" fill="rgb(224,130,29)"/><text x="3.5833%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="3.5354%" y="533" width="0.1010%" height="15" fill="rgb(235,212,8)"/><text x="3.7854%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="3.5354%" y="517" width="0.1010%" height="15" fill="rgb(223,33,50)"/><text x="3.7854%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="3.5354%" y="501" width="0.1010%" height="15" fill="rgb(219,149,13)"/><text x="3.7854%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="3.5354%" y="485" width="0.1010%" height="15" fill="rgb(250,156,29)"/><text x="3.7854%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="3.5354%" y="469" width="0.1010%" height="15" fill="rgb(216,193,19)"/><text x="3.7854%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="3.5354%" y="453" width="0.1010%" height="15" fill="rgb(216,135,14)"/><text x="3.7854%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="3.5354%" y="437" width="0.1010%" height="15" fill="rgb(241,47,5)"/><text x="3.7854%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="3.6364%" y="773" width="0.1010%" height="15" fill="rgb(233,42,35)"/><text x="3.8864%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="3.6364%" y="757" width="0.1010%" height="15" fill="rgb(231,13,6)"/><text x="3.8864%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="3.6364%" y="741" width="0.1010%" height="15" fill="rgb(207,181,40)"/><text x="3.8864%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.10%)</title><rect x="3.6364%" y="725" width="0.1010%" height="15" fill="rgb(254,173,49)"/><text x="3.8864%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.10%)</title><rect x="3.6364%" y="709" width="0.1010%" height="15" fill="rgb(221,1,38)"/><text x="3.8864%" y="719.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="3.6364%" y="885" width="0.2020%" height="15" fill="rgb(206,124,46)"/><text x="3.8864%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="3.6364%" y="869" width="0.2020%" height="15" fill="rgb(249,21,11)"/><text x="3.8864%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="3.6364%" y="853" width="0.2020%" height="15" fill="rgb(222,201,40)"/><text x="3.8864%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="3.6364%" y="837" width="0.2020%" height="15" fill="rgb(235,61,29)"/><text x="3.8864%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="3.6364%" y="821" width="0.2020%" height="15" fill="rgb(219,207,3)"/><text x="3.8864%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="3.6364%" y="805" width="0.2020%" height="15" fill="rgb(222,56,46)"/><text x="3.8864%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="3.6364%" y="789" width="0.2020%" height="15" fill="rgb(239,76,54)"/><text x="3.8864%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="3.7374%" y="773" width="0.1010%" height="15" fill="rgb(231,124,27)"/><text x="3.9874%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="3.7374%" y="757" width="0.1010%" height="15" fill="rgb(249,195,6)"/><text x="3.9874%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="3.7374%" y="741" width="0.1010%" height="15" fill="rgb(237,174,47)"/><text x="3.9874%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="3.7374%" y="725" width="0.1010%" height="15" fill="rgb(206,201,31)"/><text x="3.9874%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="3.7374%" y="709" width="0.1010%" height="15" fill="rgb(231,57,52)"/><text x="3.9874%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="3.7374%" y="693" width="0.1010%" height="15" fill="rgb(248,177,22)"/><text x="3.9874%" y="703.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="3.7374%" y="677" width="0.1010%" height="15" fill="rgb(215,211,37)"/><text x="3.9874%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="3.7374%" y="661" width="0.1010%" height="15" fill="rgb(241,128,51)"/><text x="3.9874%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="3.7374%" y="645" width="0.1010%" height="15" fill="rgb(227,165,31)"/><text x="3.9874%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="3.7374%" y="629" width="0.1010%" height="15" fill="rgb(228,167,24)"/><text x="3.9874%" y="639.50"></text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (10 samples, 1.01%)</title><rect x="2.9293%" y="1189" width="1.0101%" height="15" fill="rgb(228,143,12)"/><text x="3.1793%" y="1199.50"></text></g><g><title>polar::vm::PolarVirtualMachine::choose (3 samples, 0.30%)</title><rect x="3.6364%" y="1173" width="0.3030%" height="15" fill="rgb(249,149,8)"/><text x="3.8864%" y="1183.50"></text></g><g><title>polar::vm::PolarVirtualMachine::push_choice (3 samples, 0.30%)</title><rect x="3.6364%" y="1157" width="0.3030%" height="15" fill="rgb(243,35,44)"/><text x="3.8864%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="3.6364%" y="1141" width="0.3030%" height="15" fill="rgb(246,89,9)"/><text x="3.8864%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="3.6364%" y="1125" width="0.3030%" height="15" fill="rgb(233,213,13)"/><text x="3.8864%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="3.6364%" y="1109" width="0.3030%" height="15" fill="rgb(233,141,41)"/><text x="3.8864%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="3.6364%" y="1093" width="0.3030%" height="15" fill="rgb(239,167,4)"/><text x="3.8864%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="3.6364%" y="1077" width="0.3030%" height="15" fill="rgb(209,217,16)"/><text x="3.8864%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="3.6364%" y="1061" width="0.3030%" height="15" fill="rgb(219,88,35)"/><text x="3.8864%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="3.6364%" y="1045" width="0.3030%" height="15" fill="rgb(220,193,23)"/><text x="3.8864%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="3.6364%" y="1029" width="0.3030%" height="15" fill="rgb(230,90,52)"/><text x="3.8864%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="3.6364%" y="1013" width="0.3030%" height="15" fill="rgb(252,106,19)"/><text x="3.8864%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="3.6364%" y="997" width="0.3030%" height="15" fill="rgb(206,74,20)"/><text x="3.8864%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="3.6364%" y="981" width="0.3030%" height="15" fill="rgb(230,138,44)"/><text x="3.8864%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="3.6364%" y="965" width="0.3030%" height="15" fill="rgb(235,182,43)"/><text x="3.8864%" y="975.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="3.6364%" y="949" width="0.3030%" height="15" fill="rgb(242,16,51)"/><text x="3.8864%" y="959.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="3.6364%" y="933" width="0.3030%" height="15" fill="rgb(248,9,4)"/><text x="3.8864%" y="943.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="3.6364%" y="917" width="0.3030%" height="15" fill="rgb(210,31,22)"/><text x="3.8864%" y="927.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="3.6364%" y="901" width="0.3030%" height="15" fill="rgb(239,54,39)"/><text x="3.8864%" y="911.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="3.8384%" y="885" width="0.1010%" height="15" fill="rgb(230,99,41)"/><text x="4.0884%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="3.8384%" y="869" width="0.1010%" height="15" fill="rgb(253,106,12)"/><text x="4.0884%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="3.8384%" y="853" width="0.1010%" height="15" fill="rgb(213,46,41)"/><text x="4.0884%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="3.8384%" y="837" width="0.1010%" height="15" fill="rgb(215,133,35)"/><text x="4.0884%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="3.8384%" y="821" width="0.1010%" height="15" fill="rgb(213,28,5)"/><text x="4.0884%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="3.8384%" y="805" width="0.1010%" height="15" fill="rgb(215,77,49)"/><text x="4.0884%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="3.8384%" y="789" width="0.1010%" height="15" fill="rgb(248,100,22)"/><text x="4.0884%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="3.8384%" y="773" width="0.1010%" height="15" fill="rgb(208,67,9)"/><text x="4.0884%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="3.8384%" y="757" width="0.1010%" height="15" fill="rgb(219,133,21)"/><text x="4.0884%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="3.8384%" y="741" width="0.1010%" height="15" fill="rgb(246,46,29)"/><text x="4.0884%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="3.8384%" y="725" width="0.1010%" height="15" fill="rgb(246,185,52)"/><text x="4.0884%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="3.8384%" y="709" width="0.1010%" height="15" fill="rgb(252,136,11)"/><text x="4.0884%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="3.8384%" y="693" width="0.1010%" height="15" fill="rgb(219,138,53)"/><text x="4.0884%" y="703.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="3.8384%" y="677" width="0.1010%" height="15" fill="rgb(211,51,23)"/><text x="4.0884%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="3.8384%" y="661" width="0.1010%" height="15" fill="rgb(247,221,28)"/><text x="4.0884%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="3.8384%" y="645" width="0.1010%" height="15" fill="rgb(251,222,45)"/><text x="4.0884%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="3.8384%" y="629" width="0.1010%" height="15" fill="rgb(217,162,53)"/><text x="4.0884%" y="639.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (40 samples, 4.04%)</title><rect x="0.0000%" y="1493" width="4.0404%" height="15" fill="rgb(229,93,14)"/><text x="0.2500%" y="1503.50">&lt;cri..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (40 samples, 4.04%)</title><rect x="0.0000%" y="1477" width="4.0404%" height="15" fill="rgb(209,67,49)"/><text x="0.2500%" y="1487.50">crit..</text></g><g><title>bench::too_many_predicates::_{{closure}} (40 samples, 4.04%)</title><rect x="0.0000%" y="1461" width="4.0404%" height="15" fill="rgb(213,87,29)"/><text x="0.2500%" y="1471.50">benc..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (40 samples, 4.04%)</title><rect x="0.0000%" y="1445" width="4.0404%" height="15" fill="rgb(205,151,52)"/><text x="0.2500%" y="1455.50">crit..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (40 samples, 4.04%)</title><rect x="0.0000%" y="1429" width="4.0404%" height="15" fill="rgb(253,215,39)"/><text x="0.2500%" y="1439.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (40 samples, 4.04%)</title><rect x="0.0000%" y="1413" width="4.0404%" height="15" fill="rgb(221,220,41)"/><text x="0.2500%" y="1423.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (40 samples, 4.04%)</title><rect x="0.0000%" y="1397" width="4.0404%" height="15" fill="rgb(218,133,21)"/><text x="0.2500%" y="1407.50">core..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 4.04%)</title><rect x="0.0000%" y="1381" width="4.0404%" height="15" fill="rgb(221,193,43)"/><text x="0.2500%" y="1391.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (40 samples, 4.04%)</title><rect x="0.0000%" y="1365" width="4.0404%" height="15" fill="rgb(240,128,52)"/><text x="0.2500%" y="1375.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 4.04%)</title><rect x="0.0000%" y="1349" width="4.0404%" height="15" fill="rgb(253,114,12)"/><text x="0.2500%" y="1359.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (40 samples, 4.04%)</title><rect x="0.0000%" y="1333" width="4.0404%" height="15" fill="rgb(215,223,47)"/><text x="0.2500%" y="1343.50">core..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (40 samples, 4.04%)</title><rect x="0.0000%" y="1317" width="4.0404%" height="15" fill="rgb(248,225,23)"/><text x="0.2500%" y="1327.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40 samples, 4.04%)</title><rect x="0.0000%" y="1301" width="4.0404%" height="15" fill="rgb(250,108,0)"/><text x="0.2500%" y="1311.50">core..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (40 samples, 4.04%)</title><rect x="0.0000%" y="1285" width="4.0404%" height="15" fill="rgb(228,208,7)"/><text x="0.2500%" y="1295.50">benc..</text></g><g><title>bench::Runner::run (40 samples, 4.04%)</title><rect x="0.0000%" y="1269" width="4.0404%" height="15" fill="rgb(244,45,10)"/><text x="0.2500%" y="1279.50">benc..</text></g><g><title>bench::Runner::next (40 samples, 4.04%)</title><rect x="0.0000%" y="1253" width="4.0404%" height="15" fill="rgb(207,125,25)"/><text x="0.2500%" y="1263.50">benc..</text></g><g><title>polar::polar::Polar::query (40 samples, 4.04%)</title><rect x="0.0000%" y="1237" width="4.0404%" height="15" fill="rgb(210,195,18)"/><text x="0.2500%" y="1247.50">pola..</text></g><g><title>polar::vm::PolarVirtualMachine::run (40 samples, 4.04%)</title><rect x="0.0000%" y="1221" width="4.0404%" height="15" fill="rgb(249,80,12)"/><text x="0.2500%" y="1231.50">pola..</text></g><g><title>polar::vm::PolarVirtualMachine::next (40 samples, 4.04%)</title><rect x="0.0000%" y="1205" width="4.0404%" height="15" fill="rgb(221,65,9)"/><text x="0.2500%" y="1215.50">pola..</text></g><g><title>polar::vm::PolarVirtualMachine::unify (1 samples, 0.10%)</title><rect x="3.9394%" y="1189" width="0.1010%" height="15" fill="rgb(235,49,36)"/><text x="4.1894%" y="1199.50"></text></g><g><title>polar::vm::PolarVirtualMachine::unify::_{{closure}} (1 samples, 0.10%)</title><rect x="3.9394%" y="1173" width="0.1010%" height="15" fill="rgb(225,32,20)"/><text x="4.1894%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 4.14%)</title><rect x="0.0000%" y="1573" width="4.1414%" height="15" fill="rgb(215,141,46)"/><text x="0.2500%" y="1583.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (41 samples, 4.14%)</title><rect x="0.0000%" y="1557" width="4.1414%" height="15" fill="rgb(250,160,47)"/><text x="0.2500%" y="1567.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 4.14%)</title><rect x="0.0000%" y="1541" width="4.1414%" height="15" fill="rgb(216,222,40)"/><text x="0.2500%" y="1551.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (41 samples, 4.14%)</title><rect x="0.0000%" y="1525" width="4.1414%" height="15" fill="rgb(234,217,39)"/><text x="0.2500%" y="1535.50">core:..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (41 samples, 4.14%)</title><rect x="0.0000%" y="1509" width="4.1414%" height="15" fill="rgb(207,178,40)"/><text x="0.2500%" y="1519.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="4.0404%" y="1493" width="0.1010%" height="15" fill="rgb(221,136,13)"/><text x="4.2904%" y="1503.50"></text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="4.0404%" y="1477" width="0.1010%" height="15" fill="rgb(249,199,10)"/><text x="4.2904%" y="1487.50"></text></g><g><title>bench::Runner::run (1 samples, 0.10%)</title><rect x="4.0404%" y="1461" width="0.1010%" height="15" fill="rgb(249,222,13)"/><text x="4.2904%" y="1471.50"></text></g><g><title>bench::Runner::next (1 samples, 0.10%)</title><rect x="4.0404%" y="1445" width="0.1010%" height="15" fill="rgb(244,185,38)"/><text x="4.2904%" y="1455.50"></text></g><g><title>polar::polar::Polar::query (1 samples, 0.10%)</title><rect x="4.0404%" y="1429" width="0.1010%" height="15" fill="rgb(236,202,9)"/><text x="4.2904%" y="1439.50"></text></g><g><title>polar::vm::PolarVirtualMachine::run (1 samples, 0.10%)</title><rect x="4.0404%" y="1413" width="0.1010%" height="15" fill="rgb(250,229,37)"/><text x="4.2904%" y="1423.50"></text></g><g><title>polar::vm::PolarVirtualMachine::next (1 samples, 0.10%)</title><rect x="4.0404%" y="1397" width="0.1010%" height="15" fill="rgb(206,174,23)"/><text x="4.2904%" y="1407.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (1 samples, 0.10%)</title><rect x="4.0404%" y="1381" width="0.1010%" height="15" fill="rgb(211,33,43)"/><text x="4.2904%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="1365" width="0.1010%" height="15" fill="rgb(245,58,50)"/><text x="4.2904%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="4.0404%" y="1349" width="0.1010%" height="15" fill="rgb(244,68,36)"/><text x="4.2904%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="4.0404%" y="1333" width="0.1010%" height="15" fill="rgb(232,229,15)"/><text x="4.2904%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="4.0404%" y="1317" width="0.1010%" height="15" fill="rgb(254,30,23)"/><text x="4.2904%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="4.0404%" y="1301" width="0.1010%" height="15" fill="rgb(235,160,14)"/><text x="4.2904%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="4.0404%" y="1285" width="0.1010%" height="15" fill="rgb(212,155,44)"/><text x="4.2904%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="4.0404%" y="1269" width="0.1010%" height="15" fill="rgb(226,2,50)"/><text x="4.2904%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="4.0404%" y="1253" width="0.1010%" height="15" fill="rgb(234,177,6)"/><text x="4.2904%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="4.0404%" y="1237" width="0.1010%" height="15" fill="rgb(217,24,9)"/><text x="4.2904%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="4.0404%" y="1221" width="0.1010%" height="15" fill="rgb(220,13,46)"/><text x="4.2904%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="4.0404%" y="1205" width="0.1010%" height="15" fill="rgb(239,221,27)"/><text x="4.2904%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="4.0404%" y="1189" width="0.1010%" height="15" fill="rgb(222,198,25)"/><text x="4.2904%" y="1199.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="4.0404%" y="1173" width="0.1010%" height="15" fill="rgb(211,99,13)"/><text x="4.2904%" y="1183.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="4.0404%" y="1157" width="0.1010%" height="15" fill="rgb(232,111,31)"/><text x="4.2904%" y="1167.50"></text></g><g><title>&lt;polar::vm::Goal as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="1141" width="0.1010%" height="15" fill="rgb(245,82,37)"/><text x="4.2904%" y="1151.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="1125" width="0.1010%" height="15" fill="rgb(227,149,46)"/><text x="4.2904%" y="1135.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="1109" width="0.1010%" height="15" fill="rgb(218,36,50)"/><text x="4.2904%" y="1119.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="1093" width="0.1010%" height="15" fill="rgb(226,80,48)"/><text x="4.2904%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="1077" width="0.1010%" height="15" fill="rgb(238,224,15)"/><text x="4.2904%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="4.0404%" y="1061" width="0.1010%" height="15" fill="rgb(241,136,10)"/><text x="4.2904%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="4.0404%" y="1045" width="0.1010%" height="15" fill="rgb(208,32,45)"/><text x="4.2904%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="4.0404%" y="1029" width="0.1010%" height="15" fill="rgb(207,135,9)"/><text x="4.2904%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="4.0404%" y="1013" width="0.1010%" height="15" fill="rgb(206,86,44)"/><text x="4.2904%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="4.0404%" y="997" width="0.1010%" height="15" fill="rgb(245,177,15)"/><text x="4.2904%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="4.0404%" y="981" width="0.1010%" height="15" fill="rgb(206,64,50)"/><text x="4.2904%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="4.0404%" y="965" width="0.1010%" height="15" fill="rgb(234,36,40)"/><text x="4.2904%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="4.0404%" y="949" width="0.1010%" height="15" fill="rgb(213,64,8)"/><text x="4.2904%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="4.0404%" y="933" width="0.1010%" height="15" fill="rgb(210,75,36)"/><text x="4.2904%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="4.0404%" y="917" width="0.1010%" height="15" fill="rgb(229,88,21)"/><text x="4.2904%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="4.0404%" y="901" width="0.1010%" height="15" fill="rgb(252,204,47)"/><text x="4.2904%" y="911.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="4.0404%" y="885" width="0.1010%" height="15" fill="rgb(208,77,27)"/><text x="4.2904%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="4.0404%" y="869" width="0.1010%" height="15" fill="rgb(221,76,26)"/><text x="4.2904%" y="879.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="853" width="0.1010%" height="15" fill="rgb(225,139,18)"/><text x="4.2904%" y="863.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="837" width="0.1010%" height="15" fill="rgb(230,137,11)"/><text x="4.2904%" y="847.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="821" width="0.1010%" height="15" fill="rgb(212,28,1)"/><text x="4.2904%" y="831.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="805" width="0.1010%" height="15" fill="rgb(248,164,17)"/><text x="4.2904%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="789" width="0.1010%" height="15" fill="rgb(222,171,42)"/><text x="4.2904%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.0404%" y="773" width="0.1010%" height="15" fill="rgb(243,84,45)"/><text x="4.2904%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="4.0404%" y="757" width="0.1010%" height="15" fill="rgb(252,49,23)"/><text x="4.2904%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="4.0404%" y="741" width="0.1010%" height="15" fill="rgb(215,19,7)"/><text x="4.2904%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="4.0404%" y="725" width="0.1010%" height="15" fill="rgb(238,81,41)"/><text x="4.2904%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="4.0404%" y="709" width="0.1010%" height="15" fill="rgb(210,199,37)"/><text x="4.2904%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="4.0404%" y="693" width="0.1010%" height="15" fill="rgb(244,192,49)"/><text x="4.2904%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="4.0404%" y="677" width="0.1010%" height="15" fill="rgb(226,211,11)"/><text x="4.2904%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="4.0404%" y="661" width="0.1010%" height="15" fill="rgb(236,162,54)"/><text x="4.2904%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="4.0404%" y="645" width="0.1010%" height="15" fill="rgb(220,229,9)"/><text x="4.2904%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="4.0404%" y="629" width="0.1010%" height="15" fill="rgb(250,87,22)"/><text x="4.2904%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="4.0404%" y="613" width="0.1010%" height="15" fill="rgb(239,43,17)"/><text x="4.2904%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="4.0404%" y="597" width="0.1010%" height="15" fill="rgb(231,177,25)"/><text x="4.2904%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.2424%" y="981" width="0.1010%" height="15" fill="rgb(219,179,1)"/><text x="4.4924%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="4.2424%" y="965" width="0.1010%" height="15" fill="rgb(238,219,53)"/><text x="4.4924%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="4.2424%" y="949" width="0.1010%" height="15" fill="rgb(232,167,36)"/><text x="4.4924%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="4.1414%" y="1205" width="0.3030%" height="15" fill="rgb(244,19,51)"/><text x="4.3914%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="4.1414%" y="1189" width="0.3030%" height="15" fill="rgb(224,6,22)"/><text x="4.3914%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="4.1414%" y="1173" width="0.3030%" height="15" fill="rgb(224,145,5)"/><text x="4.3914%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="4.1414%" y="1157" width="0.3030%" height="15" fill="rgb(234,130,49)"/><text x="4.3914%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="4.1414%" y="1141" width="0.3030%" height="15" fill="rgb(254,6,2)"/><text x="4.3914%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="4.1414%" y="1125" width="0.3030%" height="15" fill="rgb(208,96,46)"/><text x="4.3914%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="4.1414%" y="1109" width="0.3030%" height="15" fill="rgb(239,3,39)"/><text x="4.3914%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="4.1414%" y="1093" width="0.3030%" height="15" fill="rgb(233,210,1)"/><text x="4.3914%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="4.1414%" y="1077" width="0.3030%" height="15" fill="rgb(244,137,37)"/><text x="4.3914%" y="1087.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="4.1414%" y="1061" width="0.3030%" height="15" fill="rgb(240,136,2)"/><text x="4.3914%" y="1071.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="4.1414%" y="1045" width="0.3030%" height="15" fill="rgb(239,18,37)"/><text x="4.3914%" y="1055.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="4.1414%" y="1029" width="0.3030%" height="15" fill="rgb(218,185,22)"/><text x="4.3914%" y="1039.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="4.2424%" y="1013" width="0.2020%" height="15" fill="rgb(225,218,4)"/><text x="4.4924%" y="1023.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="4.2424%" y="997" width="0.2020%" height="15" fill="rgb(230,182,32)"/><text x="4.4924%" y="1007.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.3434%" y="981" width="0.1010%" height="15" fill="rgb(242,56,43)"/><text x="4.5934%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="4.3434%" y="965" width="0.1010%" height="15" fill="rgb(233,99,24)"/><text x="4.5934%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 1.01%)</title><rect x="4.1414%" y="1253" width="1.0101%" height="15" fill="rgb(234,209,42)"/><text x="4.3914%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 1.01%)</title><rect x="4.1414%" y="1237" width="1.0101%" height="15" fill="rgb(227,7,12)"/><text x="4.3914%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 1.01%)</title><rect x="4.1414%" y="1221" width="1.0101%" height="15" fill="rgb(245,203,43)"/><text x="4.3914%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="4.4444%" y="1205" width="0.7071%" height="15" fill="rgb(238,205,33)"/><text x="4.6944%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="4.4444%" y="1189" width="0.7071%" height="15" fill="rgb(231,56,7)"/><text x="4.6944%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.71%)</title><rect x="4.4444%" y="1173" width="0.7071%" height="15" fill="rgb(244,186,29)"/><text x="4.6944%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.71%)</title><rect x="4.4444%" y="1157" width="0.7071%" height="15" fill="rgb(234,111,31)"/><text x="4.6944%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="4.4444%" y="1141" width="0.7071%" height="15" fill="rgb(241,149,10)"/><text x="4.6944%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.71%)</title><rect x="4.4444%" y="1125" width="0.7071%" height="15" fill="rgb(249,206,44)"/><text x="4.6944%" y="1135.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.71%)</title><rect x="4.4444%" y="1109" width="0.7071%" height="15" fill="rgb(251,153,30)"/><text x="4.6944%" y="1119.50"></text></g><g><title>_int_malloc (7 samples, 0.71%)</title><rect x="4.4444%" y="1093" width="0.7071%" height="15" fill="rgb(239,152,38)"/><text x="4.6944%" y="1103.50"></text></g><g><title>malloc_consolidate (3 samples, 0.30%)</title><rect x="4.8485%" y="1077" width="0.3030%" height="15" fill="rgb(249,139,47)"/><text x="5.0985%" y="1087.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (2 samples, 0.20%)</title><rect x="5.1515%" y="1253" width="0.2020%" height="15" fill="rgb(244,64,35)"/><text x="5.4015%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (2 samples, 0.20%)</title><rect x="5.1515%" y="1237" width="0.2020%" height="15" fill="rgb(216,46,15)"/><text x="5.4015%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.20%)</title><rect x="5.1515%" y="1221" width="0.2020%" height="15" fill="rgb(250,74,19)"/><text x="5.4015%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="5.1515%" y="1205" width="0.2020%" height="15" fill="rgb(249,42,33)"/><text x="5.4015%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="5.1515%" y="1189" width="0.2020%" height="15" fill="rgb(242,149,17)"/><text x="5.4015%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="5.1515%" y="1173" width="0.2020%" height="15" fill="rgb(244,29,21)"/><text x="5.4015%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (2 samples, 0.20%)</title><rect x="5.1515%" y="1157" width="0.2020%" height="15" fill="rgb(220,130,37)"/><text x="5.4015%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.20%)</title><rect x="5.1515%" y="1141" width="0.2020%" height="15" fill="rgb(211,67,2)"/><text x="5.4015%" y="1151.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.20%)</title><rect x="5.1515%" y="1125" width="0.2020%" height="15" fill="rgb(235,68,52)"/><text x="5.4015%" y="1135.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.20%)</title><rect x="5.1515%" y="1109" width="0.2020%" height="15" fill="rgb(246,142,3)"/><text x="5.4015%" y="1119.50"></text></g><g><title>_int_realloc (2 samples, 0.20%)</title><rect x="5.1515%" y="1093" width="0.2020%" height="15" fill="rgb(241,25,7)"/><text x="5.4015%" y="1103.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="5.1515%" y="1077" width="0.2020%" height="15" fill="rgb(242,119,39)"/><text x="5.4015%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="5.3535%" y="1173" width="0.1010%" height="15" fill="rgb(241,98,45)"/><text x="5.6035%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="5.3535%" y="1157" width="0.1010%" height="15" fill="rgb(254,28,30)"/><text x="5.6035%" y="1167.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.10%)</title><rect x="5.3535%" y="1141" width="0.1010%" height="15" fill="rgb(241,142,54)"/><text x="5.6035%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="5.3535%" y="1125" width="0.1010%" height="15" fill="rgb(222,85,15)"/><text x="5.6035%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="5.3535%" y="1109" width="0.1010%" height="15" fill="rgb(210,85,47)"/><text x="5.6035%" y="1119.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="5.3535%" y="1093" width="0.1010%" height="15" fill="rgb(224,206,25)"/><text x="5.6035%" y="1103.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (14 samples, 1.41%)</title><rect x="4.1414%" y="1269" width="1.4141%" height="15" fill="rgb(243,201,19)"/><text x="4.3914%" y="1279.50"></text></g><g><title>std::env::var (2 samples, 0.20%)</title><rect x="5.3535%" y="1253" width="0.2020%" height="15" fill="rgb(236,59,4)"/><text x="5.6035%" y="1263.50"></text></g><g><title>std::env::_var (2 samples, 0.20%)</title><rect x="5.3535%" y="1237" width="0.2020%" height="15" fill="rgb(254,179,45)"/><text x="5.6035%" y="1247.50"></text></g><g><title>std::env::var_os (2 samples, 0.20%)</title><rect x="5.3535%" y="1221" width="0.2020%" height="15" fill="rgb(226,14,10)"/><text x="5.6035%" y="1231.50"></text></g><g><title>std::env::_var_os (2 samples, 0.20%)</title><rect x="5.3535%" y="1205" width="0.2020%" height="15" fill="rgb(244,27,41)"/><text x="5.6035%" y="1215.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.20%)</title><rect x="5.3535%" y="1189" width="0.2020%" height="15" fill="rgb(235,35,32)"/><text x="5.6035%" y="1199.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 0.10%)</title><rect x="5.4545%" y="1173" width="0.1010%" height="15" fill="rgb(218,68,31)"/><text x="5.7045%" y="1183.50"></text></g><g><title>&lt;&amp;str as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.10%)</title><rect x="5.4545%" y="1157" width="0.1010%" height="15" fill="rgb(207,120,37)"/><text x="5.7045%" y="1167.50"></text></g><g><title>polar::vm::PolarVirtualMachine::is_subspecializer (1 samples, 0.10%)</title><rect x="5.5556%" y="1269" width="0.1010%" height="15" fill="rgb(227,98,0)"/><text x="5.8056%" y="1279.50"></text></g><g><title>polar::vm::PolarVirtualMachine::instantiate_externals (1 samples, 0.10%)</title><rect x="5.5556%" y="1253" width="0.1010%" height="15" fill="rgb(207,7,3)"/><text x="5.8056%" y="1263.50"></text></g><g><title>polar::vm::PolarVirtualMachine::instantiate_externals::instantiate_map (1 samples, 0.10%)</title><rect x="5.5556%" y="1237" width="0.1010%" height="15" fill="rgb(206,98,19)"/><text x="5.8056%" y="1247.50"></text></g><g><title>polar::types::Term::map (1 samples, 0.10%)</title><rect x="5.5556%" y="1221" width="0.1010%" height="15" fill="rgb(217,5,26)"/><text x="5.8056%" y="1231.50"></text></g><g><title>polar::types::Term::map (1 samples, 0.10%)</title><rect x="5.5556%" y="1205" width="0.1010%" height="15" fill="rgb(235,190,38)"/><text x="5.8056%" y="1215.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.5556%" y="1189" width="0.1010%" height="15" fill="rgb(247,86,24)"/><text x="5.8056%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.6566%" y="693" width="0.1010%" height="15" fill="rgb(205,101,16)"/><text x="5.9066%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="5.6566%" y="677" width="0.1010%" height="15" fill="rgb(246,168,33)"/><text x="5.9066%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="5.6566%" y="661" width="0.1010%" height="15" fill="rgb(231,114,1)"/><text x="5.9066%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="5.6566%" y="645" width="0.1010%" height="15" fill="rgb(207,184,53)"/><text x="5.9066%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.6566%" y="629" width="0.1010%" height="15" fill="rgb(224,95,51)"/><text x="5.9066%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.6566%" y="613" width="0.1010%" height="15" fill="rgb(212,188,45)"/><text x="5.9066%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="5.6566%" y="597" width="0.1010%" height="15" fill="rgb(223,154,38)"/><text x="5.9066%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="5.6566%" y="581" width="0.1010%" height="15" fill="rgb(251,22,52)"/><text x="5.9066%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="1253" width="0.2020%" height="15" fill="rgb(229,209,22)"/><text x="5.9066%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="5.6566%" y="1237" width="0.2020%" height="15" fill="rgb(234,138,34)"/><text x="5.9066%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="5.6566%" y="1221" width="0.2020%" height="15" fill="rgb(212,95,11)"/><text x="5.9066%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="5.6566%" y="1205" width="0.2020%" height="15" fill="rgb(240,179,47)"/><text x="5.9066%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="5.6566%" y="1189" width="0.2020%" height="15" fill="rgb(240,163,11)"/><text x="5.9066%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="5.6566%" y="1173" width="0.2020%" height="15" fill="rgb(236,37,12)"/><text x="5.9066%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="5.6566%" y="1157" width="0.2020%" height="15" fill="rgb(232,164,16)"/><text x="5.9066%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="5.6566%" y="1141" width="0.2020%" height="15" fill="rgb(244,205,15)"/><text x="5.9066%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="5.6566%" y="1125" width="0.2020%" height="15" fill="rgb(223,117,47)"/><text x="5.9066%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="5.6566%" y="1109" width="0.2020%" height="15" fill="rgb(244,107,35)"/><text x="5.9066%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="5.6566%" y="1093" width="0.2020%" height="15" fill="rgb(205,140,8)"/><text x="5.9066%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="5.6566%" y="1077" width="0.2020%" height="15" fill="rgb(228,84,46)"/><text x="5.9066%" y="1087.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="5.6566%" y="1061" width="0.2020%" height="15" fill="rgb(254,188,9)"/><text x="5.9066%" y="1071.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="5.6566%" y="1045" width="0.2020%" height="15" fill="rgb(206,112,54)"/><text x="5.9066%" y="1055.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="1029" width="0.2020%" height="15" fill="rgb(216,84,49)"/><text x="5.9066%" y="1039.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="1013" width="0.2020%" height="15" fill="rgb(214,194,35)"/><text x="5.9066%" y="1023.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="997" width="0.2020%" height="15" fill="rgb(249,28,3)"/><text x="5.9066%" y="1007.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="981" width="0.2020%" height="15" fill="rgb(222,56,52)"/><text x="5.9066%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="965" width="0.2020%" height="15" fill="rgb(245,217,50)"/><text x="5.9066%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="5.6566%" y="949" width="0.2020%" height="15" fill="rgb(213,201,24)"/><text x="5.9066%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="5.6566%" y="933" width="0.2020%" height="15" fill="rgb(248,116,28)"/><text x="5.9066%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="5.6566%" y="917" width="0.2020%" height="15" fill="rgb(219,72,43)"/><text x="5.9066%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="5.6566%" y="901" width="0.2020%" height="15" fill="rgb(209,138,14)"/><text x="5.9066%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="5.6566%" y="885" width="0.2020%" height="15" fill="rgb(222,18,33)"/><text x="5.9066%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="5.6566%" y="869" width="0.2020%" height="15" fill="rgb(213,199,7)"/><text x="5.9066%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="5.6566%" y="853" width="0.2020%" height="15" fill="rgb(250,110,10)"/><text x="5.9066%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="5.6566%" y="837" width="0.2020%" height="15" fill="rgb(248,123,6)"/><text x="5.9066%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="5.6566%" y="821" width="0.2020%" height="15" fill="rgb(206,91,31)"/><text x="5.9066%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="5.6566%" y="805" width="0.2020%" height="15" fill="rgb(211,154,13)"/><text x="5.9066%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="5.6566%" y="789" width="0.2020%" height="15" fill="rgb(225,148,7)"/><text x="5.9066%" y="799.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="5.6566%" y="773" width="0.2020%" height="15" fill="rgb(220,160,43)"/><text x="5.9066%" y="783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="5.6566%" y="757" width="0.2020%" height="15" fill="rgb(213,52,39)"/><text x="5.9066%" y="767.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="741" width="0.2020%" height="15" fill="rgb(243,137,7)"/><text x="5.9066%" y="751.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="725" width="0.2020%" height="15" fill="rgb(230,79,13)"/><text x="5.9066%" y="735.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="5.6566%" y="709" width="0.2020%" height="15" fill="rgb(247,105,23)"/><text x="5.9066%" y="719.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.7576%" y="693" width="0.1010%" height="15" fill="rgb(223,179,41)"/><text x="6.0076%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.7576%" y="677" width="0.1010%" height="15" fill="rgb(218,9,34)"/><text x="6.0076%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.7576%" y="661" width="0.1010%" height="15" fill="rgb(222,106,8)"/><text x="6.0076%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="5.7576%" y="645" width="0.1010%" height="15" fill="rgb(211,220,0)"/><text x="6.0076%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="5.7576%" y="629" width="0.1010%" height="15" fill="rgb(229,52,16)"/><text x="6.0076%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="5.7576%" y="613" width="0.1010%" height="15" fill="rgb(212,155,18)"/><text x="6.0076%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="5.7576%" y="597" width="0.1010%" height="15" fill="rgb(242,21,14)"/><text x="6.0076%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="5.7576%" y="581" width="0.1010%" height="15" fill="rgb(222,19,48)"/><text x="6.0076%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="5.7576%" y="565" width="0.1010%" height="15" fill="rgb(232,45,27)"/><text x="6.0076%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="5.7576%" y="549" width="0.1010%" height="15" fill="rgb(249,103,42)"/><text x="6.0076%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="5.7576%" y="533" width="0.1010%" height="15" fill="rgb(246,81,33)"/><text x="6.0076%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="5.7576%" y="517" width="0.1010%" height="15" fill="rgb(252,33,42)"/><text x="6.0076%" y="527.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (18 samples, 1.82%)</title><rect x="4.1414%" y="1573" width="1.8182%" height="15" fill="rgb(209,212,41)"/><text x="4.3914%" y="1583.50">&lt;..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (18 samples, 1.82%)</title><rect x="4.1414%" y="1557" width="1.8182%" height="15" fill="rgb(207,154,6)"/><text x="4.3914%" y="1567.50">c..</text></g><g><title>bench::too_many_predicates::_{{closure}} (18 samples, 1.82%)</title><rect x="4.1414%" y="1541" width="1.8182%" height="15" fill="rgb(223,64,47)"/><text x="4.3914%" y="1551.50">b..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (18 samples, 1.82%)</title><rect x="4.1414%" y="1525" width="1.8182%" height="15" fill="rgb(211,161,38)"/><text x="4.3914%" y="1535.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 1.82%)</title><rect x="4.1414%" y="1509" width="1.8182%" height="15" fill="rgb(219,138,40)"/><text x="4.3914%" y="1519.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 1.82%)</title><rect x="4.1414%" y="1493" width="1.8182%" height="15" fill="rgb(241,228,46)"/><text x="4.3914%" y="1503.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 1.82%)</title><rect x="4.1414%" y="1477" width="1.8182%" height="15" fill="rgb(223,209,38)"/><text x="4.3914%" y="1487.50">c..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 1.82%)</title><rect x="4.1414%" y="1461" width="1.8182%" height="15" fill="rgb(236,164,45)"/><text x="4.3914%" y="1471.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 1.82%)</title><rect x="4.1414%" y="1445" width="1.8182%" height="15" fill="rgb(231,15,5)"/><text x="4.3914%" y="1455.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 1.82%)</title><rect x="4.1414%" y="1429" width="1.8182%" height="15" fill="rgb(252,35,15)"/><text x="4.3914%" y="1439.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (18 samples, 1.82%)</title><rect x="4.1414%" y="1413" width="1.8182%" height="15" fill="rgb(248,181,18)"/><text x="4.3914%" y="1423.50">c..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (18 samples, 1.82%)</title><rect x="4.1414%" y="1397" width="1.8182%" height="15" fill="rgb(233,39,42)"/><text x="4.3914%" y="1407.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 1.82%)</title><rect x="4.1414%" y="1381" width="1.8182%" height="15" fill="rgb(238,110,33)"/><text x="4.3914%" y="1391.50">c..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (18 samples, 1.82%)</title><rect x="4.1414%" y="1365" width="1.8182%" height="15" fill="rgb(233,195,10)"/><text x="4.3914%" y="1375.50">b..</text></g><g><title>bench::Runner::run (18 samples, 1.82%)</title><rect x="4.1414%" y="1349" width="1.8182%" height="15" fill="rgb(254,105,3)"/><text x="4.3914%" y="1359.50">b..</text></g><g><title>bench::Runner::next (18 samples, 1.82%)</title><rect x="4.1414%" y="1333" width="1.8182%" height="15" fill="rgb(221,225,9)"/><text x="4.3914%" y="1343.50">b..</text></g><g><title>polar::polar::Polar::query (18 samples, 1.82%)</title><rect x="4.1414%" y="1317" width="1.8182%" height="15" fill="rgb(224,227,45)"/><text x="4.3914%" y="1327.50">p..</text></g><g><title>polar::vm::PolarVirtualMachine::run (18 samples, 1.82%)</title><rect x="4.1414%" y="1301" width="1.8182%" height="15" fill="rgb(229,198,43)"/><text x="4.3914%" y="1311.50">p..</text></g><g><title>polar::vm::PolarVirtualMachine::next (18 samples, 1.82%)</title><rect x="4.1414%" y="1285" width="1.8182%" height="15" fill="rgb(206,209,35)"/><text x="4.3914%" y="1295.50">p..</text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (3 samples, 0.30%)</title><rect x="5.6566%" y="1269" width="0.3030%" height="15" fill="rgb(245,195,53)"/><text x="5.9066%" y="1279.50"></text></g><g><title>polar::vm::PolarVirtualMachine::choose (1 samples, 0.10%)</title><rect x="5.8586%" y="1253" width="0.1010%" height="15" fill="rgb(240,92,26)"/><text x="6.1086%" y="1263.50"></text></g><g><title>polar::vm::PolarVirtualMachine::push_choice (1 samples, 0.10%)</title><rect x="5.8586%" y="1237" width="0.1010%" height="15" fill="rgb(207,40,23)"/><text x="6.1086%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8586%" y="1221" width="0.1010%" height="15" fill="rgb(223,111,35)"/><text x="6.1086%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="5.8586%" y="1205" width="0.1010%" height="15" fill="rgb(229,147,28)"/><text x="6.1086%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="5.8586%" y="1189" width="0.1010%" height="15" fill="rgb(211,29,28)"/><text x="6.1086%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="5.8586%" y="1173" width="0.1010%" height="15" fill="rgb(228,72,33)"/><text x="6.1086%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8586%" y="1157" width="0.1010%" height="15" fill="rgb(205,214,31)"/><text x="6.1086%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8586%" y="1141" width="0.1010%" height="15" fill="rgb(224,111,15)"/><text x="6.1086%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="5.8586%" y="1125" width="0.1010%" height="15" fill="rgb(253,21,26)"/><text x="6.1086%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8586%" y="1109" width="0.1010%" height="15" fill="rgb(245,139,43)"/><text x="6.1086%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8586%" y="1093" width="0.1010%" height="15" fill="rgb(252,170,7)"/><text x="6.1086%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="5.8586%" y="1077" width="0.1010%" height="15" fill="rgb(231,118,14)"/><text x="6.1086%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="5.8586%" y="1061" width="0.1010%" height="15" fill="rgb(238,83,0)"/><text x="6.1086%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="5.8586%" y="1045" width="0.1010%" height="15" fill="rgb(221,39,39)"/><text x="6.1086%" y="1055.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="5.8586%" y="1029" width="0.1010%" height="15" fill="rgb(222,119,46)"/><text x="6.1086%" y="1039.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="5.8586%" y="1013" width="0.1010%" height="15" fill="rgb(222,165,49)"/><text x="6.1086%" y="1023.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8586%" y="997" width="0.1010%" height="15" fill="rgb(219,113,52)"/><text x="6.1086%" y="1007.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8586%" y="981" width="0.1010%" height="15" fill="rgb(214,7,15)"/><text x="6.1086%" y="991.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8586%" y="965" width="0.1010%" height="15" fill="rgb(235,32,4)"/><text x="6.1086%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="5.8586%" y="949" width="0.1010%" height="15" fill="rgb(238,90,54)"/><text x="6.1086%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="5.8586%" y="933" width="0.1010%" height="15" fill="rgb(213,208,19)"/><text x="6.1086%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="5.8586%" y="917" width="0.1010%" height="15" fill="rgb(233,156,4)"/><text x="6.1086%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="5.8586%" y="901" width="0.1010%" height="15" fill="rgb(207,194,5)"/><text x="6.1086%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8586%" y="885" width="0.1010%" height="15" fill="rgb(206,111,30)"/><text x="6.1086%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="5.8586%" y="869" width="0.1010%" height="15" fill="rgb(243,70,54)"/><text x="6.1086%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="5.8586%" y="853" width="0.1010%" height="15" fill="rgb(242,28,8)"/><text x="6.1086%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8586%" y="837" width="0.1010%" height="15" fill="rgb(219,106,18)"/><text x="6.1086%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="5.8586%" y="821" width="0.1010%" height="15" fill="rgb(244,222,10)"/><text x="6.1086%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="5.8586%" y="805" width="0.1010%" height="15" fill="rgb(236,179,52)"/><text x="6.1086%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="5.8586%" y="789" width="0.1010%" height="15" fill="rgb(213,23,39)"/><text x="6.1086%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="5.8586%" y="773" width="0.1010%" height="15" fill="rgb(238,48,10)"/><text x="6.1086%" y="783.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="5.8586%" y="757" width="0.1010%" height="15" fill="rgb(251,196,23)"/><text x="6.1086%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="5.8586%" y="741" width="0.1010%" height="15" fill="rgb(250,152,24)"/><text x="6.1086%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="5.8586%" y="725" width="0.1010%" height="15" fill="rgb(209,150,17)"/><text x="6.1086%" y="735.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="5.8586%" y="709" width="0.1010%" height="15" fill="rgb(234,202,34)"/><text x="6.1086%" y="719.50"></text></g><g><title>__spawni_child (2 samples, 0.20%)</title><rect x="5.9596%" y="1573" width="0.2020%" height="15" fill="rgb(253,148,53)"/><text x="6.2096%" y="1583.50"></text></g><g><title>__GI___libc_sigaction (2 samples, 0.20%)</title><rect x="5.9596%" y="1557" width="0.2020%" height="15" fill="rgb(218,129,16)"/><text x="6.2096%" y="1567.50"></text></g><g><title>[unknown] (2 samples, 0.20%)</title><rect x="5.9596%" y="1541" width="0.2020%" height="15" fill="rgb(216,85,19)"/><text x="6.2096%" y="1551.50"></text></g><g><title>[unknown] (2 samples, 0.20%)</title><rect x="5.9596%" y="1525" width="0.2020%" height="15" fill="rgb(235,228,7)"/><text x="6.2096%" y="1535.50"></text></g><g><title>[unknown] (2 samples, 0.20%)</title><rect x="5.9596%" y="1509" width="0.2020%" height="15" fill="rgb(245,175,0)"/><text x="6.2096%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="6.0606%" y="1493" width="0.1010%" height="15" fill="rgb(208,168,36)"/><text x="6.3106%" y="1503.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.40%)</title><rect x="6.4646%" y="869" width="0.4040%" height="15" fill="rgb(246,171,24)"/><text x="6.7146%" y="879.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="6.7677%" y="853" width="0.1010%" height="15" fill="rgb(215,142,24)"/><text x="7.0177%" y="863.50"></text></g><g><title>alloc::string::String::shrink_to_fit (5 samples, 0.51%)</title><rect x="6.4646%" y="965" width="0.5051%" height="15" fill="rgb(250,187,7)"/><text x="6.7146%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::shrink_to_fit (5 samples, 0.51%)</title><rect x="6.4646%" y="949" width="0.5051%" height="15" fill="rgb(228,66,33)"/><text x="6.7146%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (5 samples, 0.51%)</title><rect x="6.4646%" y="933" width="0.5051%" height="15" fill="rgb(234,215,21)"/><text x="6.7146%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (5 samples, 0.51%)</title><rect x="6.4646%" y="917" width="0.5051%" height="15" fill="rgb(222,191,20)"/><text x="6.7146%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::shrink (5 samples, 0.51%)</title><rect x="6.4646%" y="901" width="0.5051%" height="15" fill="rgb(245,79,54)"/><text x="6.7146%" y="911.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.51%)</title><rect x="6.4646%" y="885" width="0.5051%" height="15" fill="rgb(240,10,37)"/><text x="6.7146%" y="895.50"></text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="6.8687%" y="869" width="0.1010%" height="15" fill="rgb(214,192,32)"/><text x="7.1187%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="6.8687%" y="853" width="0.1010%" height="15" fill="rgb(209,36,54)"/><text x="7.1187%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="7.0707%" y="933" width="0.1010%" height="15" fill="rgb(220,10,11)"/><text x="7.3207%" y="943.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="7.3737%" y="901" width="0.1010%" height="15" fill="rgb(221,106,17)"/><text x="7.6237%" y="911.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (4 samples, 0.40%)</title><rect x="7.3737%" y="917" width="0.4040%" height="15" fill="rgb(251,142,44)"/><text x="7.6237%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="7.4747%" y="901" width="0.3030%" height="15" fill="rgb(238,13,15)"/><text x="7.7247%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="7.4747%" y="885" width="0.3030%" height="15" fill="rgb(208,107,27)"/><text x="7.7247%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="7.4747%" y="869" width="0.3030%" height="15" fill="rgb(205,136,37)"/><text x="7.7247%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="7.4747%" y="853" width="0.3030%" height="15" fill="rgb(250,205,27)"/><text x="7.7247%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.30%)</title><rect x="7.4747%" y="837" width="0.3030%" height="15" fill="rgb(210,80,43)"/><text x="7.7247%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.30%)</title><rect x="7.4747%" y="821" width="0.3030%" height="15" fill="rgb(247,160,36)"/><text x="7.7247%" y="831.50"></text></g><g><title>_int_free (3 samples, 0.30%)</title><rect x="7.4747%" y="805" width="0.3030%" height="15" fill="rgb(234,13,49)"/><text x="7.7247%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="7.7778%" y="789" width="0.1010%" height="15" fill="rgb(234,122,0)"/><text x="8.0278%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="7.7778%" y="773" width="0.1010%" height="15" fill="rgb(207,146,38)"/><text x="8.0278%" y="783.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="7.8788%" y="693" width="0.1010%" height="15" fill="rgb(207,177,25)"/><text x="8.1288%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="7.8788%" y="677" width="0.1010%" height="15" fill="rgb(211,178,42)"/><text x="8.1288%" y="687.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (3 samples, 0.30%)</title><rect x="7.7778%" y="885" width="0.3030%" height="15" fill="rgb(230,69,54)"/><text x="8.0278%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.30%)</title><rect x="7.7778%" y="869" width="0.3030%" height="15" fill="rgb(214,135,41)"/><text x="8.0278%" y="879.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.30%)</title><rect x="7.7778%" y="853" width="0.3030%" height="15" fill="rgb(237,67,25)"/><text x="8.0278%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.30%)</title><rect x="7.7778%" y="837" width="0.3030%" height="15" fill="rgb(222,189,50)"/><text x="8.0278%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="7.7778%" y="821" width="0.3030%" height="15" fill="rgb(245,148,34)"/><text x="8.0278%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="7.7778%" y="805" width="0.3030%" height="15" fill="rgb(222,29,6)"/><text x="8.0278%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="7.8788%" y="789" width="0.2020%" height="15" fill="rgb(221,189,43)"/><text x="8.1288%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="7.8788%" y="773" width="0.2020%" height="15" fill="rgb(207,36,27)"/><text x="8.1288%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="7.8788%" y="757" width="0.2020%" height="15" fill="rgb(217,90,24)"/><text x="8.1288%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="7.8788%" y="741" width="0.2020%" height="15" fill="rgb(224,66,35)"/><text x="8.1288%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="7.8788%" y="725" width="0.2020%" height="15" fill="rgb(221,13,50)"/><text x="8.1288%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="7.8788%" y="709" width="0.2020%" height="15" fill="rgb(236,68,49)"/><text x="8.1288%" y="719.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="7.9798%" y="693" width="0.1010%" height="15" fill="rgb(229,146,28)"/><text x="8.2298%" y="703.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (5 samples, 0.51%)</title><rect x="7.7778%" y="917" width="0.5051%" height="15" fill="rgb(225,31,38)"/><text x="8.0278%" y="927.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (5 samples, 0.51%)</title><rect x="7.7778%" y="901" width="0.5051%" height="15" fill="rgb(250,208,3)"/><text x="8.0278%" y="911.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.20%)</title><rect x="8.0808%" y="885" width="0.2020%" height="15" fill="rgb(246,54,23)"/><text x="8.3308%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="8.0808%" y="869" width="0.2020%" height="15" fill="rgb(243,76,11)"/><text x="8.3308%" y="879.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="8.2828%" y="917" width="0.1010%" height="15" fill="rgb(245,21,50)"/><text x="8.5328%" y="927.50"></text></g><g><title>__rust_dealloc (2 samples, 0.20%)</title><rect x="8.3838%" y="917" width="0.2020%" height="15" fill="rgb(228,9,43)"/><text x="8.6338%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="8.5859%" y="869" width="0.1010%" height="15" fill="rgb(208,100,47)"/><text x="8.8359%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="8.5859%" y="853" width="0.1010%" height="15" fill="rgb(232,26,8)"/><text x="8.8359%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="8.5859%" y="837" width="0.1010%" height="15" fill="rgb(216,166,38)"/><text x="8.8359%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="8.5859%" y="821" width="0.1010%" height="15" fill="rgb(251,202,51)"/><text x="8.8359%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (5 samples, 0.51%)</title><rect x="8.5859%" y="917" width="0.5051%" height="15" fill="rgb(254,216,34)"/><text x="8.8359%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.51%)</title><rect x="8.5859%" y="901" width="0.5051%" height="15" fill="rgb(251,32,27)"/><text x="8.8359%" y="911.50"></text></g><g><title>alloc::str::join_generic_copy (5 samples, 0.51%)</title><rect x="8.5859%" y="885" width="0.5051%" height="15" fill="rgb(208,127,28)"/><text x="8.8359%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.40%)</title><rect x="8.6869%" y="869" width="0.4040%" height="15" fill="rgb(224,137,22)"/><text x="8.9369%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.40%)</title><rect x="8.6869%" y="853" width="0.4040%" height="15" fill="rgb(254,70,32)"/><text x="8.9369%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.20%)</title><rect x="8.8889%" y="837" width="0.2020%" height="15" fill="rgb(229,75,37)"/><text x="9.1389%" y="847.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="9.5960%" y="709" width="0.1010%" height="15" fill="rgb(252,64,23)"/><text x="9.8460%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (3 samples, 0.30%)</title><rect x="9.4949%" y="741" width="0.3030%" height="15" fill="rgb(232,162,48)"/><text x="9.7449%" y="751.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.20%)</title><rect x="9.5960%" y="725" width="0.2020%" height="15" fill="rgb(246,160,12)"/><text x="9.8460%" y="735.50"></text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="9.6970%" y="709" width="0.1010%" height="15" fill="rgb(247,166,0)"/><text x="9.9470%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="9.6970%" y="693" width="0.1010%" height="15" fill="rgb(249,219,21)"/><text x="9.9470%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (4 samples, 0.40%)</title><rect x="9.4949%" y="757" width="0.4040%" height="15" fill="rgb(205,209,3)"/><text x="9.7449%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_memory (1 samples, 0.10%)</title><rect x="9.7980%" y="741" width="0.1010%" height="15" fill="rgb(243,44,1)"/><text x="10.0480%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (5 samples, 0.51%)</title><rect x="9.4949%" y="805" width="0.5051%" height="15" fill="rgb(206,159,16)"/><text x="9.7449%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.51%)</title><rect x="9.4949%" y="789" width="0.5051%" height="15" fill="rgb(244,77,30)"/><text x="9.7449%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.51%)</title><rect x="9.4949%" y="773" width="0.5051%" height="15" fill="rgb(218,69,12)"/><text x="9.7449%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="9.8990%" y="757" width="0.1010%" height="15" fill="rgb(212,87,7)"/><text x="10.1490%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.10%)</title><rect x="10.0000%" y="805" width="0.1010%" height="15" fill="rgb(245,114,25)"/><text x="10.2500%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.10%)</title><rect x="10.0000%" y="789" width="0.1010%" height="15" fill="rgb(210,61,42)"/><text x="10.2500%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 1.01%)</title><rect x="9.2929%" y="885" width="1.0101%" height="15" fill="rgb(211,52,33)"/><text x="9.5429%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.81%)</title><rect x="9.4949%" y="869" width="0.8081%" height="15" fill="rgb(234,58,33)"/><text x="9.7449%" y="879.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.81%)</title><rect x="9.4949%" y="853" width="0.8081%" height="15" fill="rgb(220,115,36)"/><text x="9.7449%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.81%)</title><rect x="9.4949%" y="837" width="0.8081%" height="15" fill="rgb(243,153,54)"/><text x="9.7449%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.81%)</title><rect x="9.4949%" y="821" width="0.8081%" height="15" fill="rgb(251,47,18)"/><text x="9.7449%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.20%)</title><rect x="10.1010%" y="805" width="0.2020%" height="15" fill="rgb(242,102,42)"/><text x="10.3510%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.20%)</title><rect x="10.1010%" y="789" width="0.2020%" height="15" fill="rgb(234,31,38)"/><text x="10.3510%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.20%)</title><rect x="10.1010%" y="773" width="0.2020%" height="15" fill="rgb(221,117,51)"/><text x="10.3510%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (2 samples, 0.20%)</title><rect x="10.3030%" y="885" width="0.2020%" height="15" fill="rgb(212,20,18)"/><text x="10.5530%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.20%)</title><rect x="10.3030%" y="869" width="0.2020%" height="15" fill="rgb(245,133,36)"/><text x="10.5530%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.20%)</title><rect x="10.3030%" y="853" width="0.2020%" height="15" fill="rgb(212,6,19)"/><text x="10.5530%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.20%)</title><rect x="10.3030%" y="837" width="0.2020%" height="15" fill="rgb(218,1,36)"/><text x="10.5530%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.20%)</title><rect x="10.3030%" y="821" width="0.2020%" height="15" fill="rgb(246,84,54)"/><text x="10.5530%" y="831.50"></text></g><g><title>&lt;polar::vm::Goal as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="10.5051%" y="885" width="0.1010%" height="15" fill="rgb(242,110,6)"/><text x="10.7551%" y="895.50"></text></g><g><title>core::fmt::Formatter::debug_tuple (1 samples, 0.10%)</title><rect x="10.5051%" y="869" width="0.1010%" height="15" fill="rgb(214,47,5)"/><text x="10.7551%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.10%)</title><rect x="10.6061%" y="885" width="0.1010%" height="15" fill="rgb(218,159,25)"/><text x="10.8561%" y="895.50"></text></g><g><title>core::fmt::Formatter::write_fmt (17 samples, 1.72%)</title><rect x="9.0909%" y="917" width="1.7172%" height="15" fill="rgb(215,211,28)"/><text x="9.3409%" y="927.50"></text></g><g><title>core::fmt::write (16 samples, 1.62%)</title><rect x="9.1919%" y="901" width="1.6162%" height="15" fill="rgb(238,59,32)"/><text x="9.4419%" y="911.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.10%)</title><rect x="10.7071%" y="885" width="0.1010%" height="15" fill="rgb(226,82,3)"/><text x="10.9571%" y="895.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="10.7071%" y="869" width="0.1010%" height="15" fill="rgb(240,164,32)"/><text x="10.9571%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="10.7071%" y="853" width="0.1010%" height="15" fill="rgb(232,46,7)"/><text x="10.9571%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="10.8081%" y="757" width="0.2020%" height="15" fill="rgb(229,129,53)"/><text x="11.0581%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="10.8081%" y="741" width="0.2020%" height="15" fill="rgb(234,188,29)"/><text x="11.0581%" y="751.50"></text></g><g><title>core::ptr::write (2 samples, 0.20%)</title><rect x="10.8081%" y="725" width="0.2020%" height="15" fill="rgb(246,141,4)"/><text x="11.0581%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="11.2121%" y="725" width="0.1010%" height="15" fill="rgb(229,23,39)"/><text x="11.4621%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="11.3131%" y="725" width="0.1010%" height="15" fill="rgb(206,12,3)"/><text x="11.5631%" y="735.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.20%)</title><rect x="11.5152%" y="709" width="0.2020%" height="15" fill="rgb(252,226,20)"/><text x="11.7652%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.10%)</title><rect x="11.6162%" y="693" width="0.1010%" height="15" fill="rgb(216,123,35)"/><text x="11.8662%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.10%)</title><rect x="11.6162%" y="677" width="0.1010%" height="15" fill="rgb(212,68,40)"/><text x="11.8662%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="11.6162%" y="661" width="0.1010%" height="15" fill="rgb(254,125,32)"/><text x="11.8662%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="11.6162%" y="645" width="0.1010%" height="15" fill="rgb(253,97,22)"/><text x="11.8662%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="11.6162%" y="629" width="0.1010%" height="15" fill="rgb(241,101,14)"/><text x="11.8662%" y="639.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="11.6162%" y="613" width="0.1010%" height="15" fill="rgb(238,103,29)"/><text x="11.8662%" y="623.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.40%)</title><rect x="11.4141%" y="725" width="0.4040%" height="15" fill="rgb(233,195,47)"/><text x="11.6641%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="11.7172%" y="709" width="0.1010%" height="15" fill="rgb(246,218,30)"/><text x="11.9672%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="11.7172%" y="693" width="0.1010%" height="15" fill="rgb(219,145,47)"/><text x="11.9672%" y="703.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (11 samples, 1.11%)</title><rect x="11.0101%" y="741" width="1.1111%" height="15" fill="rgb(243,12,26)"/><text x="11.2601%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="11.8182%" y="725" width="0.3030%" height="15" fill="rgb(214,87,16)"/><text x="12.0682%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="11.8182%" y="709" width="0.3030%" height="15" fill="rgb(208,99,42)"/><text x="12.0682%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="11.8182%" y="693" width="0.3030%" height="15" fill="rgb(253,99,2)"/><text x="12.0682%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="11.8182%" y="677" width="0.3030%" height="15" fill="rgb(220,168,23)"/><text x="12.0682%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.30%)</title><rect x="11.8182%" y="661" width="0.3030%" height="15" fill="rgb(242,38,24)"/><text x="12.0682%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.30%)</title><rect x="11.8182%" y="645" width="0.3030%" height="15" fill="rgb(225,182,9)"/><text x="12.0682%" y="655.50"></text></g><g><title>_int_free (3 samples, 0.30%)</title><rect x="11.8182%" y="629" width="0.3030%" height="15" fill="rgb(243,178,37)"/><text x="12.0682%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 1.41%)</title><rect x="10.8081%" y="917" width="1.4141%" height="15" fill="rgb(232,139,19)"/><text x="11.0581%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 1.41%)</title><rect x="10.8081%" y="901" width="1.4141%" height="15" fill="rgb(225,201,24)"/><text x="11.0581%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (14 samples, 1.41%)</title><rect x="10.8081%" y="885" width="1.4141%" height="15" fill="rgb(221,47,46)"/><text x="11.0581%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 1.41%)</title><rect x="10.8081%" y="869" width="1.4141%" height="15" fill="rgb(249,23,13)"/><text x="11.0581%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 1.41%)</title><rect x="10.8081%" y="853" width="1.4141%" height="15" fill="rgb(219,9,5)"/><text x="11.0581%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.41%)</title><rect x="10.8081%" y="837" width="1.4141%" height="15" fill="rgb(254,171,16)"/><text x="11.0581%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 1.41%)</title><rect x="10.8081%" y="821" width="1.4141%" height="15" fill="rgb(230,171,20)"/><text x="11.0581%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 1.41%)</title><rect x="10.8081%" y="805" width="1.4141%" height="15" fill="rgb(210,71,41)"/><text x="11.0581%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (14 samples, 1.41%)</title><rect x="10.8081%" y="789" width="1.4141%" height="15" fill="rgb(206,173,20)"/><text x="11.0581%" y="799.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (14 samples, 1.41%)</title><rect x="10.8081%" y="773" width="1.4141%" height="15" fill="rgb(233,88,34)"/><text x="11.0581%" y="783.50"></text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (12 samples, 1.21%)</title><rect x="11.0101%" y="757" width="1.2121%" height="15" fill="rgb(223,209,46)"/><text x="11.2601%" y="767.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="12.1212%" y="741" width="0.1010%" height="15" fill="rgb(250,43,18)"/><text x="12.3712%" y="751.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="12.1212%" y="725" width="0.1010%" height="15" fill="rgb(208,13,10)"/><text x="12.3712%" y="735.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="12.1212%" y="709" width="0.1010%" height="15" fill="rgb(212,200,36)"/><text x="12.3712%" y="719.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.10%)</title><rect x="12.1212%" y="693" width="0.1010%" height="15" fill="rgb(225,90,30)"/><text x="12.3712%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.10%)</title><rect x="12.1212%" y="677" width="0.1010%" height="15" fill="rgb(236,182,39)"/><text x="12.3712%" y="687.50"></text></g><g><title>__GI___libc_free (2 samples, 0.20%)</title><rect x="12.2222%" y="773" width="0.2020%" height="15" fill="rgb(212,144,35)"/><text x="12.4722%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="12.2222%" y="901" width="0.3030%" height="15" fill="rgb(228,63,44)"/><text x="12.4722%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="12.2222%" y="885" width="0.3030%" height="15" fill="rgb(228,109,6)"/><text x="12.4722%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="12.2222%" y="869" width="0.3030%" height="15" fill="rgb(238,117,24)"/><text x="12.4722%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="12.2222%" y="853" width="0.3030%" height="15" fill="rgb(242,26,26)"/><text x="12.4722%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="12.2222%" y="837" width="0.3030%" height="15" fill="rgb(221,92,48)"/><text x="12.4722%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="12.2222%" y="821" width="0.3030%" height="15" fill="rgb(209,209,32)"/><text x="12.4722%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.30%)</title><rect x="12.2222%" y="805" width="0.3030%" height="15" fill="rgb(221,70,22)"/><text x="12.4722%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.30%)</title><rect x="12.2222%" y="789" width="0.3030%" height="15" fill="rgb(248,145,5)"/><text x="12.4722%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="12.4242%" y="773" width="0.1010%" height="15" fill="rgb(226,116,26)"/><text x="12.6742%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (61 samples, 6.16%)</title><rect x="6.4646%" y="981" width="6.1616%" height="15" fill="rgb(244,5,17)"/><text x="6.7146%" y="991.50">&lt;T as al..</text></g><g><title>core::fmt::Write::write_fmt (56 samples, 5.66%)</title><rect x="6.9697%" y="965" width="5.6566%" height="15" fill="rgb(252,159,33)"/><text x="7.2197%" y="975.50">core::f..</text></g><g><title>core::fmt::write (56 samples, 5.66%)</title><rect x="6.9697%" y="949" width="5.6566%" height="15" fill="rgb(206,71,0)"/><text x="7.2197%" y="959.50">core::f..</text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (54 samples, 5.45%)</title><rect x="7.1717%" y="933" width="5.4545%" height="15" fill="rgb(233,118,54)"/><text x="7.4217%" y="943.50">polar::..</text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="12.2222%" y="917" width="0.4040%" height="15" fill="rgb(234,83,48)"/><text x="12.4722%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="12.5253%" y="901" width="0.1010%" height="15" fill="rgb(228,3,54)"/><text x="12.7753%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="12.5253%" y="885" width="0.1010%" height="15" fill="rgb(226,155,13)"/><text x="12.7753%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="12.5253%" y="869" width="0.1010%" height="15" fill="rgb(241,28,37)"/><text x="12.7753%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.10%)</title><rect x="12.6263%" y="981" width="0.1010%" height="15" fill="rgb(233,93,10)"/><text x="12.8763%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="12.9293%" y="709" width="0.1010%" height="15" fill="rgb(225,113,19)"/><text x="13.1793%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="12.9293%" y="725" width="0.7071%" height="15" fill="rgb(241,2,18)"/><text x="13.1793%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.61%)</title><rect x="13.0303%" y="709" width="0.6061%" height="15" fill="rgb(228,207,21)"/><text x="13.2803%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.61%)</title><rect x="13.0303%" y="693" width="0.6061%" height="15" fill="rgb(213,211,35)"/><text x="13.2803%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.61%)</title><rect x="13.0303%" y="677" width="0.6061%" height="15" fill="rgb(209,83,10)"/><text x="13.2803%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.61%)</title><rect x="13.0303%" y="661" width="0.6061%" height="15" fill="rgb(209,164,1)"/><text x="13.2803%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.61%)</title><rect x="13.0303%" y="645" width="0.6061%" height="15" fill="rgb(213,184,43)"/><text x="13.2803%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.61%)</title><rect x="13.0303%" y="629" width="0.6061%" height="15" fill="rgb(231,61,34)"/><text x="13.2803%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.61%)</title><rect x="13.0303%" y="613" width="0.6061%" height="15" fill="rgb(235,75,3)"/><text x="13.2803%" y="623.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.51%)</title><rect x="13.1313%" y="597" width="0.5051%" height="15" fill="rgb(220,106,47)"/><text x="13.3813%" y="607.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.51%)</title><rect x="13.1313%" y="581" width="0.5051%" height="15" fill="rgb(210,196,33)"/><text x="13.3813%" y="591.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="13.2323%" y="565" width="0.4040%" height="15" fill="rgb(229,154,42)"/><text x="13.4823%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="13.7374%" y="645" width="0.1010%" height="15" fill="rgb(228,114,26)"/><text x="13.9874%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="13.7374%" y="629" width="0.1010%" height="15" fill="rgb(208,144,1)"/><text x="13.9874%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="13.7374%" y="613" width="0.1010%" height="15" fill="rgb(239,112,37)"/><text x="13.9874%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="13.7374%" y="597" width="0.1010%" height="15" fill="rgb(210,96,50)"/><text x="13.9874%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="13.7374%" y="581" width="0.1010%" height="15" fill="rgb(222,178,2)"/><text x="13.9874%" y="591.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="13.6364%" y="725" width="0.4040%" height="15" fill="rgb(226,74,18)"/><text x="13.8864%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="13.6364%" y="709" width="0.4040%" height="15" fill="rgb(225,67,54)"/><text x="13.8864%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="13.7374%" y="693" width="0.3030%" height="15" fill="rgb(251,92,32)"/><text x="13.9874%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="13.7374%" y="677" width="0.3030%" height="15" fill="rgb(228,149,22)"/><text x="13.9874%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="13.7374%" y="661" width="0.3030%" height="15" fill="rgb(243,54,13)"/><text x="13.9874%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="13.8384%" y="645" width="0.2020%" height="15" fill="rgb(243,180,28)"/><text x="14.0884%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="13.8384%" y="629" width="0.2020%" height="15" fill="rgb(208,167,24)"/><text x="14.0884%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="13.8384%" y="613" width="0.2020%" height="15" fill="rgb(245,73,45)"/><text x="14.0884%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="13.8384%" y="597" width="0.2020%" height="15" fill="rgb(237,203,48)"/><text x="14.0884%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="13.8384%" y="581" width="0.2020%" height="15" fill="rgb(211,197,16)"/><text x="14.0884%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="13.8384%" y="565" width="0.2020%" height="15" fill="rgb(243,99,51)"/><text x="14.0884%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="13.8384%" y="549" width="0.2020%" height="15" fill="rgb(215,123,29)"/><text x="14.0884%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="13.9394%" y="533" width="0.1010%" height="15" fill="rgb(239,186,37)"/><text x="14.1894%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="14.5455%" y="581" width="0.1010%" height="15" fill="rgb(252,136,39)"/><text x="14.7955%" y="591.50"></text></g><g><title>alloc::vec::SetLenOnDrop::increment_len (1 samples, 0.10%)</title><rect x="14.6465%" y="437" width="0.1010%" height="15" fill="rgb(223,213,32)"/><text x="14.8965%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.61%)</title><rect x="14.4444%" y="629" width="0.6061%" height="15" fill="rgb(233,115,5)"/><text x="14.6944%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="14.5455%" y="613" width="0.5051%" height="15" fill="rgb(207,226,44)"/><text x="14.7955%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="14.5455%" y="597" width="0.5051%" height="15" fill="rgb(208,126,0)"/><text x="14.7955%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="14.6465%" y="581" width="0.4040%" height="15" fill="rgb(244,66,21)"/><text x="14.8965%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="14.6465%" y="565" width="0.4040%" height="15" fill="rgb(222,97,12)"/><text x="14.8965%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="14.6465%" y="549" width="0.4040%" height="15" fill="rgb(219,213,19)"/><text x="14.8965%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="14.6465%" y="533" width="0.4040%" height="15" fill="rgb(252,169,30)"/><text x="14.8965%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="14.6465%" y="517" width="0.4040%" height="15" fill="rgb(206,32,51)"/><text x="14.8965%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="14.6465%" y="501" width="0.4040%" height="15" fill="rgb(250,172,42)"/><text x="14.8965%" y="511.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="14.6465%" y="485" width="0.4040%" height="15" fill="rgb(209,34,43)"/><text x="14.8965%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.40%)</title><rect x="14.6465%" y="469" width="0.4040%" height="15" fill="rgb(223,11,35)"/><text x="14.8965%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (4 samples, 0.40%)</title><rect x="14.6465%" y="453" width="0.4040%" height="15" fill="rgb(251,219,26)"/><text x="14.8965%" y="463.50"></text></g><g><title>core::ptr::write (3 samples, 0.30%)</title><rect x="14.7475%" y="437" width="0.3030%" height="15" fill="rgb(231,119,3)"/><text x="14.9975%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 2.42%)</title><rect x="12.8283%" y="917" width="2.4242%" height="15" fill="rgb(216,97,11)"/><text x="13.0783%" y="927.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (24 samples, 2.42%)</title><rect x="12.8283%" y="901" width="2.4242%" height="15" fill="rgb(223,59,9)"/><text x="13.0783%" y="911.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 2.42%)</title><rect x="12.8283%" y="885" width="2.4242%" height="15" fill="rgb(233,93,31)"/><text x="13.0783%" y="895.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 2.42%)</title><rect x="12.8283%" y="869" width="2.4242%" height="15" fill="rgb(239,81,33)"/><text x="13.0783%" y="879.50">co..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 2.42%)</title><rect x="12.8283%" y="853" width="2.4242%" height="15" fill="rgb(213,120,34)"/><text x="13.0783%" y="863.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 2.42%)</title><rect x="12.8283%" y="837" width="2.4242%" height="15" fill="rgb(243,49,53)"/><text x="13.0783%" y="847.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 2.42%)</title><rect x="12.8283%" y="821" width="2.4242%" height="15" fill="rgb(247,216,33)"/><text x="13.0783%" y="831.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 2.42%)</title><rect x="12.8283%" y="805" width="2.4242%" height="15" fill="rgb(226,26,14)"/><text x="13.0783%" y="815.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (24 samples, 2.42%)</title><rect x="12.8283%" y="789" width="2.4242%" height="15" fill="rgb(215,49,53)"/><text x="13.0783%" y="799.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (24 samples, 2.42%)</title><rect x="12.8283%" y="773" width="2.4242%" height="15" fill="rgb(245,162,40)"/><text x="13.0783%" y="783.50">co..</text></g><g><title>core::ops::function::FnMut::call_mut (24 samples, 2.42%)</title><rect x="12.8283%" y="757" width="2.4242%" height="15" fill="rgb(229,68,17)"/><text x="13.0783%" y="767.50">co..</text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (24 samples, 2.42%)</title><rect x="12.8283%" y="741" width="2.4242%" height="15" fill="rgb(213,182,10)"/><text x="13.0783%" y="751.50">&lt;p..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (12 samples, 1.21%)</title><rect x="14.0404%" y="725" width="1.2121%" height="15" fill="rgb(245,125,30)"/><text x="14.2904%" y="735.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (9 samples, 0.91%)</title><rect x="14.3434%" y="709" width="0.9091%" height="15" fill="rgb(232,202,2)"/><text x="14.5934%" y="719.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="14.4444%" y="693" width="0.8081%" height="15" fill="rgb(237,140,51)"/><text x="14.6944%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="14.4444%" y="677" width="0.8081%" height="15" fill="rgb(236,157,25)"/><text x="14.6944%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.81%)</title><rect x="14.4444%" y="661" width="0.8081%" height="15" fill="rgb(219,209,0)"/><text x="14.6944%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.81%)</title><rect x="14.4444%" y="645" width="0.8081%" height="15" fill="rgb(240,116,54)"/><text x="14.6944%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="15.0505%" y="629" width="0.2020%" height="15" fill="rgb(216,10,36)"/><text x="15.3005%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="15.0505%" y="613" width="0.2020%" height="15" fill="rgb(222,72,44)"/><text x="15.3005%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="15.0505%" y="597" width="0.2020%" height="15" fill="rgb(232,159,9)"/><text x="15.3005%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="15.0505%" y="581" width="0.2020%" height="15" fill="rgb(210,39,32)"/><text x="15.3005%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="15.0505%" y="565" width="0.2020%" height="15" fill="rgb(216,194,45)"/><text x="15.3005%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="15.0505%" y="549" width="0.2020%" height="15" fill="rgb(218,18,35)"/><text x="15.3005%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="15.0505%" y="533" width="0.2020%" height="15" fill="rgb(207,83,51)"/><text x="15.3005%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="15.1515%" y="517" width="0.1010%" height="15" fill="rgb(225,63,43)"/><text x="15.4015%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (24 samples, 2.42%)</title><rect x="15.2525%" y="853" width="2.4242%" height="15" fill="rgb(207,57,36)"/><text x="15.5025%" y="863.50">&lt;a..</text></g><g><title>alloc::alloc::alloc (24 samples, 2.42%)</title><rect x="15.2525%" y="837" width="2.4242%" height="15" fill="rgb(216,99,33)"/><text x="15.5025%" y="847.50">al..</text></g><g><title>__GI___libc_malloc (24 samples, 2.42%)</title><rect x="15.2525%" y="821" width="2.4242%" height="15" fill="rgb(225,42,16)"/><text x="15.5025%" y="831.50">__..</text></g><g><title>_int_malloc (24 samples, 2.42%)</title><rect x="15.2525%" y="805" width="2.4242%" height="15" fill="rgb(220,201,45)"/><text x="15.5025%" y="815.50">_i..</text></g><g><title>malloc_consolidate (14 samples, 1.41%)</title><rect x="16.2626%" y="789" width="1.4141%" height="15" fill="rgb(225,33,4)"/><text x="16.5126%" y="799.50"></text></g><g><title>unlink_chunk.constprop.0 (5 samples, 0.51%)</title><rect x="17.1717%" y="773" width="0.5051%" height="15" fill="rgb(224,33,50)"/><text x="17.4217%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 5.05%)</title><rect x="12.7273%" y="965" width="5.0505%" height="15" fill="rgb(246,198,51)"/><text x="12.9773%" y="975.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (49 samples, 4.95%)</title><rect x="12.8283%" y="949" width="4.9495%" height="15" fill="rgb(205,22,4)"/><text x="13.0783%" y="959.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (49 samples, 4.95%)</title><rect x="12.8283%" y="933" width="4.9495%" height="15" fill="rgb(206,3,8)"/><text x="13.0783%" y="943.50">alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 2.53%)</title><rect x="15.2525%" y="917" width="2.5253%" height="15" fill="rgb(251,23,15)"/><text x="15.5025%" y="927.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (25 samples, 2.53%)</title><rect x="15.2525%" y="901" width="2.5253%" height="15" fill="rgb(252,88,28)"/><text x="15.5025%" y="911.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 2.53%)</title><rect x="15.2525%" y="885" width="2.5253%" height="15" fill="rgb(212,127,14)"/><text x="15.5025%" y="895.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 2.53%)</title><rect x="15.2525%" y="869" width="2.5253%" height="15" fill="rgb(247,145,37)"/><text x="15.5025%" y="879.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.10%)</title><rect x="17.6768%" y="853" width="0.1010%" height="15" fill="rgb(209,117,53)"/><text x="17.9268%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="17.8788%" y="949" width="0.2020%" height="15" fill="rgb(212,90,42)"/><text x="18.1288%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="17.8788%" y="933" width="0.2020%" height="15" fill="rgb(218,164,37)"/><text x="18.1288%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="17.8788%" y="917" width="0.2020%" height="15" fill="rgb(246,65,34)"/><text x="18.1288%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="17.8788%" y="901" width="0.2020%" height="15" fill="rgb(231,100,33)"/><text x="18.1288%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="17.8788%" y="885" width="0.2020%" height="15" fill="rgb(228,126,14)"/><text x="18.1288%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="17.8788%" y="869" width="0.2020%" height="15" fill="rgb(215,173,21)"/><text x="18.1288%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="17.8788%" y="853" width="0.2020%" height="15" fill="rgb(210,6,40)"/><text x="18.1288%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="17.8788%" y="837" width="0.2020%" height="15" fill="rgb(212,48,18)"/><text x="18.1288%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="17.8788%" y="821" width="0.2020%" height="15" fill="rgb(230,214,11)"/><text x="18.1288%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="17.8788%" y="805" width="0.2020%" height="15" fill="rgb(254,105,39)"/><text x="18.1288%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="17.9798%" y="789" width="0.1010%" height="15" fill="rgb(245,158,5)"/><text x="18.2298%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="17.9798%" y="773" width="0.1010%" height="15" fill="rgb(249,208,11)"/><text x="18.2298%" y="783.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="17.9798%" y="757" width="0.1010%" height="15" fill="rgb(210,39,28)"/><text x="18.2298%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="17.9798%" y="741" width="0.1010%" height="15" fill="rgb(211,56,53)"/><text x="18.2298%" y="751.50"></text></g><g><title>&lt;polar::types::Parameter as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="17.9798%" y="725" width="0.1010%" height="15" fill="rgb(226,201,30)"/><text x="18.2298%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="18.0808%" y="853" width="0.3030%" height="15" fill="rgb(239,101,34)"/><text x="18.3308%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="18.0808%" y="837" width="0.3030%" height="15" fill="rgb(226,209,5)"/><text x="18.3308%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="18.0808%" y="821" width="0.3030%" height="15" fill="rgb(250,105,47)"/><text x="18.3308%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="18.0808%" y="805" width="0.3030%" height="15" fill="rgb(230,72,3)"/><text x="18.3308%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="18.0808%" y="789" width="0.3030%" height="15" fill="rgb(232,218,39)"/><text x="18.3308%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="18.0808%" y="773" width="0.3030%" height="15" fill="rgb(248,166,6)"/><text x="18.3308%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="18.0808%" y="757" width="0.3030%" height="15" fill="rgb(247,89,20)"/><text x="18.3308%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="18.0808%" y="741" width="0.3030%" height="15" fill="rgb(248,130,54)"/><text x="18.3308%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="18.0808%" y="725" width="0.3030%" height="15" fill="rgb(234,196,4)"/><text x="18.3308%" y="735.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="18.0808%" y="709" width="0.3030%" height="15" fill="rgb(250,143,31)"/><text x="18.3308%" y="719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="18.0808%" y="693" width="0.3030%" height="15" fill="rgb(211,110,34)"/><text x="18.3308%" y="703.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="18.0808%" y="677" width="0.3030%" height="15" fill="rgb(215,124,48)"/><text x="18.3308%" y="687.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="18.1818%" y="661" width="0.2020%" height="15" fill="rgb(216,46,13)"/><text x="18.4318%" y="671.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="18.2828%" y="645" width="0.1010%" height="15" fill="rgb(205,184,25)"/><text x="18.5328%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="18.2828%" y="629" width="0.1010%" height="15" fill="rgb(228,1,10)"/><text x="18.5328%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="18.2828%" y="613" width="0.1010%" height="15" fill="rgb(213,116,27)"/><text x="18.5328%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="18.2828%" y="597" width="0.1010%" height="15" fill="rgb(241,95,50)"/><text x="18.5328%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="18.2828%" y="581" width="0.1010%" height="15" fill="rgb(238,48,32)"/><text x="18.5328%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="18.2828%" y="565" width="0.1010%" height="15" fill="rgb(235,113,49)"/><text x="18.5328%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="18.2828%" y="549" width="0.1010%" height="15" fill="rgb(205,127,43)"/><text x="18.5328%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="18.2828%" y="533" width="0.1010%" height="15" fill="rgb(250,162,2)"/><text x="18.5328%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="18.2828%" y="517" width="0.1010%" height="15" fill="rgb(220,13,41)"/><text x="18.5328%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="18.2828%" y="501" width="0.1010%" height="15" fill="rgb(249,221,25)"/><text x="18.5328%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="18.2828%" y="485" width="0.1010%" height="15" fill="rgb(215,208,19)"/><text x="18.5328%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="18.2828%" y="469" width="0.1010%" height="15" fill="rgb(236,175,2)"/><text x="18.5328%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="18.2828%" y="453" width="0.1010%" height="15" fill="rgb(241,52,2)"/><text x="18.5328%" y="463.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="18.2828%" y="437" width="0.1010%" height="15" fill="rgb(248,140,14)"/><text x="18.5328%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="18.2828%" y="421" width="0.1010%" height="15" fill="rgb(253,22,42)"/><text x="18.5328%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="18.2828%" y="405" width="0.1010%" height="15" fill="rgb(234,61,47)"/><text x="18.5328%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="18.2828%" y="389" width="0.1010%" height="15" fill="rgb(208,226,15)"/><text x="18.5328%" y="399.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="17.7778%" y="965" width="0.7071%" height="15" fill="rgb(217,221,4)"/><text x="18.0278%" y="975.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="18.0808%" y="949" width="0.4040%" height="15" fill="rgb(212,174,34)"/><text x="18.3308%" y="959.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="18.0808%" y="933" width="0.4040%" height="15" fill="rgb(253,83,4)"/><text x="18.3308%" y="943.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="18.0808%" y="917" width="0.4040%" height="15" fill="rgb(250,195,49)"/><text x="18.3308%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="18.0808%" y="901" width="0.4040%" height="15" fill="rgb(241,192,25)"/><text x="18.3308%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="18.0808%" y="885" width="0.4040%" height="15" fill="rgb(208,124,10)"/><text x="18.3308%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="18.0808%" y="869" width="0.4040%" height="15" fill="rgb(222,33,0)"/><text x="18.3308%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="18.3838%" y="853" width="0.1010%" height="15" fill="rgb(234,209,28)"/><text x="18.6338%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="18.3838%" y="837" width="0.1010%" height="15" fill="rgb(224,11,23)"/><text x="18.6338%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="18.3838%" y="821" width="0.1010%" height="15" fill="rgb(232,99,1)"/><text x="18.6338%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="18.3838%" y="805" width="0.1010%" height="15" fill="rgb(237,95,45)"/><text x="18.6338%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="18.3838%" y="789" width="0.1010%" height="15" fill="rgb(208,109,11)"/><text x="18.6338%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="18.3838%" y="773" width="0.1010%" height="15" fill="rgb(216,190,48)"/><text x="18.6338%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="18.3838%" y="757" width="0.1010%" height="15" fill="rgb(251,171,36)"/><text x="18.6338%" y="767.50"></text></g><g><title>&lt;polar::vm::Goal as core::clone::Clone&gt;::clone (62 samples, 6.26%)</title><rect x="12.7273%" y="981" width="6.2626%" height="15" fill="rgb(230,62,22)"/><text x="12.9773%" y="991.50">&lt;polar::..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="18.4848%" y="965" width="0.5051%" height="15" fill="rgb(225,114,35)"/><text x="18.7348%" y="975.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="18.6869%" y="949" width="0.3030%" height="15" fill="rgb(215,118,42)"/><text x="18.9369%" y="959.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="18.8889%" y="933" width="0.1010%" height="15" fill="rgb(243,119,21)"/><text x="19.1389%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="18.8889%" y="917" width="0.1010%" height="15" fill="rgb(252,177,53)"/><text x="19.1389%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="18.8889%" y="901" width="0.1010%" height="15" fill="rgb(237,209,29)"/><text x="19.1389%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="18.8889%" y="885" width="0.1010%" height="15" fill="rgb(212,65,23)"/><text x="19.1389%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="18.8889%" y="869" width="0.1010%" height="15" fill="rgb(230,222,46)"/><text x="19.1389%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="18.8889%" y="853" width="0.1010%" height="15" fill="rgb(215,135,32)"/><text x="19.1389%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="18.8889%" y="837" width="0.1010%" height="15" fill="rgb(246,101,22)"/><text x="19.1389%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="18.8889%" y="821" width="0.1010%" height="15" fill="rgb(206,107,13)"/><text x="19.1389%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="18.8889%" y="805" width="0.1010%" height="15" fill="rgb(250,100,44)"/><text x="19.1389%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="18.8889%" y="789" width="0.1010%" height="15" fill="rgb(231,147,38)"/><text x="19.1389%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="18.8889%" y="773" width="0.1010%" height="15" fill="rgb(229,8,40)"/><text x="19.1389%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="18.8889%" y="757" width="0.1010%" height="15" fill="rgb(221,135,30)"/><text x="19.1389%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="18.9899%" y="981" width="0.1010%" height="15" fill="rgb(249,193,18)"/><text x="19.2399%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::pop (3 samples, 0.30%)</title><rect x="19.0909%" y="981" width="0.3030%" height="15" fill="rgb(209,133,39)"/><text x="19.3409%" y="991.50"></text></g><g><title>core::ptr::read (3 samples, 0.30%)</title><rect x="19.0909%" y="965" width="0.3030%" height="15" fill="rgb(232,100,14)"/><text x="19.3409%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.30%)</title><rect x="19.0909%" y="949" width="0.3030%" height="15" fill="rgb(224,185,1)"/><text x="19.3409%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="19.7980%" y="917" width="0.1010%" height="15" fill="rgb(223,139,8)"/><text x="20.0480%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="20.0000%" y="885" width="0.1010%" height="15" fill="rgb(232,213,38)"/><text x="20.2500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="20.0000%" y="869" width="0.1010%" height="15" fill="rgb(207,94,22)"/><text x="20.2500%" y="879.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="20.1010%" y="821" width="0.1010%" height="15" fill="rgb(219,183,54)"/><text x="20.3510%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="20.1010%" y="869" width="0.3030%" height="15" fill="rgb(216,185,54)"/><text x="20.3510%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.30%)</title><rect x="20.1010%" y="853" width="0.3030%" height="15" fill="rgb(254,217,39)"/><text x="20.3510%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.30%)</title><rect x="20.1010%" y="837" width="0.3030%" height="15" fill="rgb(240,178,23)"/><text x="20.3510%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="20.2020%" y="821" width="0.2020%" height="15" fill="rgb(218,11,47)"/><text x="20.4520%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="20.4040%" y="821" width="0.1010%" height="15" fill="rgb(218,51,51)"/><text x="20.6540%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="20.5051%" y="773" width="0.1010%" height="15" fill="rgb(238,126,27)"/><text x="20.7551%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="20.5051%" y="757" width="0.1010%" height="15" fill="rgb(249,202,22)"/><text x="20.7551%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="20.5051%" y="741" width="0.1010%" height="15" fill="rgb(254,195,49)"/><text x="20.7551%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="20.5051%" y="725" width="0.1010%" height="15" fill="rgb(208,123,14)"/><text x="20.7551%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.11%)</title><rect x="19.7980%" y="949" width="1.1111%" height="15" fill="rgb(224,200,8)"/><text x="20.0480%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.11%)</title><rect x="19.7980%" y="933" width="1.1111%" height="15" fill="rgb(217,61,36)"/><text x="20.0480%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 1.01%)</title><rect x="19.8990%" y="917" width="1.0101%" height="15" fill="rgb(206,35,45)"/><text x="20.1490%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.91%)</title><rect x="20.0000%" y="901" width="0.9091%" height="15" fill="rgb(217,65,33)"/><text x="20.2500%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.81%)</title><rect x="20.1010%" y="885" width="0.8081%" height="15" fill="rgb(222,158,48)"/><text x="20.3510%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.51%)</title><rect x="20.4040%" y="869" width="0.5051%" height="15" fill="rgb(254,2,54)"/><text x="20.6540%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.51%)</title><rect x="20.4040%" y="853" width="0.5051%" height="15" fill="rgb(250,143,38)"/><text x="20.6540%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.51%)</title><rect x="20.4040%" y="837" width="0.5051%" height="15" fill="rgb(248,25,0)"/><text x="20.6540%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="20.5051%" y="821" width="0.4040%" height="15" fill="rgb(206,152,27)"/><text x="20.7551%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="20.5051%" y="805" width="0.4040%" height="15" fill="rgb(240,77,30)"/><text x="20.7551%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="20.5051%" y="789" width="0.4040%" height="15" fill="rgb(231,5,3)"/><text x="20.7551%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="20.6061%" y="773" width="0.3030%" height="15" fill="rgb(207,226,32)"/><text x="20.8561%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="20.6061%" y="757" width="0.3030%" height="15" fill="rgb(222,207,47)"/><text x="20.8561%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="20.6061%" y="741" width="0.3030%" height="15" fill="rgb(229,115,45)"/><text x="20.8561%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="20.6061%" y="725" width="0.3030%" height="15" fill="rgb(224,191,6)"/><text x="20.8561%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.30%)</title><rect x="20.6061%" y="709" width="0.3030%" height="15" fill="rgb(230,227,24)"/><text x="20.8561%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.30%)</title><rect x="20.6061%" y="693" width="0.3030%" height="15" fill="rgb(228,80,19)"/><text x="20.8561%" y="703.50"></text></g><g><title>_int_free (3 samples, 0.30%)</title><rect x="20.6061%" y="677" width="0.3030%" height="15" fill="rgb(247,229,0)"/><text x="20.8561%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="20.9091%" y="885" width="0.1010%" height="15" fill="rgb(237,194,15)"/><text x="21.1591%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="20.9091%" y="933" width="0.2020%" height="15" fill="rgb(219,203,20)"/><text x="21.1591%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="20.9091%" y="917" width="0.2020%" height="15" fill="rgb(234,128,8)"/><text x="21.1591%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="20.9091%" y="901" width="0.2020%" height="15" fill="rgb(248,202,8)"/><text x="21.1591%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="21.0101%" y="885" width="0.1010%" height="15" fill="rgb(206,104,37)"/><text x="21.2601%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="21.1111%" y="933" width="0.1010%" height="15" fill="rgb(223,8,27)"/><text x="21.3611%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="917" width="0.1010%" height="15" fill="rgb(216,217,28)"/><text x="21.3611%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="901" width="0.1010%" height="15" fill="rgb(249,199,1)"/><text x="21.3611%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="885" width="0.1010%" height="15" fill="rgb(240,85,17)"/><text x="21.3611%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="869" width="0.1010%" height="15" fill="rgb(206,108,45)"/><text x="21.3611%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="853" width="0.1010%" height="15" fill="rgb(245,210,41)"/><text x="21.3611%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="837" width="0.1010%" height="15" fill="rgb(206,13,37)"/><text x="21.3611%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="821" width="0.1010%" height="15" fill="rgb(250,61,18)"/><text x="21.3611%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.1111%" y="805" width="0.1010%" height="15" fill="rgb(235,172,48)"/><text x="21.3611%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="21.1111%" y="789" width="0.1010%" height="15" fill="rgb(249,201,17)"/><text x="21.3611%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="21.1111%" y="773" width="0.1010%" height="15" fill="rgb(219,208,6)"/><text x="21.3611%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="21.1111%" y="757" width="0.1010%" height="15" fill="rgb(248,31,23)"/><text x="21.3611%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="21.1111%" y="741" width="0.1010%" height="15" fill="rgb(245,15,42)"/><text x="21.3611%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 1.92%)</title><rect x="19.3939%" y="981" width="1.9192%" height="15" fill="rgb(222,217,39)"/><text x="19.6439%" y="991.50">c..</text></g><g><title>core::ptr::drop_in_place (15 samples, 1.52%)</title><rect x="19.7980%" y="965" width="1.5152%" height="15" fill="rgb(210,219,27)"/><text x="20.0480%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="20.9091%" y="949" width="0.4040%" height="15" fill="rgb(252,166,36)"/><text x="21.1591%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.2121%" y="933" width="0.1010%" height="15" fill="rgb(245,132,34)"/><text x="21.4621%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.2121%" y="917" width="0.1010%" height="15" fill="rgb(236,54,3)"/><text x="21.4621%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.2121%" y="901" width="0.1010%" height="15" fill="rgb(241,173,43)"/><text x="21.4621%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="21.2121%" y="885" width="0.1010%" height="15" fill="rgb(215,190,9)"/><text x="21.4621%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="21.2121%" y="869" width="0.1010%" height="15" fill="rgb(242,101,16)"/><text x="21.4621%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="21.2121%" y="853" width="0.1010%" height="15" fill="rgb(223,190,21)"/><text x="21.4621%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="21.2121%" y="837" width="0.1010%" height="15" fill="rgb(215,228,25)"/><text x="21.4621%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.10%)</title><rect x="21.6162%" y="949" width="0.1010%" height="15" fill="rgb(225,36,22)"/><text x="21.8662%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.6162%" y="933" width="0.1010%" height="15" fill="rgb(251,106,46)"/><text x="21.8662%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="21.6162%" y="917" width="0.1010%" height="15" fill="rgb(208,90,1)"/><text x="21.8662%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (155 samples, 15.66%)</title><rect x="6.1616%" y="1205" width="15.6566%" height="15" fill="rgb(243,10,4)"/><text x="6.4116%" y="1215.50">&lt;alloc::vec::Vec&lt;T&gt; as c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (155 samples, 15.66%)</title><rect x="6.1616%" y="1189" width="15.6566%" height="15" fill="rgb(212,137,27)"/><text x="6.4116%" y="1199.50">&lt;alloc::vec::Vec&lt;T&gt; as a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (155 samples, 15.66%)</title><rect x="6.1616%" y="1173" width="15.6566%" height="15" fill="rgb(231,220,49)"/><text x="6.4116%" y="1183.50">core::iter::traits::iter..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (155 samples, 15.66%)</title><rect x="6.1616%" y="1157" width="15.6566%" height="15" fill="rgb(237,96,20)"/><text x="6.4116%" y="1167.50">&lt;core::iter::adapters::M..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (155 samples, 15.66%)</title><rect x="6.1616%" y="1141" width="15.6566%" height="15" fill="rgb(239,229,30)"/><text x="6.4116%" y="1151.50">core::iter::traits::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (155 samples, 15.66%)</title><rect x="6.1616%" y="1125" width="15.6566%" height="15" fill="rgb(219,65,33)"/><text x="6.4116%" y="1135.50">core::iter::traits::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (155 samples, 15.66%)</title><rect x="6.1616%" y="1109" width="15.6566%" height="15" fill="rgb(243,134,7)"/><text x="6.4116%" y="1119.50">core::iter::traits::iter..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (155 samples, 15.66%)</title><rect x="6.1616%" y="1093" width="15.6566%" height="15" fill="rgb(216,177,54)"/><text x="6.4116%" y="1103.50">core::iter::adapters::ma..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (155 samples, 15.66%)</title><rect x="6.1616%" y="1077" width="15.6566%" height="15" fill="rgb(211,160,20)"/><text x="6.4116%" y="1087.50">core::ops::function::imp..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (155 samples, 15.66%)</title><rect x="6.1616%" y="1061" width="15.6566%" height="15" fill="rgb(239,85,39)"/><text x="6.4116%" y="1071.50">bench::simple_queries::_..</text></g><g><title>bench::Runner::run (155 samples, 15.66%)</title><rect x="6.1616%" y="1045" width="15.6566%" height="15" fill="rgb(232,125,22)"/><text x="6.4116%" y="1055.50">bench::Runner::run</text></g><g><title>bench::Runner::next (155 samples, 15.66%)</title><rect x="6.1616%" y="1029" width="15.6566%" height="15" fill="rgb(244,57,34)"/><text x="6.4116%" y="1039.50">bench::Runner::next</text></g><g><title>polar::polar::Polar::query (155 samples, 15.66%)</title><rect x="6.1616%" y="1013" width="15.6566%" height="15" fill="rgb(214,203,32)"/><text x="6.4116%" y="1023.50">polar::polar::Polar::que..</text></g><g><title>polar::vm::PolarVirtualMachine::run (155 samples, 15.66%)</title><rect x="6.1616%" y="997" width="15.6566%" height="15" fill="rgb(207,58,43)"/><text x="6.4116%" y="1007.50">polar::vm::PolarVirtualM..</text></g><g><title>polar::debugger::&lt;impl polar::vm::PolarVirtualMachine&gt;::maybe_break (5 samples, 0.51%)</title><rect x="21.3131%" y="981" width="0.5051%" height="15" fill="rgb(215,193,15)"/><text x="21.5631%" y="991.50"></text></g><g><title>polar::debugger::Debugger::maybe_break (4 samples, 0.40%)</title><rect x="21.4141%" y="965" width="0.4040%" height="15" fill="rgb(232,15,44)"/><text x="21.6641%" y="975.50"></text></g><g><title>polar::debugger::Debugger::maybe_break (1 samples, 0.10%)</title><rect x="21.7172%" y="949" width="0.1010%" height="15" fill="rgb(212,3,48)"/><text x="21.9672%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="21.7172%" y="933" width="0.1010%" height="15" fill="rgb(218,128,7)"/><text x="21.9672%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.10%)</title><rect x="21.8182%" y="901" width="0.1010%" height="15" fill="rgb(226,216,39)"/><text x="22.0682%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="21.8182%" y="885" width="0.1010%" height="15" fill="rgb(243,47,51)"/><text x="22.0682%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="21.8182%" y="869" width="0.1010%" height="15" fill="rgb(241,183,40)"/><text x="22.0682%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="21.8182%" y="853" width="0.1010%" height="15" fill="rgb(231,217,32)"/><text x="22.0682%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="21.8182%" y="837" width="0.1010%" height="15" fill="rgb(229,61,38)"/><text x="22.0682%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="21.8182%" y="821" width="0.1010%" height="15" fill="rgb(225,210,5)"/><text x="22.0682%" y="831.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="21.8182%" y="805" width="0.1010%" height="15" fill="rgb(231,79,45)"/><text x="22.0682%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="21.8182%" y="789" width="0.1010%" height="15" fill="rgb(224,100,7)"/><text x="22.0682%" y="799.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="21.8182%" y="773" width="0.1010%" height="15" fill="rgb(241,198,18)"/><text x="22.0682%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="21.8182%" y="757" width="0.1010%" height="15" fill="rgb(252,97,53)"/><text x="22.0682%" y="767.50"></text></g><g><title>&lt;polar::lexer::Lexer as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="21.9192%" y="869" width="0.1010%" height="15" fill="rgb(220,88,7)"/><text x="22.1692%" y="879.50"></text></g><g><title>polar::lexer::Lexer::scan_symbol (1 samples, 0.10%)</title><rect x="21.9192%" y="853" width="0.1010%" height="15" fill="rgb(213,176,14)"/><text x="22.1692%" y="863.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (158 samples, 15.96%)</title><rect x="6.1616%" y="1445" width="15.9596%" height="15" fill="rgb(246,73,7)"/><text x="6.4116%" y="1455.50">&lt;criterion::routine::Func..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (158 samples, 15.96%)</title><rect x="6.1616%" y="1429" width="15.9596%" height="15" fill="rgb(245,64,36)"/><text x="6.4116%" y="1439.50">core::iter::traits::itera..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (158 samples, 15.96%)</title><rect x="6.1616%" y="1413" width="15.9596%" height="15" fill="rgb(245,80,10)"/><text x="6.4116%" y="1423.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (158 samples, 15.96%)</title><rect x="6.1616%" y="1397" width="15.9596%" height="15" fill="rgb(232,107,50)"/><text x="6.4116%" y="1407.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (158 samples, 15.96%)</title><rect x="6.1616%" y="1381" width="15.9596%" height="15" fill="rgb(253,3,0)"/><text x="6.4116%" y="1391.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (158 samples, 15.96%)</title><rect x="6.1616%" y="1365" width="15.9596%" height="15" fill="rgb(212,99,53)"/><text x="6.4116%" y="1375.50">core::iter::traits::itera..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (158 samples, 15.96%)</title><rect x="6.1616%" y="1349" width="15.9596%" height="15" fill="rgb(249,111,54)"/><text x="6.4116%" y="1359.50">&lt;core::iter::adapters::Ma..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (158 samples, 15.96%)</title><rect x="6.1616%" y="1333" width="15.9596%" height="15" fill="rgb(249,55,30)"/><text x="6.4116%" y="1343.50">core::iter::traits::itera..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (158 samples, 15.96%)</title><rect x="6.1616%" y="1317" width="15.9596%" height="15" fill="rgb(237,47,42)"/><text x="6.4116%" y="1327.50">core::iter::traits::itera..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (158 samples, 15.96%)</title><rect x="6.1616%" y="1301" width="15.9596%" height="15" fill="rgb(211,20,18)"/><text x="6.4116%" y="1311.50">core::iter::traits::itera..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (158 samples, 15.96%)</title><rect x="6.1616%" y="1285" width="15.9596%" height="15" fill="rgb(231,203,46)"/><text x="6.4116%" y="1295.50">core::iter::adapters::map..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (158 samples, 15.96%)</title><rect x="6.1616%" y="1269" width="15.9596%" height="15" fill="rgb(237,142,3)"/><text x="6.4116%" y="1279.50">&lt;criterion::routine::Func..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (158 samples, 15.96%)</title><rect x="6.1616%" y="1253" width="15.9596%" height="15" fill="rgb(241,107,1)"/><text x="6.4116%" y="1263.50">criterion::benchmark_grou..</text></g><g><title>bench::too_many_predicates::_{{closure}} (158 samples, 15.96%)</title><rect x="6.1616%" y="1237" width="15.9596%" height="15" fill="rgb(229,83,13)"/><text x="6.4116%" y="1247.50">bench::too_many_predicate..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (158 samples, 15.96%)</title><rect x="6.1616%" y="1221" width="15.9596%" height="15" fill="rgb(241,91,40)"/><text x="6.4116%" y="1231.50">criterion::Bencher&lt;M&gt;::it..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.30%)</title><rect x="21.8182%" y="1205" width="0.3030%" height="15" fill="rgb(225,3,45)"/><text x="22.0682%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="21.8182%" y="1189" width="0.3030%" height="15" fill="rgb(244,223,14)"/><text x="22.0682%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="21.8182%" y="1173" width="0.3030%" height="15" fill="rgb(224,124,37)"/><text x="22.0682%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="21.8182%" y="1157" width="0.3030%" height="15" fill="rgb(251,171,30)"/><text x="22.0682%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="21.8182%" y="1141" width="0.3030%" height="15" fill="rgb(236,46,54)"/><text x="22.0682%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="21.8182%" y="1125" width="0.3030%" height="15" fill="rgb(245,213,5)"/><text x="22.0682%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="21.8182%" y="1109" width="0.3030%" height="15" fill="rgb(230,144,27)"/><text x="22.0682%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="21.8182%" y="1093" width="0.3030%" height="15" fill="rgb(220,86,6)"/><text x="22.0682%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="21.8182%" y="1077" width="0.3030%" height="15" fill="rgb(240,20,13)"/><text x="22.0682%" y="1087.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="21.8182%" y="1061" width="0.3030%" height="15" fill="rgb(217,89,34)"/><text x="22.0682%" y="1071.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched::_{{closure}} (3 samples, 0.30%)</title><rect x="21.8182%" y="1045" width="0.3030%" height="15" fill="rgb(229,13,5)"/><text x="22.0682%" y="1055.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="21.8182%" y="1029" width="0.3030%" height="15" fill="rgb(244,67,35)"/><text x="22.0682%" y="1039.50"></text></g><g><title>bench::too_many_predicates::make_runner (3 samples, 0.30%)</title><rect x="21.8182%" y="1013" width="0.3030%" height="15" fill="rgb(221,40,2)"/><text x="22.0682%" y="1023.50"></text></g><g><title>polar::polar::Polar::load_str (3 samples, 0.30%)</title><rect x="21.8182%" y="997" width="0.3030%" height="15" fill="rgb(237,157,21)"/><text x="22.0682%" y="1007.50"></text></g><g><title>polar::polar::Polar::new_load (3 samples, 0.30%)</title><rect x="21.8182%" y="981" width="0.3030%" height="15" fill="rgb(222,94,11)"/><text x="22.0682%" y="991.50"></text></g><g><title>polar::parser::parse_lines (3 samples, 0.30%)</title><rect x="21.8182%" y="965" width="0.3030%" height="15" fill="rgb(249,113,6)"/><text x="22.0682%" y="975.50"></text></g><g><title>polar::parser::polar::__parse__Lines::LinesParser::parse (3 samples, 0.30%)</title><rect x="21.8182%" y="949" width="0.3030%" height="15" fill="rgb(238,137,36)"/><text x="22.0682%" y="959.50"></text></g><g><title>lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (3 samples, 0.30%)</title><rect x="21.8182%" y="933" width="0.3030%" height="15" fill="rgb(210,102,26)"/><text x="22.0682%" y="943.50"></text></g><g><title>lalrpop_util::state_machine::Parser&lt;D,I&gt;::parse (3 samples, 0.30%)</title><rect x="21.8182%" y="917" width="0.3030%" height="15" fill="rgb(218,30,30)"/><text x="22.0682%" y="927.50"></text></g><g><title>lalrpop_util::state_machine::Parser&lt;D,I&gt;::next_token (2 samples, 0.20%)</title><rect x="21.9192%" y="901" width="0.2020%" height="15" fill="rgb(214,67,26)"/><text x="22.1692%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="21.9192%" y="885" width="0.2020%" height="15" fill="rgb(251,9,53)"/><text x="22.1692%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="22.0202%" y="869" width="0.1010%" height="15" fill="rgb(228,204,25)"/><text x="22.2702%" y="879.50"></text></g><g><title>alloc::string::String::shrink_to_fit (1 samples, 0.10%)</title><rect x="22.2222%" y="1141" width="0.1010%" height="15" fill="rgb(207,153,8)"/><text x="22.4722%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::shrink_to_fit (1 samples, 0.10%)</title><rect x="22.2222%" y="1125" width="0.1010%" height="15" fill="rgb(242,9,16)"/><text x="22.4722%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (1 samples, 0.10%)</title><rect x="22.2222%" y="1109" width="0.1010%" height="15" fill="rgb(217,211,10)"/><text x="22.4722%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (1 samples, 0.10%)</title><rect x="22.2222%" y="1093" width="0.1010%" height="15" fill="rgb(219,228,52)"/><text x="22.4722%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::shrink (1 samples, 0.10%)</title><rect x="22.2222%" y="1077" width="0.1010%" height="15" fill="rgb(231,92,29)"/><text x="22.4722%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="22.2222%" y="1061" width="0.1010%" height="15" fill="rgb(232,8,23)"/><text x="22.4722%" y="1071.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="22.2222%" y="1045" width="0.1010%" height="15" fill="rgb(216,211,34)"/><text x="22.4722%" y="1055.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="22.2222%" y="1029" width="0.1010%" height="15" fill="rgb(236,151,0)"/><text x="22.4722%" y="1039.50"></text></g><g><title>&lt;polar::types::Symbol as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="22.5253%" y="1077" width="0.1010%" height="15" fill="rgb(209,168,3)"/><text x="22.7753%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.10%)</title><rect x="22.5253%" y="1061" width="0.1010%" height="15" fill="rgb(208,129,28)"/><text x="22.7753%" y="1071.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.10%)</title><rect x="22.5253%" y="1045" width="0.1010%" height="15" fill="rgb(229,78,22)"/><text x="22.7753%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="22.5253%" y="1029" width="0.1010%" height="15" fill="rgb(228,187,13)"/><text x="22.7753%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="22.5253%" y="1013" width="0.1010%" height="15" fill="rgb(240,119,24)"/><text x="22.7753%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="22.5253%" y="997" width="0.1010%" height="15" fill="rgb(209,194,42)"/><text x="22.7753%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="22.5253%" y="981" width="0.1010%" height="15" fill="rgb(247,200,46)"/><text x="22.7753%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="22.5253%" y="965" width="0.1010%" height="15" fill="rgb(218,76,16)"/><text x="22.7753%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="22.5253%" y="949" width="0.1010%" height="15" fill="rgb(225,21,48)"/><text x="22.7753%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="22.5253%" y="933" width="0.1010%" height="15" fill="rgb(239,223,50)"/><text x="22.7753%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="22.5253%" y="917" width="0.1010%" height="15" fill="rgb(244,45,21)"/><text x="22.7753%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="22.5253%" y="901" width="0.1010%" height="15" fill="rgb(232,33,43)"/><text x="22.7753%" y="911.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="22.5253%" y="1093" width="0.2020%" height="15" fill="rgb(209,8,3)"/><text x="22.7753%" y="1103.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="22.6263%" y="1077" width="0.1010%" height="15" fill="rgb(214,25,53)"/><text x="22.8763%" y="1087.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="22.6263%" y="1061" width="0.1010%" height="15" fill="rgb(254,186,54)"/><text x="22.8763%" y="1071.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="22.7273%" y="1093" width="0.1010%" height="15" fill="rgb(208,174,49)"/><text x="22.9773%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="23.0303%" y="917" width="0.1010%" height="15" fill="rgb(233,191,51)"/><text x="23.2803%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="23.0303%" y="901" width="0.1010%" height="15" fill="rgb(222,134,10)"/><text x="23.2803%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="23.0303%" y="885" width="0.1010%" height="15" fill="rgb(230,226,20)"/><text x="23.2803%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="23.0303%" y="981" width="0.2020%" height="15" fill="rgb(251,111,25)"/><text x="23.2803%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="23.0303%" y="965" width="0.2020%" height="15" fill="rgb(224,40,46)"/><text x="23.2803%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="23.0303%" y="949" width="0.2020%" height="15" fill="rgb(236,108,47)"/><text x="23.2803%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (2 samples, 0.20%)</title><rect x="23.0303%" y="933" width="0.2020%" height="15" fill="rgb(234,93,0)"/><text x="23.2803%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="23.1313%" y="917" width="0.1010%" height="15" fill="rgb(224,213,32)"/><text x="23.3813%" y="927.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="23.1313%" y="901" width="0.1010%" height="15" fill="rgb(251,11,48)"/><text x="23.3813%" y="911.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="23.1313%" y="885" width="0.1010%" height="15" fill="rgb(236,173,5)"/><text x="23.3813%" y="895.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="23.1313%" y="869" width="0.1010%" height="15" fill="rgb(230,95,12)"/><text x="23.3813%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.10%)</title><rect x="23.2323%" y="981" width="0.1010%" height="15" fill="rgb(232,209,1)"/><text x="23.4823%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.10%)</title><rect x="23.2323%" y="965" width="0.1010%" height="15" fill="rgb(232,6,1)"/><text x="23.4823%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="23.3333%" y="949" width="0.1010%" height="15" fill="rgb(210,224,50)"/><text x="23.5833%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.81%)</title><rect x="22.9293%" y="1061" width="0.8081%" height="15" fill="rgb(228,127,35)"/><text x="23.1793%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.71%)</title><rect x="23.0303%" y="1045" width="0.7071%" height="15" fill="rgb(245,102,45)"/><text x="23.2803%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.71%)</title><rect x="23.0303%" y="1029" width="0.7071%" height="15" fill="rgb(214,1,49)"/><text x="23.2803%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.71%)</title><rect x="23.0303%" y="1013" width="0.7071%" height="15" fill="rgb(226,163,40)"/><text x="23.2803%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="23.0303%" y="997" width="0.7071%" height="15" fill="rgb(239,212,28)"/><text x="23.2803%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.40%)</title><rect x="23.3333%" y="981" width="0.4040%" height="15" fill="rgb(220,20,13)"/><text x="23.5833%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.40%)</title><rect x="23.3333%" y="965" width="0.4040%" height="15" fill="rgb(210,164,35)"/><text x="23.5833%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.30%)</title><rect x="23.4343%" y="949" width="0.3030%" height="15" fill="rgb(248,109,41)"/><text x="23.6843%" y="959.50"></text></g><g><title>core::fmt::Formatter::write_fmt (10 samples, 1.01%)</title><rect x="22.8283%" y="1093" width="1.0101%" height="15" fill="rgb(238,23,50)"/><text x="23.0783%" y="1103.50"></text></g><g><title>core::fmt::write (10 samples, 1.01%)</title><rect x="22.8283%" y="1077" width="1.0101%" height="15" fill="rgb(211,48,49)"/><text x="23.0783%" y="1087.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.10%)</title><rect x="23.7374%" y="1061" width="0.1010%" height="15" fill="rgb(223,36,21)"/><text x="23.9874%" y="1071.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="23.7374%" y="1045" width="0.1010%" height="15" fill="rgb(207,123,46)"/><text x="23.9874%" y="1055.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="23.7374%" y="1029" width="0.1010%" height="15" fill="rgb(240,218,32)"/><text x="23.9874%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="23.7374%" y="1013" width="0.1010%" height="15" fill="rgb(252,5,43)"/><text x="23.9874%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="23.7374%" y="997" width="0.1010%" height="15" fill="rgb(252,84,19)"/><text x="23.9874%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="23.7374%" y="981" width="0.1010%" height="15" fill="rgb(243,152,39)"/><text x="23.9874%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="23.7374%" y="965" width="0.1010%" height="15" fill="rgb(234,160,15)"/><text x="23.9874%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="23.7374%" y="949" width="0.1010%" height="15" fill="rgb(237,34,20)"/><text x="23.9874%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="23.7374%" y="933" width="0.1010%" height="15" fill="rgb(229,97,13)"/><text x="23.9874%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="23.7374%" y="917" width="0.1010%" height="15" fill="rgb(234,71,50)"/><text x="23.9874%" y="927.50"></text></g><g><title>&lt;polar::types::Symbol as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="23.9394%" y="901" width="0.1010%" height="15" fill="rgb(253,155,4)"/><text x="24.1894%" y="911.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.10%)</title><rect x="23.9394%" y="885" width="0.1010%" height="15" fill="rgb(222,185,37)"/><text x="24.1894%" y="895.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.10%)</title><rect x="23.9394%" y="869" width="0.1010%" height="15" fill="rgb(251,177,13)"/><text x="24.1894%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="23.9394%" y="853" width="0.1010%" height="15" fill="rgb(250,179,40)"/><text x="24.1894%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="24.0404%" y="901" width="0.1010%" height="15" fill="rgb(242,44,2)"/><text x="24.2904%" y="911.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (4 samples, 0.40%)</title><rect x="23.8384%" y="917" width="0.4040%" height="15" fill="rgb(216,177,13)"/><text x="24.0884%" y="927.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="24.1414%" y="901" width="0.1010%" height="15" fill="rgb(216,106,43)"/><text x="24.3914%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="24.1414%" y="885" width="0.1010%" height="15" fill="rgb(216,183,2)"/><text x="24.3914%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="24.1414%" y="869" width="0.1010%" height="15" fill="rgb(249,75,3)"/><text x="24.3914%" y="879.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (22 samples, 2.22%)</title><rect x="22.1212%" y="1157" width="2.2222%" height="15" fill="rgb(219,67,39)"/><text x="22.3712%" y="1167.50">&lt;..</text></g><g><title>core::fmt::Write::write_fmt (20 samples, 2.02%)</title><rect x="22.3232%" y="1141" width="2.0202%" height="15" fill="rgb(253,228,2)"/><text x="22.5732%" y="1151.50">c..</text></g><g><title>core::fmt::write (20 samples, 2.02%)</title><rect x="22.3232%" y="1125" width="2.0202%" height="15" fill="rgb(235,138,27)"/><text x="22.5732%" y="1135.50">c..</text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (20 samples, 2.02%)</title><rect x="22.3232%" y="1109" width="2.0202%" height="15" fill="rgb(236,97,51)"/><text x="22.5732%" y="1119.50">p..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.51%)</title><rect x="23.8384%" y="1093" width="0.5051%" height="15" fill="rgb(240,80,30)"/><text x="24.0884%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="23.8384%" y="1077" width="0.5051%" height="15" fill="rgb(230,178,19)"/><text x="24.0884%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="23.8384%" y="1061" width="0.5051%" height="15" fill="rgb(210,190,27)"/><text x="24.0884%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="23.8384%" y="1045" width="0.5051%" height="15" fill="rgb(222,107,31)"/><text x="24.0884%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.51%)</title><rect x="23.8384%" y="1029" width="0.5051%" height="15" fill="rgb(216,127,34)"/><text x="24.0884%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="23.8384%" y="1013" width="0.5051%" height="15" fill="rgb(234,116,52)"/><text x="24.0884%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.51%)</title><rect x="23.8384%" y="997" width="0.5051%" height="15" fill="rgb(222,124,15)"/><text x="24.0884%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.51%)</title><rect x="23.8384%" y="981" width="0.5051%" height="15" fill="rgb(231,179,28)"/><text x="24.0884%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (5 samples, 0.51%)</title><rect x="23.8384%" y="965" width="0.5051%" height="15" fill="rgb(226,93,45)"/><text x="24.0884%" y="975.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (5 samples, 0.51%)</title><rect x="23.8384%" y="949" width="0.5051%" height="15" fill="rgb(215,8,51)"/><text x="24.0884%" y="959.50"></text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (5 samples, 0.51%)</title><rect x="23.8384%" y="933" width="0.5051%" height="15" fill="rgb(223,106,5)"/><text x="24.0884%" y="943.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="24.2424%" y="917" width="0.1010%" height="15" fill="rgb(250,191,5)"/><text x="24.4924%" y="927.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="24.2424%" y="901" width="0.1010%" height="15" fill="rgb(242,132,44)"/><text x="24.4924%" y="911.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="24.2424%" y="885" width="0.1010%" height="15" fill="rgb(251,152,29)"/><text x="24.4924%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="24.2424%" y="869" width="0.1010%" height="15" fill="rgb(218,179,5)"/><text x="24.4924%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="24.2424%" y="853" width="0.1010%" height="15" fill="rgb(227,67,19)"/><text x="24.4924%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="24.2424%" y="837" width="0.1010%" height="15" fill="rgb(233,119,31)"/><text x="24.4924%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="24.3434%" y="853" width="0.1010%" height="15" fill="rgb(241,120,22)"/><text x="24.5934%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="24.3434%" y="837" width="0.1010%" height="15" fill="rgb(224,102,30)"/><text x="24.5934%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="24.3434%" y="821" width="0.1010%" height="15" fill="rgb(210,164,37)"/><text x="24.5934%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="24.3434%" y="805" width="0.1010%" height="15" fill="rgb(226,191,16)"/><text x="24.5934%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="24.3434%" y="789" width="0.1010%" height="15" fill="rgb(214,40,45)"/><text x="24.5934%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="24.3434%" y="901" width="0.2020%" height="15" fill="rgb(244,29,26)"/><text x="24.5934%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="24.3434%" y="885" width="0.2020%" height="15" fill="rgb(216,16,5)"/><text x="24.5934%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="24.3434%" y="869" width="0.2020%" height="15" fill="rgb(249,76,35)"/><text x="24.5934%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="24.4444%" y="853" width="0.1010%" height="15" fill="rgb(207,11,44)"/><text x="24.6944%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="24.4444%" y="837" width="0.1010%" height="15" fill="rgb(228,190,49)"/><text x="24.6944%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="24.4444%" y="821" width="0.1010%" height="15" fill="rgb(214,173,12)"/><text x="24.6944%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="24.4444%" y="805" width="0.1010%" height="15" fill="rgb(218,26,35)"/><text x="24.6944%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="24.4444%" y="789" width="0.1010%" height="15" fill="rgb(220,200,19)"/><text x="24.6944%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="24.4444%" y="773" width="0.1010%" height="15" fill="rgb(239,95,49)"/><text x="24.6944%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="24.4444%" y="757" width="0.1010%" height="15" fill="rgb(235,85,53)"/><text x="24.6944%" y="767.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="24.5455%" y="901" width="0.1010%" height="15" fill="rgb(233,133,31)"/><text x="24.7955%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="24.5455%" y="885" width="0.1010%" height="15" fill="rgb(218,25,20)"/><text x="24.7955%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="24.5455%" y="869" width="0.1010%" height="15" fill="rgb(252,210,38)"/><text x="24.7955%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="24.5455%" y="853" width="0.1010%" height="15" fill="rgb(242,134,21)"/><text x="24.7955%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="24.5455%" y="837" width="0.1010%" height="15" fill="rgb(213,28,48)"/><text x="24.7955%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="24.5455%" y="821" width="0.1010%" height="15" fill="rgb(250,196,2)"/><text x="24.7955%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="24.5455%" y="805" width="0.1010%" height="15" fill="rgb(227,5,17)"/><text x="24.7955%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="24.5455%" y="789" width="0.1010%" height="15" fill="rgb(221,226,24)"/><text x="24.7955%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="24.5455%" y="773" width="0.1010%" height="15" fill="rgb(211,5,48)"/><text x="24.7955%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="24.5455%" y="757" width="0.1010%" height="15" fill="rgb(219,150,6)"/><text x="24.7955%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="24.5455%" y="741" width="0.1010%" height="15" fill="rgb(251,46,16)"/><text x="24.7955%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="24.5455%" y="725" width="0.1010%" height="15" fill="rgb(220,204,40)"/><text x="24.7955%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="24.5455%" y="709" width="0.1010%" height="15" fill="rgb(211,85,2)"/><text x="24.7955%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="24.3434%" y="1093" width="0.4040%" height="15" fill="rgb(229,17,7)"/><text x="24.5934%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="24.3434%" y="1077" width="0.4040%" height="15" fill="rgb(239,72,28)"/><text x="24.5934%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="24.3434%" y="1061" width="0.4040%" height="15" fill="rgb(230,47,54)"/><text x="24.5934%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="24.3434%" y="1045" width="0.4040%" height="15" fill="rgb(214,50,8)"/><text x="24.5934%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="24.3434%" y="1029" width="0.4040%" height="15" fill="rgb(216,198,43)"/><text x="24.5934%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="24.3434%" y="1013" width="0.4040%" height="15" fill="rgb(234,20,35)"/><text x="24.5934%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="24.3434%" y="997" width="0.4040%" height="15" fill="rgb(254,45,19)"/><text x="24.5934%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="24.3434%" y="981" width="0.4040%" height="15" fill="rgb(219,14,44)"/><text x="24.5934%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="24.3434%" y="965" width="0.4040%" height="15" fill="rgb(217,220,26)"/><text x="24.5934%" y="975.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="24.3434%" y="949" width="0.4040%" height="15" fill="rgb(213,158,28)"/><text x="24.5934%" y="959.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.40%)</title><rect x="24.3434%" y="933" width="0.4040%" height="15" fill="rgb(252,51,52)"/><text x="24.5934%" y="943.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="24.3434%" y="917" width="0.4040%" height="15" fill="rgb(246,89,16)"/><text x="24.5934%" y="927.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="24.6465%" y="901" width="0.1010%" height="15" fill="rgb(216,158,49)"/><text x="24.8965%" y="911.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="24.6465%" y="885" width="0.1010%" height="15" fill="rgb(236,107,19)"/><text x="24.8965%" y="895.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="24.6465%" y="869" width="0.1010%" height="15" fill="rgb(228,185,30)"/><text x="24.8965%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="24.6465%" y="853" width="0.1010%" height="15" fill="rgb(246,134,8)"/><text x="24.8965%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="24.6465%" y="837" width="0.1010%" height="15" fill="rgb(214,143,50)"/><text x="24.8965%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="24.6465%" y="821" width="0.1010%" height="15" fill="rgb(228,75,8)"/><text x="24.8965%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="24.6465%" y="805" width="0.1010%" height="15" fill="rgb(207,175,4)"/><text x="24.8965%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="24.6465%" y="789" width="0.1010%" height="15" fill="rgb(205,108,24)"/><text x="24.8965%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="24.6465%" y="773" width="0.1010%" height="15" fill="rgb(244,120,49)"/><text x="24.8965%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="24.6465%" y="757" width="0.1010%" height="15" fill="rgb(223,47,38)"/><text x="24.8965%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="24.6465%" y="741" width="0.1010%" height="15" fill="rgb(229,179,11)"/><text x="24.8965%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="24.6465%" y="725" width="0.1010%" height="15" fill="rgb(231,122,1)"/><text x="24.8965%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="24.6465%" y="709" width="0.1010%" height="15" fill="rgb(245,119,9)"/><text x="24.8965%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="24.6465%" y="693" width="0.1010%" height="15" fill="rgb(241,163,25)"/><text x="24.8965%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="24.6465%" y="677" width="0.1010%" height="15" fill="rgb(217,214,3)"/><text x="24.8965%" y="687.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="24.6465%" y="661" width="0.1010%" height="15" fill="rgb(240,86,28)"/><text x="24.8965%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="24.6465%" y="645" width="0.1010%" height="15" fill="rgb(215,47,9)"/><text x="24.8965%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="24.6465%" y="629" width="0.1010%" height="15" fill="rgb(252,25,45)"/><text x="24.8965%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="24.6465%" y="613" width="0.1010%" height="15" fill="rgb(251,164,9)"/><text x="24.8965%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="24.3434%" y="1141" width="0.8081%" height="15" fill="rgb(233,194,0)"/><text x="24.5934%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.81%)</title><rect x="24.3434%" y="1125" width="0.8081%" height="15" fill="rgb(249,111,24)"/><text x="24.5934%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.81%)</title><rect x="24.3434%" y="1109" width="0.8081%" height="15" fill="rgb(250,223,3)"/><text x="24.5934%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="24.7475%" y="1093" width="0.4040%" height="15" fill="rgb(236,178,37)"/><text x="24.9975%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="24.7475%" y="1077" width="0.4040%" height="15" fill="rgb(241,158,50)"/><text x="24.9975%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="24.7475%" y="1061" width="0.4040%" height="15" fill="rgb(213,121,41)"/><text x="24.9975%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="24.7475%" y="1045" width="0.4040%" height="15" fill="rgb(240,92,3)"/><text x="24.9975%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="24.7475%" y="1029" width="0.4040%" height="15" fill="rgb(205,123,3)"/><text x="24.9975%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="24.7475%" y="1013" width="0.4040%" height="15" fill="rgb(205,97,47)"/><text x="24.9975%" y="1023.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.40%)</title><rect x="24.7475%" y="997" width="0.4040%" height="15" fill="rgb(247,152,14)"/><text x="24.9975%" y="1007.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="24.7475%" y="981" width="0.4040%" height="15" fill="rgb(248,195,53)"/><text x="24.9975%" y="991.50"></text></g><g><title>malloc_consolidate (2 samples, 0.20%)</title><rect x="24.9495%" y="965" width="0.2020%" height="15" fill="rgb(226,201,16)"/><text x="25.1995%" y="975.50"></text></g><g><title>&lt;polar::vm::Goal as core::clone::Clone&gt;::clone (9 samples, 0.91%)</title><rect x="24.3434%" y="1157" width="0.9091%" height="15" fill="rgb(205,98,0)"/><text x="24.5934%" y="1167.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="25.1515%" y="1141" width="0.1010%" height="15" fill="rgb(214,191,48)"/><text x="25.4015%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="25.1515%" y="1125" width="0.1010%" height="15" fill="rgb(237,112,39)"/><text x="25.4015%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="25.4545%" y="1061" width="0.1010%" height="15" fill="rgb(247,203,27)"/><text x="25.7045%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.4545%" y="1045" width="0.1010%" height="15" fill="rgb(235,124,28)"/><text x="25.7045%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.4545%" y="1029" width="0.1010%" height="15" fill="rgb(208,207,46)"/><text x="25.7045%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.4545%" y="1013" width="0.1010%" height="15" fill="rgb(234,176,4)"/><text x="25.7045%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.4545%" y="997" width="0.1010%" height="15" fill="rgb(230,133,28)"/><text x="25.7045%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.4545%" y="981" width="0.1010%" height="15" fill="rgb(211,137,40)"/><text x="25.7045%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (35 samples, 3.54%)</title><rect x="22.1212%" y="1381" width="3.5354%" height="15" fill="rgb(254,35,13)"/><text x="22.3712%" y="1391.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 3.54%)</title><rect x="22.1212%" y="1365" width="3.5354%" height="15" fill="rgb(225,49,51)"/><text x="22.3712%" y="1375.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 3.54%)</title><rect x="22.1212%" y="1349" width="3.5354%" height="15" fill="rgb(251,10,15)"/><text x="22.3712%" y="1359.50">cor..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 3.54%)</title><rect x="22.1212%" y="1333" width="3.5354%" height="15" fill="rgb(228,207,15)"/><text x="22.3712%" y="1343.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 3.54%)</title><rect x="22.1212%" y="1317" width="3.5354%" height="15" fill="rgb(241,99,19)"/><text x="22.3712%" y="1327.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (35 samples, 3.54%)</title><rect x="22.1212%" y="1301" width="3.5354%" height="15" fill="rgb(207,104,49)"/><text x="22.3712%" y="1311.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (35 samples, 3.54%)</title><rect x="22.1212%" y="1285" width="3.5354%" height="15" fill="rgb(234,99,18)"/><text x="22.3712%" y="1295.50">cor..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (35 samples, 3.54%)</title><rect x="22.1212%" y="1269" width="3.5354%" height="15" fill="rgb(213,191,49)"/><text x="22.3712%" y="1279.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 3.54%)</title><rect x="22.1212%" y="1253" width="3.5354%" height="15" fill="rgb(210,226,19)"/><text x="22.3712%" y="1263.50">cor..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (35 samples, 3.54%)</title><rect x="22.1212%" y="1237" width="3.5354%" height="15" fill="rgb(229,97,18)"/><text x="22.3712%" y="1247.50">ben..</text></g><g><title>bench::Runner::run (35 samples, 3.54%)</title><rect x="22.1212%" y="1221" width="3.5354%" height="15" fill="rgb(211,167,15)"/><text x="22.3712%" y="1231.50">ben..</text></g><g><title>bench::Runner::next (35 samples, 3.54%)</title><rect x="22.1212%" y="1205" width="3.5354%" height="15" fill="rgb(210,169,34)"/><text x="22.3712%" y="1215.50">ben..</text></g><g><title>polar::polar::Polar::query (35 samples, 3.54%)</title><rect x="22.1212%" y="1189" width="3.5354%" height="15" fill="rgb(241,121,31)"/><text x="22.3712%" y="1199.50">pol..</text></g><g><title>polar::vm::PolarVirtualMachine::run (35 samples, 3.54%)</title><rect x="22.1212%" y="1173" width="3.5354%" height="15" fill="rgb(232,40,11)"/><text x="22.3712%" y="1183.50">pol..</text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="25.2525%" y="1157" width="0.4040%" height="15" fill="rgb(205,86,26)"/><text x="25.5025%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="25.3535%" y="1141" width="0.3030%" height="15" fill="rgb(231,126,28)"/><text x="25.6035%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="25.3535%" y="1125" width="0.3030%" height="15" fill="rgb(219,221,18)"/><text x="25.6035%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="25.3535%" y="1109" width="0.3030%" height="15" fill="rgb(211,40,0)"/><text x="25.6035%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="25.3535%" y="1093" width="0.3030%" height="15" fill="rgb(239,85,43)"/><text x="25.6035%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="25.4545%" y="1077" width="0.2020%" height="15" fill="rgb(231,55,21)"/><text x="25.7045%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.5556%" y="1061" width="0.1010%" height="15" fill="rgb(225,184,43)"/><text x="25.8056%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="25.5556%" y="1045" width="0.1010%" height="15" fill="rgb(251,158,41)"/><text x="25.8056%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="25.5556%" y="1029" width="0.1010%" height="15" fill="rgb(234,159,37)"/><text x="25.8056%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="25.5556%" y="1013" width="0.1010%" height="15" fill="rgb(216,204,22)"/><text x="25.8056%" y="1023.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="25.5556%" y="997" width="0.1010%" height="15" fill="rgb(214,17,3)"/><text x="25.8056%" y="1007.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.10%)</title><rect x="25.6566%" y="1237" width="0.1010%" height="15" fill="rgb(212,111,17)"/><text x="25.9066%" y="1247.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="25.6566%" y="1221" width="0.1010%" height="15" fill="rgb(221,157,24)"/><text x="25.9066%" y="1231.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="25.6566%" y="1205" width="0.1010%" height="15" fill="rgb(252,16,13)"/><text x="25.9066%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="25.6566%" y="1189" width="0.1010%" height="15" fill="rgb(221,62,2)"/><text x="25.9066%" y="1199.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="25.6566%" y="1173" width="0.1010%" height="15" fill="rgb(247,87,22)"/><text x="25.9066%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="25.6566%" y="1157" width="0.1010%" height="15" fill="rgb(215,73,9)"/><text x="25.9066%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="25.6566%" y="1141" width="0.1010%" height="15" fill="rgb(207,175,33)"/><text x="25.9066%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="25.6566%" y="1125" width="0.1010%" height="15" fill="rgb(243,129,54)"/><text x="25.9066%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="25.6566%" y="1109" width="0.1010%" height="15" fill="rgb(227,119,45)"/><text x="25.9066%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="25.6566%" y="1093" width="0.1010%" height="15" fill="rgb(205,109,36)"/><text x="25.9066%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="25.6566%" y="1077" width="0.1010%" height="15" fill="rgb(205,6,39)"/><text x="25.9066%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="25.6566%" y="1061" width="0.1010%" height="15" fill="rgb(221,32,16)"/><text x="25.9066%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="25.6566%" y="1045" width="0.1010%" height="15" fill="rgb(228,144,50)"/><text x="25.9066%" y="1055.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="25.6566%" y="1029" width="0.1010%" height="15" fill="rgb(229,201,53)"/><text x="25.9066%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.7576%" y="1045" width="0.1010%" height="15" fill="rgb(249,153,27)"/><text x="26.0076%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.7576%" y="1029" width="0.1010%" height="15" fill="rgb(227,106,25)"/><text x="26.0076%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.7576%" y="1013" width="0.1010%" height="15" fill="rgb(230,65,29)"/><text x="26.0076%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="25.7576%" y="997" width="0.1010%" height="15" fill="rgb(221,57,46)"/><text x="26.0076%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="25.7576%" y="981" width="0.1010%" height="15" fill="rgb(229,161,17)"/><text x="26.0076%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="25.7576%" y="965" width="0.1010%" height="15" fill="rgb(222,213,11)"/><text x="26.0076%" y="975.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="25.7576%" y="949" width="0.1010%" height="15" fill="rgb(235,35,13)"/><text x="26.0076%" y="959.50"></text></g><g><title>bench::main (196 samples, 19.80%)</title><rect x="6.1616%" y="1573" width="19.7980%" height="15" fill="rgb(233,158,34)"/><text x="6.4116%" y="1583.50">bench::main</text></g><g><title>bench::benches (196 samples, 19.80%)</title><rect x="6.1616%" y="1557" width="19.7980%" height="15" fill="rgb(215,151,48)"/><text x="6.4116%" y="1567.50">bench::benches</text></g><g><title>bench::too_many_predicates (196 samples, 19.80%)</title><rect x="6.1616%" y="1541" width="19.7980%" height="15" fill="rgb(229,84,14)"/><text x="6.4116%" y="1551.50">bench::too_many_predicates</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (196 samples, 19.80%)</title><rect x="6.1616%" y="1525" width="19.7980%" height="15" fill="rgb(229,68,14)"/><text x="6.4116%" y="1535.50">criterion::Criterion&lt;M&gt;::bench_..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (196 samples, 19.80%)</title><rect x="6.1616%" y="1509" width="19.7980%" height="15" fill="rgb(243,106,26)"/><text x="6.4116%" y="1519.50">criterion::benchmark_group::Ben..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (196 samples, 19.80%)</title><rect x="6.1616%" y="1493" width="19.7980%" height="15" fill="rgb(206,45,38)"/><text x="6.4116%" y="1503.50">criterion::benchmark_group::Ben..</text></g><g><title>criterion::analysis::common (196 samples, 19.80%)</title><rect x="6.1616%" y="1477" width="19.7980%" height="15" fill="rgb(226,6,15)"/><text x="6.4116%" y="1487.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::profile (196 samples, 19.80%)</title><rect x="6.1616%" y="1461" width="19.7980%" height="15" fill="rgb(232,22,54)"/><text x="6.4116%" y="1471.50">criterion::routine::Routine::pr..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (38 samples, 3.84%)</title><rect x="22.1212%" y="1445" width="3.8384%" height="15" fill="rgb(229,222,32)"/><text x="22.3712%" y="1455.50">&lt;cri..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (38 samples, 3.84%)</title><rect x="22.1212%" y="1429" width="3.8384%" height="15" fill="rgb(228,62,29)"/><text x="22.3712%" y="1439.50">crit..</text></g><g><title>bench::too_many_predicates::_{{closure}} (38 samples, 3.84%)</title><rect x="22.1212%" y="1413" width="3.8384%" height="15" fill="rgb(251,103,34)"/><text x="22.3712%" y="1423.50">benc..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (38 samples, 3.84%)</title><rect x="22.1212%" y="1397" width="3.8384%" height="15" fill="rgb(233,12,30)"/><text x="22.3712%" y="1407.50">crit..</text></g><g><title>bench::too_many_predicates::_{{closure}}::_{{closure}} (3 samples, 0.30%)</title><rect x="25.6566%" y="1381" width="0.3030%" height="15" fill="rgb(238,52,0)"/><text x="25.9066%" y="1391.50"></text></g><g><title>bench::Runner::run (3 samples, 0.30%)</title><rect x="25.6566%" y="1365" width="0.3030%" height="15" fill="rgb(223,98,5)"/><text x="25.9066%" y="1375.50"></text></g><g><title>bench::Runner::next (3 samples, 0.30%)</title><rect x="25.6566%" y="1349" width="0.3030%" height="15" fill="rgb(228,75,37)"/><text x="25.9066%" y="1359.50"></text></g><g><title>polar::polar::Polar::query (3 samples, 0.30%)</title><rect x="25.6566%" y="1333" width="0.3030%" height="15" fill="rgb(205,115,49)"/><text x="25.9066%" y="1343.50"></text></g><g><title>polar::vm::PolarVirtualMachine::run (3 samples, 0.30%)</title><rect x="25.6566%" y="1317" width="0.3030%" height="15" fill="rgb(250,154,43)"/><text x="25.9066%" y="1327.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3 samples, 0.30%)</title><rect x="25.6566%" y="1301" width="0.3030%" height="15" fill="rgb(226,43,29)"/><text x="25.9066%" y="1311.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.30%)</title><rect x="25.6566%" y="1285" width="0.3030%" height="15" fill="rgb(249,228,39)"/><text x="25.9066%" y="1295.50"></text></g><g><title>core::fmt::write (3 samples, 0.30%)</title><rect x="25.6566%" y="1269" width="0.3030%" height="15" fill="rgb(216,79,43)"/><text x="25.9066%" y="1279.50"></text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (3 samples, 0.30%)</title><rect x="25.6566%" y="1253" width="0.3030%" height="15" fill="rgb(228,95,12)"/><text x="25.9066%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="25.7576%" y="1237" width="0.2020%" height="15" fill="rgb(249,221,15)"/><text x="26.0076%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="25.7576%" y="1221" width="0.2020%" height="15" fill="rgb(233,34,13)"/><text x="26.0076%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="25.7576%" y="1205" width="0.2020%" height="15" fill="rgb(214,103,39)"/><text x="26.0076%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="25.7576%" y="1189" width="0.2020%" height="15" fill="rgb(251,126,39)"/><text x="26.0076%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="25.7576%" y="1173" width="0.2020%" height="15" fill="rgb(214,216,36)"/><text x="26.0076%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="25.7576%" y="1157" width="0.2020%" height="15" fill="rgb(220,221,8)"/><text x="26.0076%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="25.7576%" y="1141" width="0.2020%" height="15" fill="rgb(240,216,3)"/><text x="26.0076%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="25.7576%" y="1125" width="0.2020%" height="15" fill="rgb(232,218,17)"/><text x="26.0076%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="25.7576%" y="1109" width="0.2020%" height="15" fill="rgb(229,163,45)"/><text x="26.0076%" y="1119.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="25.7576%" y="1093" width="0.2020%" height="15" fill="rgb(231,110,42)"/><text x="26.0076%" y="1103.50"></text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (2 samples, 0.20%)</title><rect x="25.7576%" y="1077" width="0.2020%" height="15" fill="rgb(208,170,48)"/><text x="26.0076%" y="1087.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="25.7576%" y="1061" width="0.2020%" height="15" fill="rgb(239,116,25)"/><text x="26.0076%" y="1071.50"></text></g><g><title>polar::formatting::to_polar::format_params (1 samples, 0.10%)</title><rect x="25.8586%" y="1045" width="0.1010%" height="15" fill="rgb(219,200,50)"/><text x="26.1086%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.8586%" y="1029" width="0.1010%" height="15" fill="rgb(245,200,0)"/><text x="26.1086%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="25.8586%" y="1013" width="0.1010%" height="15" fill="rgb(245,119,33)"/><text x="26.1086%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="25.8586%" y="997" width="0.1010%" height="15" fill="rgb(231,125,12)"/><text x="26.1086%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="25.8586%" y="981" width="0.1010%" height="15" fill="rgb(216,96,41)"/><text x="26.1086%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="25.8586%" y="965" width="0.1010%" height="15" fill="rgb(248,43,45)"/><text x="26.1086%" y="975.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="25.8586%" y="949" width="0.1010%" height="15" fill="rgb(217,222,7)"/><text x="26.1086%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="26.0606%" y="1045" width="0.1010%" height="15" fill="rgb(233,28,6)"/><text x="26.3106%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.40%)</title><rect x="25.9596%" y="1093" width="0.4040%" height="15" fill="rgb(231,218,15)"/><text x="26.2096%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (4 samples, 0.40%)</title><rect x="25.9596%" y="1077" width="0.4040%" height="15" fill="rgb(226,171,48)"/><text x="26.2096%" y="1087.50"></text></g><g><title>core::ptr::write (4 samples, 0.40%)</title><rect x="25.9596%" y="1061" width="0.4040%" height="15" fill="rgb(235,201,9)"/><text x="26.2096%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.20%)</title><rect x="26.1616%" y="1045" width="0.2020%" height="15" fill="rgb(217,80,15)"/><text x="26.4116%" y="1055.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="26.3636%" y="853" width="0.1010%" height="15" fill="rgb(219,152,8)"/><text x="26.6136%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="26.4646%" y="821" width="0.1010%" height="15" fill="rgb(243,107,38)"/><text x="26.7146%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="26.4646%" y="805" width="0.1010%" height="15" fill="rgb(231,17,5)"/><text x="26.7146%" y="815.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="26.4646%" y="789" width="0.1010%" height="15" fill="rgb(209,25,54)"/><text x="26.7146%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="26.7677%" y="709" width="0.1010%" height="15" fill="rgb(219,0,2)"/><text x="27.0177%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="26.7677%" y="693" width="0.1010%" height="15" fill="rgb(246,9,5)"/><text x="27.0177%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="26.7677%" y="677" width="0.1010%" height="15" fill="rgb(226,159,4)"/><text x="27.0177%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="26.7677%" y="661" width="0.1010%" height="15" fill="rgb(219,175,34)"/><text x="27.0177%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="26.7677%" y="645" width="0.1010%" height="15" fill="rgb(236,10,46)"/><text x="27.0177%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="26.7677%" y="629" width="0.1010%" height="15" fill="rgb(240,211,16)"/><text x="27.0177%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="26.7677%" y="613" width="0.1010%" height="15" fill="rgb(205,3,43)"/><text x="27.0177%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="26.7677%" y="597" width="0.1010%" height="15" fill="rgb(245,7,22)"/><text x="27.0177%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="26.7677%" y="581" width="0.1010%" height="15" fill="rgb(239,132,32)"/><text x="27.0177%" y="591.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="26.7677%" y="565" width="0.1010%" height="15" fill="rgb(228,202,34)"/><text x="27.0177%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="26.7677%" y="549" width="0.1010%" height="15" fill="rgb(254,200,22)"/><text x="27.0177%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="26.7677%" y="533" width="0.1010%" height="15" fill="rgb(219,10,39)"/><text x="27.0177%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="26.7677%" y="517" width="0.1010%" height="15" fill="rgb(226,210,39)"/><text x="27.0177%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="26.6667%" y="757" width="0.4040%" height="15" fill="rgb(208,219,16)"/><text x="26.9167%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="26.6667%" y="741" width="0.4040%" height="15" fill="rgb(216,158,51)"/><text x="26.9167%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="26.6667%" y="725" width="0.4040%" height="15" fill="rgb(233,14,44)"/><text x="26.9167%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="26.8687%" y="709" width="0.2020%" height="15" fill="rgb(237,97,39)"/><text x="27.1187%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="26.8687%" y="693" width="0.2020%" height="15" fill="rgb(218,198,43)"/><text x="27.1187%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="26.8687%" y="677" width="0.2020%" height="15" fill="rgb(231,104,20)"/><text x="27.1187%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="26.8687%" y="661" width="0.2020%" height="15" fill="rgb(254,36,13)"/><text x="27.1187%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="26.8687%" y="645" width="0.2020%" height="15" fill="rgb(248,14,50)"/><text x="27.1187%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="26.8687%" y="629" width="0.2020%" height="15" fill="rgb(217,107,29)"/><text x="27.1187%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="26.8687%" y="613" width="0.2020%" height="15" fill="rgb(251,169,33)"/><text x="27.1187%" y="623.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="26.8687%" y="597" width="0.2020%" height="15" fill="rgb(217,108,32)"/><text x="27.1187%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="27.0707%" y="677" width="0.1010%" height="15" fill="rgb(219,66,42)"/><text x="27.3207%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="27.0707%" y="661" width="0.1010%" height="15" fill="rgb(206,180,7)"/><text x="27.3207%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="27.0707%" y="645" width="0.1010%" height="15" fill="rgb(208,226,31)"/><text x="27.3207%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="27.0707%" y="629" width="0.1010%" height="15" fill="rgb(218,26,49)"/><text x="27.3207%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="27.0707%" y="613" width="0.1010%" height="15" fill="rgb(233,197,48)"/><text x="27.3207%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (9 samples, 0.91%)</title><rect x="26.3636%" y="981" width="0.9091%" height="15" fill="rgb(252,181,51)"/><text x="26.6136%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (9 samples, 0.91%)</title><rect x="26.3636%" y="965" width="0.9091%" height="15" fill="rgb(253,90,19)"/><text x="26.6136%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.91%)</title><rect x="26.3636%" y="949" width="0.9091%" height="15" fill="rgb(215,171,30)"/><text x="26.6136%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.91%)</title><rect x="26.3636%" y="933" width="0.9091%" height="15" fill="rgb(214,222,9)"/><text x="26.6136%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.91%)</title><rect x="26.3636%" y="917" width="0.9091%" height="15" fill="rgb(223,3,22)"/><text x="26.6136%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.91%)</title><rect x="26.3636%" y="901" width="0.9091%" height="15" fill="rgb(225,196,46)"/><text x="26.6136%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.91%)</title><rect x="26.3636%" y="885" width="0.9091%" height="15" fill="rgb(209,110,37)"/><text x="26.6136%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.91%)</title><rect x="26.3636%" y="869" width="0.9091%" height="15" fill="rgb(249,89,12)"/><text x="26.6136%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (8 samples, 0.81%)</title><rect x="26.4646%" y="853" width="0.8081%" height="15" fill="rgb(226,27,33)"/><text x="26.7146%" y="863.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (8 samples, 0.81%)</title><rect x="26.4646%" y="837" width="0.8081%" height="15" fill="rgb(213,82,22)"/><text x="26.7146%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.71%)</title><rect x="26.5657%" y="821" width="0.7071%" height="15" fill="rgb(248,140,0)"/><text x="26.8157%" y="831.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="26.5657%" y="805" width="0.7071%" height="15" fill="rgb(228,106,3)"/><text x="26.8157%" y="815.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="26.6667%" y="789" width="0.6061%" height="15" fill="rgb(209,23,37)"/><text x="26.9167%" y="799.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="26.6667%" y="773" width="0.6061%" height="15" fill="rgb(241,93,50)"/><text x="26.9167%" y="783.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="27.0707%" y="757" width="0.2020%" height="15" fill="rgb(253,46,43)"/><text x="27.3207%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="27.0707%" y="741" width="0.2020%" height="15" fill="rgb(226,206,43)"/><text x="27.3207%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="27.0707%" y="725" width="0.2020%" height="15" fill="rgb(217,54,7)"/><text x="27.3207%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="27.0707%" y="709" width="0.2020%" height="15" fill="rgb(223,5,52)"/><text x="27.3207%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="27.0707%" y="693" width="0.2020%" height="15" fill="rgb(206,52,46)"/><text x="27.3207%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="27.1717%" y="677" width="0.1010%" height="15" fill="rgb(253,136,11)"/><text x="27.4217%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="27.1717%" y="661" width="0.1010%" height="15" fill="rgb(208,106,33)"/><text x="27.4217%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="27.1717%" y="645" width="0.1010%" height="15" fill="rgb(206,54,4)"/><text x="27.4217%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="27.1717%" y="629" width="0.1010%" height="15" fill="rgb(213,3,15)"/><text x="27.4217%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="27.1717%" y="613" width="0.1010%" height="15" fill="rgb(252,211,39)"/><text x="27.4217%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="27.1717%" y="597" width="0.1010%" height="15" fill="rgb(223,6,36)"/><text x="27.4217%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="27.1717%" y="581" width="0.1010%" height="15" fill="rgb(252,169,45)"/><text x="27.4217%" y="591.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (13 samples, 1.31%)</title><rect x="26.3636%" y="1045" width="1.3131%" height="15" fill="rgb(212,48,26)"/><text x="26.6136%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 1.31%)</title><rect x="26.3636%" y="1029" width="1.3131%" height="15" fill="rgb(251,102,48)"/><text x="26.6136%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 1.31%)</title><rect x="26.3636%" y="1013" width="1.3131%" height="15" fill="rgb(243,208,16)"/><text x="26.6136%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.31%)</title><rect x="26.3636%" y="997" width="1.3131%" height="15" fill="rgb(219,96,24)"/><text x="26.6136%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="27.2727%" y="981" width="0.4040%" height="15" fill="rgb(219,33,29)"/><text x="27.5227%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="27.2727%" y="965" width="0.4040%" height="15" fill="rgb(223,176,5)"/><text x="27.5227%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="27.2727%" y="949" width="0.4040%" height="15" fill="rgb(228,140,14)"/><text x="27.5227%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="27.2727%" y="933" width="0.4040%" height="15" fill="rgb(217,179,31)"/><text x="27.5227%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="27.2727%" y="917" width="0.4040%" height="15" fill="rgb(230,9,30)"/><text x="27.5227%" y="927.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="27.2727%" y="901" width="0.4040%" height="15" fill="rgb(230,136,20)"/><text x="27.5227%" y="911.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.40%)</title><rect x="27.2727%" y="885" width="0.4040%" height="15" fill="rgb(215,210,22)"/><text x="27.5227%" y="895.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="27.2727%" y="869" width="0.4040%" height="15" fill="rgb(218,43,5)"/><text x="27.5227%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="27.6768%" y="933" width="0.1010%" height="15" fill="rgb(216,11,5)"/><text x="27.9268%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="27.6768%" y="917" width="0.1010%" height="15" fill="rgb(209,82,29)"/><text x="27.9268%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="27.6768%" y="981" width="0.4040%" height="15" fill="rgb(244,115,12)"/><text x="27.9268%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="27.6768%" y="965" width="0.4040%" height="15" fill="rgb(222,82,18)"/><text x="27.9268%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="27.6768%" y="949" width="0.4040%" height="15" fill="rgb(249,227,8)"/><text x="27.9268%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="27.7778%" y="933" width="0.3030%" height="15" fill="rgb(253,141,45)"/><text x="28.0278%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="27.7778%" y="917" width="0.3030%" height="15" fill="rgb(234,184,4)"/><text x="28.0278%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="27.7778%" y="901" width="0.3030%" height="15" fill="rgb(218,194,23)"/><text x="28.0278%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="27.7778%" y="885" width="0.3030%" height="15" fill="rgb(235,66,41)"/><text x="28.0278%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="27.7778%" y="869" width="0.3030%" height="15" fill="rgb(245,217,1)"/><text x="28.0278%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="27.7778%" y="853" width="0.3030%" height="15" fill="rgb(229,91,1)"/><text x="28.0278%" y="863.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="27.7778%" y="837" width="0.3030%" height="15" fill="rgb(207,101,30)"/><text x="28.0278%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="27.7778%" y="821" width="0.3030%" height="15" fill="rgb(223,82,49)"/><text x="28.0278%" y="831.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="27.7778%" y="805" width="0.3030%" height="15" fill="rgb(218,167,17)"/><text x="28.0278%" y="815.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="27.8788%" y="789" width="0.2020%" height="15" fill="rgb(208,103,14)"/><text x="28.1288%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="27.6768%" y="1029" width="0.5051%" height="15" fill="rgb(238,20,8)"/><text x="27.9268%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="27.6768%" y="1013" width="0.5051%" height="15" fill="rgb(218,80,54)"/><text x="27.9268%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="27.6768%" y="997" width="0.5051%" height="15" fill="rgb(240,144,17)"/><text x="27.9268%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="28.0808%" y="981" width="0.1010%" height="15" fill="rgb(245,27,50)"/><text x="28.3308%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="28.0808%" y="965" width="0.1010%" height="15" fill="rgb(251,51,7)"/><text x="28.3308%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="28.0808%" y="949" width="0.1010%" height="15" fill="rgb(245,217,29)"/><text x="28.3308%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="28.0808%" y="933" width="0.1010%" height="15" fill="rgb(221,176,29)"/><text x="28.3308%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="28.0808%" y="917" width="0.1010%" height="15" fill="rgb(212,180,24)"/><text x="28.3308%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="28.0808%" y="901" width="0.1010%" height="15" fill="rgb(254,24,2)"/><text x="28.3308%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="28.0808%" y="885" width="0.1010%" height="15" fill="rgb(230,100,2)"/><text x="28.3308%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="28.0808%" y="869" width="0.1010%" height="15" fill="rgb(219,142,25)"/><text x="28.3308%" y="879.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (19 samples, 1.92%)</title><rect x="26.3636%" y="1077" width="1.9192%" height="15" fill="rgb(240,73,43)"/><text x="26.6136%" y="1087.50">&lt;..</text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (19 samples, 1.92%)</title><rect x="26.3636%" y="1061" width="1.9192%" height="15" fill="rgb(214,114,15)"/><text x="26.6136%" y="1071.50">&lt;..</text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="27.6768%" y="1045" width="0.6061%" height="15" fill="rgb(207,130,4)"/><text x="27.9268%" y="1055.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="28.1818%" y="1029" width="0.1010%" height="15" fill="rgb(221,25,40)"/><text x="28.4318%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="28.1818%" y="1013" width="0.1010%" height="15" fill="rgb(241,184,7)"/><text x="28.4318%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="28.1818%" y="997" width="0.1010%" height="15" fill="rgb(235,159,4)"/><text x="28.4318%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="28.1818%" y="981" width="0.1010%" height="15" fill="rgb(214,87,48)"/><text x="28.4318%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="28.1818%" y="965" width="0.1010%" height="15" fill="rgb(246,198,24)"/><text x="28.4318%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="28.1818%" y="949" width="0.1010%" height="15" fill="rgb(209,66,40)"/><text x="28.4318%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="28.1818%" y="933" width="0.1010%" height="15" fill="rgb(233,147,39)"/><text x="28.4318%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="28.1818%" y="917" width="0.1010%" height="15" fill="rgb(231,145,52)"/><text x="28.4318%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="28.1818%" y="901" width="0.1010%" height="15" fill="rgb(206,20,26)"/><text x="28.4318%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="28.1818%" y="885" width="0.1010%" height="15" fill="rgb(238,220,4)"/><text x="28.4318%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="28.1818%" y="869" width="0.1010%" height="15" fill="rgb(252,195,42)"/><text x="28.4318%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="28.1818%" y="853" width="0.1010%" height="15" fill="rgb(209,10,6)"/><text x="28.4318%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="28.1818%" y="837" width="0.1010%" height="15" fill="rgb(229,3,52)"/><text x="28.4318%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="28.4848%" y="917" width="0.2020%" height="15" fill="rgb(253,49,37)"/><text x="28.7348%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="28.4848%" y="901" width="0.2020%" height="15" fill="rgb(240,103,49)"/><text x="28.7348%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="28.6869%" y="805" width="0.1010%" height="15" fill="rgb(250,182,30)"/><text x="28.9369%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="28.6869%" y="789" width="0.1010%" height="15" fill="rgb(248,8,30)"/><text x="28.9369%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="28.6869%" y="773" width="0.1010%" height="15" fill="rgb(237,120,30)"/><text x="28.9369%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="28.9899%" y="645" width="0.1010%" height="15" fill="rgb(221,146,34)"/><text x="29.2399%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="28.9899%" y="629" width="0.1010%" height="15" fill="rgb(242,55,13)"/><text x="29.2399%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="28.9899%" y="613" width="0.1010%" height="15" fill="rgb(242,112,31)"/><text x="29.2399%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.10%)</title><rect x="28.9899%" y="597" width="0.1010%" height="15" fill="rgb(249,192,27)"/><text x="29.2399%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.10%)</title><rect x="28.9899%" y="581" width="0.1010%" height="15" fill="rgb(208,204,44)"/><text x="29.2399%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="28.8889%" y="693" width="0.4040%" height="15" fill="rgb(208,93,54)"/><text x="29.1389%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="28.9899%" y="677" width="0.3030%" height="15" fill="rgb(242,1,31)"/><text x="29.2399%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="28.9899%" y="661" width="0.3030%" height="15" fill="rgb(241,83,25)"/><text x="29.2399%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="29.0909%" y="645" width="0.2020%" height="15" fill="rgb(205,169,50)"/><text x="29.3409%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="29.0909%" y="629" width="0.2020%" height="15" fill="rgb(239,186,37)"/><text x="29.3409%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="29.0909%" y="613" width="0.2020%" height="15" fill="rgb(205,221,10)"/><text x="29.3409%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="29.0909%" y="597" width="0.2020%" height="15" fill="rgb(218,196,15)"/><text x="29.3409%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="29.0909%" y="581" width="0.2020%" height="15" fill="rgb(218,196,35)"/><text x="29.3409%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="29.0909%" y="565" width="0.2020%" height="15" fill="rgb(233,63,24)"/><text x="29.3409%" y="575.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="29.0909%" y="549" width="0.2020%" height="15" fill="rgb(225,8,4)"/><text x="29.3409%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="29.0909%" y="533" width="0.2020%" height="15" fill="rgb(234,105,35)"/><text x="29.3409%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="29.0909%" y="517" width="0.2020%" height="15" fill="rgb(236,21,32)"/><text x="29.3409%" y="527.50"></text></g><g><title>core::ptr::write (2 samples, 0.20%)</title><rect x="29.0909%" y="501" width="0.2020%" height="15" fill="rgb(228,109,6)"/><text x="29.3409%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="28.8889%" y="741" width="0.5051%" height="15" fill="rgb(229,215,31)"/><text x="29.1389%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="28.8889%" y="725" width="0.5051%" height="15" fill="rgb(221,52,54)"/><text x="29.1389%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="28.8889%" y="709" width="0.5051%" height="15" fill="rgb(252,129,43)"/><text x="29.1389%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="29.2929%" y="693" width="0.1010%" height="15" fill="rgb(248,183,27)"/><text x="29.5429%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="29.2929%" y="677" width="0.1010%" height="15" fill="rgb(250,0,22)"/><text x="29.5429%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="29.2929%" y="661" width="0.1010%" height="15" fill="rgb(213,166,10)"/><text x="29.5429%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="29.2929%" y="645" width="0.1010%" height="15" fill="rgb(207,163,36)"/><text x="29.5429%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="29.2929%" y="629" width="0.1010%" height="15" fill="rgb(208,122,22)"/><text x="29.5429%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="29.2929%" y="613" width="0.1010%" height="15" fill="rgb(207,104,49)"/><text x="29.5429%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="29.2929%" y="597" width="0.1010%" height="15" fill="rgb(248,211,50)"/><text x="29.5429%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="29.2929%" y="581" width="0.1010%" height="15" fill="rgb(217,13,45)"/><text x="29.5429%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="29.4949%" y="661" width="0.1010%" height="15" fill="rgb(211,216,49)"/><text x="29.7449%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="29.4949%" y="645" width="0.1010%" height="15" fill="rgb(221,58,53)"/><text x="29.7449%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="29.4949%" y="629" width="0.1010%" height="15" fill="rgb(220,112,41)"/><text x="29.7449%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="29.4949%" y="613" width="0.1010%" height="15" fill="rgb(236,38,28)"/><text x="29.7449%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="29.4949%" y="597" width="0.1010%" height="15" fill="rgb(227,195,22)"/><text x="29.7449%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="29.5960%" y="565" width="0.3030%" height="15" fill="rgb(214,55,33)"/><text x="29.8460%" y="575.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="29.6970%" y="549" width="0.2020%" height="15" fill="rgb(248,80,13)"/><text x="29.9470%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (15 samples, 1.52%)</title><rect x="28.4848%" y="965" width="1.5152%" height="15" fill="rgb(238,52,6)"/><text x="28.7348%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (15 samples, 1.52%)</title><rect x="28.4848%" y="949" width="1.5152%" height="15" fill="rgb(224,198,47)"/><text x="28.7348%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 1.52%)</title><rect x="28.4848%" y="933" width="1.5152%" height="15" fill="rgb(233,171,20)"/><text x="28.7348%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 1.31%)</title><rect x="28.6869%" y="917" width="1.3131%" height="15" fill="rgb(241,30,25)"/><text x="28.9369%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.31%)</title><rect x="28.6869%" y="901" width="1.3131%" height="15" fill="rgb(207,171,38)"/><text x="28.9369%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.31%)</title><rect x="28.6869%" y="885" width="1.3131%" height="15" fill="rgb(234,70,1)"/><text x="28.9369%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 1.31%)</title><rect x="28.6869%" y="869" width="1.3131%" height="15" fill="rgb(232,178,18)"/><text x="28.9369%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 1.31%)</title><rect x="28.6869%" y="853" width="1.3131%" height="15" fill="rgb(241,78,40)"/><text x="28.9369%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (13 samples, 1.31%)</title><rect x="28.6869%" y="837" width="1.3131%" height="15" fill="rgb(222,35,25)"/><text x="28.9369%" y="847.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (13 samples, 1.31%)</title><rect x="28.6869%" y="821" width="1.3131%" height="15" fill="rgb(207,92,16)"/><text x="28.9369%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (12 samples, 1.21%)</title><rect x="28.7879%" y="805" width="1.2121%" height="15" fill="rgb(216,59,51)"/><text x="29.0379%" y="815.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (12 samples, 1.21%)</title><rect x="28.7879%" y="789" width="1.2121%" height="15" fill="rgb(213,80,28)"/><text x="29.0379%" y="799.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (12 samples, 1.21%)</title><rect x="28.7879%" y="773" width="1.2121%" height="15" fill="rgb(220,93,7)"/><text x="29.0379%" y="783.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (11 samples, 1.11%)</title><rect x="28.8889%" y="757" width="1.1111%" height="15" fill="rgb(225,24,44)"/><text x="29.1389%" y="767.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="29.3939%" y="741" width="0.6061%" height="15" fill="rgb(243,74,40)"/><text x="29.6439%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="29.3939%" y="725" width="0.6061%" height="15" fill="rgb(228,39,7)"/><text x="29.6439%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="29.4949%" y="709" width="0.5051%" height="15" fill="rgb(227,79,8)"/><text x="29.7449%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="29.4949%" y="693" width="0.5051%" height="15" fill="rgb(236,58,11)"/><text x="29.7449%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="29.4949%" y="677" width="0.5051%" height="15" fill="rgb(249,63,35)"/><text x="29.7449%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="29.5960%" y="661" width="0.4040%" height="15" fill="rgb(252,114,16)"/><text x="29.8460%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="29.5960%" y="645" width="0.4040%" height="15" fill="rgb(254,151,24)"/><text x="29.8460%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="29.5960%" y="629" width="0.4040%" height="15" fill="rgb(253,54,39)"/><text x="29.8460%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="29.5960%" y="613" width="0.4040%" height="15" fill="rgb(243,25,45)"/><text x="29.8460%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="29.5960%" y="597" width="0.4040%" height="15" fill="rgb(234,134,9)"/><text x="29.8460%" y="607.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="29.5960%" y="581" width="0.4040%" height="15" fill="rgb(227,166,31)"/><text x="29.8460%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="29.8990%" y="565" width="0.1010%" height="15" fill="rgb(245,143,41)"/><text x="30.1490%" y="575.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (18 samples, 1.82%)</title><rect x="28.4848%" y="1029" width="1.8182%" height="15" fill="rgb(238,181,32)"/><text x="28.7348%" y="1039.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 1.82%)</title><rect x="28.4848%" y="1013" width="1.8182%" height="15" fill="rgb(224,113,18)"/><text x="28.7348%" y="1023.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 1.82%)</title><rect x="28.4848%" y="997" width="1.8182%" height="15" fill="rgb(240,229,28)"/><text x="28.7348%" y="1007.50">a..</text></g><g><title>alloc::slice::hack::to_vec (18 samples, 1.82%)</title><rect x="28.4848%" y="981" width="1.8182%" height="15" fill="rgb(250,185,3)"/><text x="28.7348%" y="991.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="30.0000%" y="965" width="0.3030%" height="15" fill="rgb(212,59,25)"/><text x="30.2500%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="30.0000%" y="949" width="0.3030%" height="15" fill="rgb(221,87,20)"/><text x="30.2500%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.30%)</title><rect x="30.0000%" y="933" width="0.3030%" height="15" fill="rgb(213,74,28)"/><text x="30.2500%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.30%)</title><rect x="30.0000%" y="917" width="0.3030%" height="15" fill="rgb(224,132,34)"/><text x="30.2500%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.30%)</title><rect x="30.0000%" y="901" width="0.3030%" height="15" fill="rgb(222,101,24)"/><text x="30.2500%" y="911.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="30.0000%" y="885" width="0.3030%" height="15" fill="rgb(254,142,4)"/><text x="30.2500%" y="895.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="30.0000%" y="869" width="0.3030%" height="15" fill="rgb(230,229,49)"/><text x="30.2500%" y="879.50"></text></g><g><title>_int_malloc (3 samples, 0.30%)</title><rect x="30.0000%" y="853" width="0.3030%" height="15" fill="rgb(238,70,47)"/><text x="30.2500%" y="863.50"></text></g><g><title>alloc::vec::SetLenOnDrop::increment_len (1 samples, 0.10%)</title><rect x="30.5051%" y="773" width="0.1010%" height="15" fill="rgb(231,160,17)"/><text x="30.7551%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="30.5051%" y="965" width="0.2020%" height="15" fill="rgb(218,68,53)"/><text x="30.7551%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="30.5051%" y="949" width="0.2020%" height="15" fill="rgb(236,111,10)"/><text x="30.7551%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="30.5051%" y="933" width="0.2020%" height="15" fill="rgb(224,34,41)"/><text x="30.7551%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="30.5051%" y="917" width="0.2020%" height="15" fill="rgb(241,118,19)"/><text x="30.7551%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="30.5051%" y="901" width="0.2020%" height="15" fill="rgb(238,129,25)"/><text x="30.7551%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="30.5051%" y="885" width="0.2020%" height="15" fill="rgb(238,22,31)"/><text x="30.7551%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="30.5051%" y="869" width="0.2020%" height="15" fill="rgb(222,174,48)"/><text x="30.7551%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="30.5051%" y="853" width="0.2020%" height="15" fill="rgb(206,152,40)"/><text x="30.7551%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="30.5051%" y="837" width="0.2020%" height="15" fill="rgb(218,99,54)"/><text x="30.7551%" y="847.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="30.5051%" y="821" width="0.2020%" height="15" fill="rgb(220,174,26)"/><text x="30.7551%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="30.5051%" y="805" width="0.2020%" height="15" fill="rgb(245,116,9)"/><text x="30.7551%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="30.5051%" y="789" width="0.2020%" height="15" fill="rgb(209,72,35)"/><text x="30.7551%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="30.6061%" y="773" width="0.1010%" height="15" fill="rgb(226,126,21)"/><text x="30.8561%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="30.3030%" y="1013" width="0.8081%" height="15" fill="rgb(227,192,1)"/><text x="30.5530%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.81%)</title><rect x="30.3030%" y="997" width="0.8081%" height="15" fill="rgb(237,180,29)"/><text x="30.5530%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.81%)</title><rect x="30.3030%" y="981" width="0.8081%" height="15" fill="rgb(230,197,35)"/><text x="30.5530%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="30.7071%" y="965" width="0.4040%" height="15" fill="rgb(246,193,31)"/><text x="30.9571%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="30.7071%" y="949" width="0.4040%" height="15" fill="rgb(241,36,4)"/><text x="30.9571%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="30.7071%" y="933" width="0.4040%" height="15" fill="rgb(241,130,17)"/><text x="30.9571%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="30.7071%" y="917" width="0.4040%" height="15" fill="rgb(206,137,32)"/><text x="30.9571%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="30.7071%" y="901" width="0.4040%" height="15" fill="rgb(237,228,51)"/><text x="30.9571%" y="911.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="30.7071%" y="885" width="0.4040%" height="15" fill="rgb(243,6,42)"/><text x="30.9571%" y="895.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="30.8081%" y="869" width="0.3030%" height="15" fill="rgb(251,74,28)"/><text x="31.0581%" y="879.50"></text></g><g><title>_int_malloc (3 samples, 0.30%)</title><rect x="30.8081%" y="853" width="0.3030%" height="15" fill="rgb(218,20,49)"/><text x="31.0581%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="31.1111%" y="965" width="0.1010%" height="15" fill="rgb(238,28,14)"/><text x="31.3611%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (56 samples, 5.66%)</title><rect x="25.9596%" y="1301" width="5.6566%" height="15" fill="rgb(229,40,46)"/><text x="26.2096%" y="1311.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (56 samples, 5.66%)</title><rect x="25.9596%" y="1285" width="5.6566%" height="15" fill="rgb(244,195,20)"/><text x="26.2096%" y="1295.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (56 samples, 5.66%)</title><rect x="25.9596%" y="1269" width="5.6566%" height="15" fill="rgb(253,56,35)"/><text x="26.2096%" y="1279.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (56 samples, 5.66%)</title><rect x="25.9596%" y="1253" width="5.6566%" height="15" fill="rgb(210,149,44)"/><text x="26.2096%" y="1263.50">alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (56 samples, 5.66%)</title><rect x="25.9596%" y="1237" width="5.6566%" height="15" fill="rgb(240,135,12)"/><text x="26.2096%" y="1247.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (56 samples, 5.66%)</title><rect x="25.9596%" y="1221" width="5.6566%" height="15" fill="rgb(251,24,50)"/><text x="26.2096%" y="1231.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (56 samples, 5.66%)</title><rect x="25.9596%" y="1205" width="5.6566%" height="15" fill="rgb(243,200,47)"/><text x="26.2096%" y="1215.50">core::i..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 5.66%)</title><rect x="25.9596%" y="1189" width="5.6566%" height="15" fill="rgb(224,166,26)"/><text x="26.2096%" y="1199.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 5.66%)</title><rect x="25.9596%" y="1173" width="5.6566%" height="15" fill="rgb(233,0,47)"/><text x="26.2096%" y="1183.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (56 samples, 5.66%)</title><rect x="25.9596%" y="1157" width="5.6566%" height="15" fill="rgb(253,80,5)"/><text x="26.2096%" y="1167.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (56 samples, 5.66%)</title><rect x="25.9596%" y="1141" width="5.6566%" height="15" fill="rgb(214,133,25)"/><text x="26.2096%" y="1151.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (56 samples, 5.66%)</title><rect x="25.9596%" y="1125" width="5.6566%" height="15" fill="rgb(209,27,14)"/><text x="26.2096%" y="1135.50">core::i..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (56 samples, 5.66%)</title><rect x="25.9596%" y="1109" width="5.6566%" height="15" fill="rgb(219,102,51)"/><text x="26.2096%" y="1119.50">core::i..</text></g><g><title>core::ops::function::FnMut::call_mut (52 samples, 5.25%)</title><rect x="26.3636%" y="1093" width="5.2525%" height="15" fill="rgb(237,18,16)"/><text x="26.6136%" y="1103.50">core::..</text></g><g><title>&lt;polar::vm::Goal as core::clone::Clone&gt;::clone (33 samples, 3.33%)</title><rect x="28.2828%" y="1077" width="3.3333%" height="15" fill="rgb(241,85,17)"/><text x="28.5328%" y="1087.50">&lt;po..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (33 samples, 3.33%)</title><rect x="28.2828%" y="1061" width="3.3333%" height="15" fill="rgb(236,90,42)"/><text x="28.5328%" y="1071.50">&lt;po..</text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (31 samples, 3.13%)</title><rect x="28.4848%" y="1045" width="3.1313%" height="15" fill="rgb(249,57,21)"/><text x="28.7348%" y="1055.50">&lt;po..</text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (13 samples, 1.31%)</title><rect x="30.3030%" y="1029" width="1.3131%" height="15" fill="rgb(243,12,36)"/><text x="30.5530%" y="1039.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="31.1111%" y="1013" width="0.5051%" height="15" fill="rgb(253,128,47)"/><text x="31.3611%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="31.1111%" y="997" width="0.5051%" height="15" fill="rgb(207,33,20)"/><text x="31.3611%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="31.1111%" y="981" width="0.5051%" height="15" fill="rgb(233,215,35)"/><text x="31.3611%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="31.2121%" y="965" width="0.4040%" height="15" fill="rgb(249,188,52)"/><text x="31.4621%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="31.2121%" y="949" width="0.4040%" height="15" fill="rgb(225,12,32)"/><text x="31.4621%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="31.2121%" y="933" width="0.4040%" height="15" fill="rgb(247,98,14)"/><text x="31.4621%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="31.2121%" y="917" width="0.4040%" height="15" fill="rgb(247,219,48)"/><text x="31.4621%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="31.2121%" y="901" width="0.4040%" height="15" fill="rgb(253,60,48)"/><text x="31.4621%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="31.2121%" y="885" width="0.4040%" height="15" fill="rgb(245,15,52)"/><text x="31.4621%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="31.2121%" y="869" width="0.4040%" height="15" fill="rgb(220,133,28)"/><text x="31.4621%" y="879.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="31.2121%" y="853" width="0.4040%" height="15" fill="rgb(217,180,4)"/><text x="31.4621%" y="863.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.40%)</title><rect x="31.2121%" y="837" width="0.4040%" height="15" fill="rgb(251,24,1)"/><text x="31.4621%" y="847.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="31.4141%" y="821" width="0.2020%" height="15" fill="rgb(212,185,49)"/><text x="31.6641%" y="831.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (12 samples, 1.21%)</title><rect x="31.6162%" y="1301" width="1.2121%" height="15" fill="rgb(215,175,22)"/><text x="31.8662%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (12 samples, 1.21%)</title><rect x="31.6162%" y="1285" width="1.2121%" height="15" fill="rgb(250,205,14)"/><text x="31.8662%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (12 samples, 1.21%)</title><rect x="31.6162%" y="1269" width="1.2121%" height="15" fill="rgb(225,211,22)"/><text x="31.8662%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 1.21%)</title><rect x="31.6162%" y="1253" width="1.2121%" height="15" fill="rgb(251,179,42)"/><text x="31.8662%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 1.21%)</title><rect x="31.6162%" y="1237" width="1.2121%" height="15" fill="rgb(208,216,51)"/><text x="31.8662%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (12 samples, 1.21%)</title><rect x="31.6162%" y="1221" width="1.2121%" height="15" fill="rgb(235,36,11)"/><text x="31.8662%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (12 samples, 1.21%)</title><rect x="31.6162%" y="1205" width="1.2121%" height="15" fill="rgb(213,189,28)"/><text x="31.8662%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (12 samples, 1.21%)</title><rect x="31.6162%" y="1189" width="1.2121%" height="15" fill="rgb(227,203,42)"/><text x="31.8662%" y="1199.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 1.21%)</title><rect x="31.6162%" y="1173" width="1.2121%" height="15" fill="rgb(244,72,36)"/><text x="31.8662%" y="1183.50"></text></g><g><title>__GI___libc_realloc (12 samples, 1.21%)</title><rect x="31.6162%" y="1157" width="1.2121%" height="15" fill="rgb(213,53,17)"/><text x="31.8662%" y="1167.50"></text></g><g><title>_int_realloc (12 samples, 1.21%)</title><rect x="31.6162%" y="1141" width="1.2121%" height="15" fill="rgb(207,167,3)"/><text x="31.8662%" y="1151.50"></text></g><g><title>_int_malloc (12 samples, 1.21%)</title><rect x="31.6162%" y="1125" width="1.2121%" height="15" fill="rgb(216,98,30)"/><text x="31.8662%" y="1135.50"></text></g><g><title>malloc_consolidate (12 samples, 1.21%)</title><rect x="31.6162%" y="1109" width="1.2121%" height="15" fill="rgb(236,123,15)"/><text x="31.8662%" y="1119.50"></text></g><g><title>__GI_getenv (1 samples, 0.10%)</title><rect x="32.8283%" y="1221" width="0.1010%" height="15" fill="rgb(248,81,50)"/><text x="33.0783%" y="1231.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (71 samples, 7.17%)</title><rect x="25.9596%" y="1317" width="7.1717%" height="15" fill="rgb(214,120,4)"/><text x="26.2096%" y="1327.50">polar::vm:..</text></g><g><title>std::env::var (3 samples, 0.30%)</title><rect x="32.8283%" y="1301" width="0.3030%" height="15" fill="rgb(208,179,34)"/><text x="33.0783%" y="1311.50"></text></g><g><title>std::env::_var (3 samples, 0.30%)</title><rect x="32.8283%" y="1285" width="0.3030%" height="15" fill="rgb(227,140,7)"/><text x="33.0783%" y="1295.50"></text></g><g><title>std::env::var_os (3 samples, 0.30%)</title><rect x="32.8283%" y="1269" width="0.3030%" height="15" fill="rgb(214,22,6)"/><text x="33.0783%" y="1279.50"></text></g><g><title>std::env::_var_os (3 samples, 0.30%)</title><rect x="32.8283%" y="1253" width="0.3030%" height="15" fill="rgb(207,137,27)"/><text x="33.0783%" y="1263.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.30%)</title><rect x="32.8283%" y="1237" width="0.3030%" height="15" fill="rgb(210,8,46)"/><text x="33.0783%" y="1247.50"></text></g><g><title>std::ffi::c_str::CString::new (2 samples, 0.20%)</title><rect x="32.9293%" y="1221" width="0.2020%" height="15" fill="rgb(240,16,54)"/><text x="33.1793%" y="1231.50"></text></g><g><title>&lt;&amp;str as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (2 samples, 0.20%)</title><rect x="32.9293%" y="1205" width="0.2020%" height="15" fill="rgb(211,209,29)"/><text x="33.1793%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="33.0303%" y="1189" width="0.1010%" height="15" fill="rgb(226,228,24)"/><text x="33.2803%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="33.0303%" y="1173" width="0.1010%" height="15" fill="rgb(222,84,9)"/><text x="33.2803%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="33.0303%" y="1157" width="0.1010%" height="15" fill="rgb(234,203,30)"/><text x="33.2803%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="33.0303%" y="1141" width="0.1010%" height="15" fill="rgb(238,109,14)"/><text x="33.2803%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="33.0303%" y="1125" width="0.1010%" height="15" fill="rgb(233,206,34)"/><text x="33.2803%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="33.0303%" y="1109" width="0.1010%" height="15" fill="rgb(220,167,47)"/><text x="33.2803%" y="1119.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="33.0303%" y="1093" width="0.1010%" height="15" fill="rgb(238,105,10)"/><text x="33.2803%" y="1103.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query (1 samples, 0.10%)</title><rect x="33.1313%" y="1317" width="0.1010%" height="15" fill="rgb(213,227,17)"/><text x="33.3813%" y="1327.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query_for_predicate (1 samples, 0.10%)</title><rect x="33.1313%" y="1301" width="0.1010%" height="15" fill="rgb(217,132,38)"/><text x="33.3813%" y="1311.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.10%)</title><rect x="33.1313%" y="1285" width="0.1010%" height="15" fill="rgb(242,146,4)"/><text x="33.3813%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="33.1313%" y="1269" width="0.1010%" height="15" fill="rgb(212,61,9)"/><text x="33.3813%" y="1279.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::_{{closure}} (1 samples, 0.10%)</title><rect x="33.1313%" y="1253" width="0.1010%" height="15" fill="rgb(247,126,22)"/><text x="33.3813%" y="1263.50"></text></g><g><title>&lt;polar::types::GenericRule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="1237" width="0.1010%" height="15" fill="rgb(220,196,2)"/><text x="33.3813%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="1221" width="0.1010%" height="15" fill="rgb(208,46,4)"/><text x="33.3813%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="33.1313%" y="1205" width="0.1010%" height="15" fill="rgb(252,104,46)"/><text x="33.3813%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="33.1313%" y="1189" width="0.1010%" height="15" fill="rgb(237,152,48)"/><text x="33.3813%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="33.1313%" y="1173" width="0.1010%" height="15" fill="rgb(221,59,37)"/><text x="33.3813%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="33.1313%" y="1157" width="0.1010%" height="15" fill="rgb(209,202,51)"/><text x="33.3813%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="33.1313%" y="1141" width="0.1010%" height="15" fill="rgb(228,81,30)"/><text x="33.3813%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="33.1313%" y="1125" width="0.1010%" height="15" fill="rgb(227,42,39)"/><text x="33.3813%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="33.1313%" y="1109" width="0.1010%" height="15" fill="rgb(221,26,2)"/><text x="33.3813%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="33.1313%" y="1093" width="0.1010%" height="15" fill="rgb(254,61,31)"/><text x="33.3813%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="33.1313%" y="1077" width="0.1010%" height="15" fill="rgb(222,173,38)"/><text x="33.3813%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="33.1313%" y="1061" width="0.1010%" height="15" fill="rgb(218,50,12)"/><text x="33.3813%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="33.1313%" y="1045" width="0.1010%" height="15" fill="rgb(223,88,40)"/><text x="33.3813%" y="1055.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="33.1313%" y="1029" width="0.1010%" height="15" fill="rgb(237,54,19)"/><text x="33.3813%" y="1039.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="33.1313%" y="1013" width="0.1010%" height="15" fill="rgb(251,129,25)"/><text x="33.3813%" y="1023.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="997" width="0.1010%" height="15" fill="rgb(238,97,19)"/><text x="33.3813%" y="1007.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="981" width="0.1010%" height="15" fill="rgb(240,169,18)"/><text x="33.3813%" y="991.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="965" width="0.1010%" height="15" fill="rgb(230,187,49)"/><text x="33.3813%" y="975.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="949" width="0.1010%" height="15" fill="rgb(209,44,26)"/><text x="33.3813%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="933" width="0.1010%" height="15" fill="rgb(244,0,6)"/><text x="33.3813%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="33.1313%" y="917" width="0.1010%" height="15" fill="rgb(248,18,21)"/><text x="33.3813%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="33.1313%" y="901" width="0.1010%" height="15" fill="rgb(245,180,19)"/><text x="33.3813%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="33.1313%" y="885" width="0.1010%" height="15" fill="rgb(252,118,36)"/><text x="33.3813%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="33.1313%" y="869" width="0.1010%" height="15" fill="rgb(210,224,19)"/><text x="33.3813%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="33.1313%" y="853" width="0.1010%" height="15" fill="rgb(218,30,24)"/><text x="33.3813%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="33.1313%" y="837" width="0.1010%" height="15" fill="rgb(219,75,50)"/><text x="33.3813%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="33.1313%" y="821" width="0.1010%" height="15" fill="rgb(234,72,50)"/><text x="33.3813%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="33.1313%" y="805" width="0.1010%" height="15" fill="rgb(219,100,48)"/><text x="33.3813%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="33.1313%" y="789" width="0.1010%" height="15" fill="rgb(253,5,41)"/><text x="33.3813%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="33.1313%" y="773" width="0.1010%" height="15" fill="rgb(247,181,11)"/><text x="33.3813%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="33.1313%" y="757" width="0.1010%" height="15" fill="rgb(222,223,25)"/><text x="33.3813%" y="767.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="33.1313%" y="741" width="0.1010%" height="15" fill="rgb(214,198,28)"/><text x="33.3813%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="33.1313%" y="725" width="0.1010%" height="15" fill="rgb(230,46,43)"/><text x="33.3813%" y="735.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="709" width="0.1010%" height="15" fill="rgb(233,65,53)"/><text x="33.3813%" y="719.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="693" width="0.1010%" height="15" fill="rgb(221,121,27)"/><text x="33.3813%" y="703.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="677" width="0.1010%" height="15" fill="rgb(247,70,47)"/><text x="33.3813%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="33.1313%" y="661" width="0.1010%" height="15" fill="rgb(228,85,35)"/><text x="33.3813%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="33.1313%" y="645" width="0.1010%" height="15" fill="rgb(209,50,18)"/><text x="33.3813%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="33.1313%" y="629" width="0.1010%" height="15" fill="rgb(250,19,35)"/><text x="33.3813%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="33.1313%" y="613" width="0.1010%" height="15" fill="rgb(253,107,29)"/><text x="33.3813%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="33.1313%" y="597" width="0.1010%" height="15" fill="rgb(252,179,29)"/><text x="33.3813%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="33.1313%" y="581" width="0.1010%" height="15" fill="rgb(238,194,6)"/><text x="33.3813%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="33.1313%" y="565" width="0.1010%" height="15" fill="rgb(238,164,29)"/><text x="33.3813%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="33.1313%" y="549" width="0.1010%" height="15" fill="rgb(224,25,9)"/><text x="33.3813%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="33.1313%" y="533" width="0.1010%" height="15" fill="rgb(244,153,23)"/><text x="33.3813%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="33.1313%" y="517" width="0.1010%" height="15" fill="rgb(212,203,14)"/><text x="33.3813%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="33.1313%" y="501" width="0.1010%" height="15" fill="rgb(220,164,20)"/><text x="33.3813%" y="511.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="33.1313%" y="485" width="0.1010%" height="15" fill="rgb(222,203,48)"/><text x="33.3813%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="33.2323%" y="693" width="0.2020%" height="15" fill="rgb(215,159,22)"/><text x="33.4823%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="33.2323%" y="677" width="0.2020%" height="15" fill="rgb(216,183,47)"/><text x="33.4823%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="33.2323%" y="661" width="0.2020%" height="15" fill="rgb(229,195,25)"/><text x="33.4823%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="33.2323%" y="645" width="0.2020%" height="15" fill="rgb(224,132,51)"/><text x="33.4823%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="33.2323%" y="629" width="0.2020%" height="15" fill="rgb(240,63,7)"/><text x="33.4823%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="33.2323%" y="613" width="0.2020%" height="15" fill="rgb(249,182,41)"/><text x="33.4823%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="33.2323%" y="597" width="0.2020%" height="15" fill="rgb(243,47,26)"/><text x="33.4823%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="33.2323%" y="581" width="0.2020%" height="15" fill="rgb(233,48,2)"/><text x="33.4823%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="33.2323%" y="565" width="0.2020%" height="15" fill="rgb(244,165,34)"/><text x="33.4823%" y="575.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="33.2323%" y="549" width="0.2020%" height="15" fill="rgb(207,89,7)"/><text x="33.4823%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="33.2323%" y="533" width="0.2020%" height="15" fill="rgb(244,117,36)"/><text x="33.4823%" y="543.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="33.2323%" y="517" width="0.2020%" height="15" fill="rgb(226,144,34)"/><text x="33.4823%" y="527.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="33.2323%" y="501" width="0.2020%" height="15" fill="rgb(213,23,19)"/><text x="33.4823%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.91%)</title><rect x="33.2323%" y="741" width="0.9091%" height="15" fill="rgb(217,75,12)"/><text x="33.4823%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.91%)</title><rect x="33.2323%" y="725" width="0.9091%" height="15" fill="rgb(224,159,17)"/><text x="33.4823%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.91%)</title><rect x="33.2323%" y="709" width="0.9091%" height="15" fill="rgb(217,118,1)"/><text x="33.4823%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="33.4343%" y="693" width="0.7071%" height="15" fill="rgb(232,180,48)"/><text x="33.6843%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="33.4343%" y="677" width="0.7071%" height="15" fill="rgb(230,27,33)"/><text x="33.6843%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.71%)</title><rect x="33.4343%" y="661" width="0.7071%" height="15" fill="rgb(205,31,21)"/><text x="33.6843%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.71%)</title><rect x="33.4343%" y="645" width="0.7071%" height="15" fill="rgb(253,59,4)"/><text x="33.6843%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="33.4343%" y="629" width="0.7071%" height="15" fill="rgb(224,201,9)"/><text x="33.6843%" y="639.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.71%)</title><rect x="33.4343%" y="613" width="0.7071%" height="15" fill="rgb(229,206,30)"/><text x="33.6843%" y="623.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.71%)</title><rect x="33.4343%" y="597" width="0.7071%" height="15" fill="rgb(212,67,47)"/><text x="33.6843%" y="607.50"></text></g><g><title>_int_malloc (7 samples, 0.71%)</title><rect x="33.4343%" y="581" width="0.7071%" height="15" fill="rgb(211,96,50)"/><text x="33.6843%" y="591.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.20%)</title><rect x="33.9394%" y="565" width="0.2020%" height="15" fill="rgb(252,114,18)"/><text x="34.1894%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="1301" width="1.4141%" height="15" fill="rgb(223,58,37)"/><text x="33.4823%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.41%)</title><rect x="33.2323%" y="1285" width="1.4141%" height="15" fill="rgb(237,70,4)"/><text x="33.4823%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.41%)</title><rect x="33.2323%" y="1269" width="1.4141%" height="15" fill="rgb(244,85,46)"/><text x="33.4823%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 1.41%)</title><rect x="33.2323%" y="1253" width="1.4141%" height="15" fill="rgb(223,39,52)"/><text x="33.4823%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (14 samples, 1.41%)</title><rect x="33.2323%" y="1237" width="1.4141%" height="15" fill="rgb(218,200,14)"/><text x="33.4823%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 1.41%)</title><rect x="33.2323%" y="1221" width="1.4141%" height="15" fill="rgb(208,171,16)"/><text x="33.4823%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 1.41%)</title><rect x="33.2323%" y="1205" width="1.4141%" height="15" fill="rgb(234,200,18)"/><text x="33.4823%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.41%)</title><rect x="33.2323%" y="1189" width="1.4141%" height="15" fill="rgb(228,45,11)"/><text x="33.4823%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.41%)</title><rect x="33.2323%" y="1173" width="1.4141%" height="15" fill="rgb(237,182,11)"/><text x="33.4823%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 1.41%)</title><rect x="33.2323%" y="1157" width="1.4141%" height="15" fill="rgb(241,175,49)"/><text x="33.4823%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 1.41%)</title><rect x="33.2323%" y="1141" width="1.4141%" height="15" fill="rgb(247,38,35)"/><text x="33.4823%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (14 samples, 1.41%)</title><rect x="33.2323%" y="1125" width="1.4141%" height="15" fill="rgb(228,39,49)"/><text x="33.4823%" y="1135.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (14 samples, 1.41%)</title><rect x="33.2323%" y="1109" width="1.4141%" height="15" fill="rgb(226,101,26)"/><text x="33.4823%" y="1119.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 1.41%)</title><rect x="33.2323%" y="1093" width="1.4141%" height="15" fill="rgb(206,141,19)"/><text x="33.4823%" y="1103.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="1077" width="1.4141%" height="15" fill="rgb(211,200,13)"/><text x="33.4823%" y="1087.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="1061" width="1.4141%" height="15" fill="rgb(241,121,6)"/><text x="33.4823%" y="1071.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="1045" width="1.4141%" height="15" fill="rgb(234,221,29)"/><text x="33.4823%" y="1055.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="1029" width="1.4141%" height="15" fill="rgb(229,136,5)"/><text x="33.4823%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="1013" width="1.4141%" height="15" fill="rgb(238,36,11)"/><text x="33.4823%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.41%)</title><rect x="33.2323%" y="997" width="1.4141%" height="15" fill="rgb(251,55,41)"/><text x="33.4823%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.41%)</title><rect x="33.2323%" y="981" width="1.4141%" height="15" fill="rgb(242,34,40)"/><text x="33.4823%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 1.41%)</title><rect x="33.2323%" y="965" width="1.4141%" height="15" fill="rgb(215,42,17)"/><text x="33.4823%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (14 samples, 1.41%)</title><rect x="33.2323%" y="949" width="1.4141%" height="15" fill="rgb(207,44,46)"/><text x="33.4823%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 1.41%)</title><rect x="33.2323%" y="933" width="1.4141%" height="15" fill="rgb(211,206,28)"/><text x="33.4823%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 1.41%)</title><rect x="33.2323%" y="917" width="1.4141%" height="15" fill="rgb(237,167,16)"/><text x="33.4823%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.41%)</title><rect x="33.2323%" y="901" width="1.4141%" height="15" fill="rgb(233,66,6)"/><text x="33.4823%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.41%)</title><rect x="33.2323%" y="885" width="1.4141%" height="15" fill="rgb(246,123,29)"/><text x="33.4823%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 1.41%)</title><rect x="33.2323%" y="869" width="1.4141%" height="15" fill="rgb(209,62,40)"/><text x="33.4823%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 1.41%)</title><rect x="33.2323%" y="853" width="1.4141%" height="15" fill="rgb(218,4,25)"/><text x="33.4823%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (14 samples, 1.41%)</title><rect x="33.2323%" y="837" width="1.4141%" height="15" fill="rgb(253,91,49)"/><text x="33.4823%" y="847.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (14 samples, 1.41%)</title><rect x="33.2323%" y="821" width="1.4141%" height="15" fill="rgb(228,155,29)"/><text x="33.4823%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14 samples, 1.41%)</title><rect x="33.2323%" y="805" width="1.4141%" height="15" fill="rgb(243,57,37)"/><text x="33.4823%" y="815.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="789" width="1.4141%" height="15" fill="rgb(244,167,17)"/><text x="33.4823%" y="799.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="773" width="1.4141%" height="15" fill="rgb(207,181,38)"/><text x="33.4823%" y="783.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="33.2323%" y="757" width="1.4141%" height="15" fill="rgb(211,8,23)"/><text x="33.4823%" y="767.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="34.1414%" y="741" width="0.5051%" height="15" fill="rgb(235,11,44)"/><text x="34.3914%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="34.1414%" y="725" width="0.5051%" height="15" fill="rgb(248,18,52)"/><text x="34.3914%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="34.1414%" y="709" width="0.5051%" height="15" fill="rgb(208,4,7)"/><text x="34.3914%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="34.1414%" y="693" width="0.5051%" height="15" fill="rgb(240,17,39)"/><text x="34.3914%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="34.1414%" y="677" width="0.5051%" height="15" fill="rgb(207,170,3)"/><text x="34.3914%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="34.1414%" y="661" width="0.5051%" height="15" fill="rgb(236,100,52)"/><text x="34.3914%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="34.1414%" y="645" width="0.5051%" height="15" fill="rgb(246,78,51)"/><text x="34.3914%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.51%)</title><rect x="34.1414%" y="629" width="0.5051%" height="15" fill="rgb(211,17,15)"/><text x="34.3914%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.51%)</title><rect x="34.1414%" y="613" width="0.5051%" height="15" fill="rgb(209,59,46)"/><text x="34.3914%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.51%)</title><rect x="34.1414%" y="597" width="0.5051%" height="15" fill="rgb(210,92,25)"/><text x="34.3914%" y="607.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.51%)</title><rect x="34.1414%" y="581" width="0.5051%" height="15" fill="rgb(238,174,52)"/><text x="34.3914%" y="591.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.51%)</title><rect x="34.1414%" y="565" width="0.5051%" height="15" fill="rgb(230,73,7)"/><text x="34.3914%" y="575.50"></text></g><g><title>_int_malloc (5 samples, 0.51%)</title><rect x="34.1414%" y="549" width="0.5051%" height="15" fill="rgb(243,124,40)"/><text x="34.3914%" y="559.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="34.5455%" y="533" width="0.1010%" height="15" fill="rgb(244,170,11)"/><text x="34.7955%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="34.6465%" y="1061" width="0.1010%" height="15" fill="rgb(207,114,54)"/><text x="34.8965%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="34.6465%" y="1045" width="0.1010%" height="15" fill="rgb(205,42,20)"/><text x="34.8965%" y="1055.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="34.6465%" y="1029" width="0.1010%" height="15" fill="rgb(230,30,28)"/><text x="34.8965%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="34.6465%" y="1013" width="0.1010%" height="15" fill="rgb(205,73,54)"/><text x="34.8965%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="34.9495%" y="517" width="0.2020%" height="15" fill="rgb(254,227,23)"/><text x="35.1995%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="34.9495%" y="501" width="0.2020%" height="15" fill="rgb(228,202,34)"/><text x="35.1995%" y="511.50"></text></g><g><title>core::ptr::write (2 samples, 0.20%)</title><rect x="34.9495%" y="485" width="0.2020%" height="15" fill="rgb(222,225,37)"/><text x="35.1995%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.51%)</title><rect x="34.8485%" y="677" width="0.5051%" height="15" fill="rgb(221,14,54)"/><text x="35.0985%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="34.9495%" y="661" width="0.4040%" height="15" fill="rgb(254,102,2)"/><text x="35.1995%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="34.9495%" y="645" width="0.4040%" height="15" fill="rgb(232,104,17)"/><text x="35.1995%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="34.9495%" y="629" width="0.4040%" height="15" fill="rgb(250,220,14)"/><text x="35.1995%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="34.9495%" y="613" width="0.4040%" height="15" fill="rgb(241,158,9)"/><text x="35.1995%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="34.9495%" y="597" width="0.4040%" height="15" fill="rgb(246,9,43)"/><text x="35.1995%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="34.9495%" y="581" width="0.4040%" height="15" fill="rgb(206,73,33)"/><text x="35.1995%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="34.9495%" y="565" width="0.4040%" height="15" fill="rgb(222,79,8)"/><text x="35.1995%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="34.9495%" y="549" width="0.4040%" height="15" fill="rgb(234,8,54)"/><text x="35.1995%" y="559.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="34.9495%" y="533" width="0.4040%" height="15" fill="rgb(209,134,38)"/><text x="35.1995%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="35.1515%" y="517" width="0.2020%" height="15" fill="rgb(230,127,29)"/><text x="35.4015%" y="527.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="35.1515%" y="501" width="0.2020%" height="15" fill="rgb(242,44,41)"/><text x="35.4015%" y="511.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="35.2525%" y="485" width="0.1010%" height="15" fill="rgb(222,56,43)"/><text x="35.5025%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="34.7475%" y="725" width="0.8081%" height="15" fill="rgb(238,39,47)"/><text x="34.9975%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.81%)</title><rect x="34.7475%" y="709" width="0.8081%" height="15" fill="rgb(226,79,43)"/><text x="34.9975%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.81%)</title><rect x="34.7475%" y="693" width="0.8081%" height="15" fill="rgb(242,105,53)"/><text x="34.9975%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="35.3535%" y="677" width="0.2020%" height="15" fill="rgb(251,132,46)"/><text x="35.6035%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="35.3535%" y="661" width="0.2020%" height="15" fill="rgb(231,77,14)"/><text x="35.6035%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="35.3535%" y="645" width="0.2020%" height="15" fill="rgb(240,135,9)"/><text x="35.6035%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="35.3535%" y="629" width="0.2020%" height="15" fill="rgb(248,109,14)"/><text x="35.6035%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="35.3535%" y="613" width="0.2020%" height="15" fill="rgb(227,146,52)"/><text x="35.6035%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="35.3535%" y="597" width="0.2020%" height="15" fill="rgb(232,54,3)"/><text x="35.6035%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="35.3535%" y="581" width="0.2020%" height="15" fill="rgb(229,201,43)"/><text x="35.6035%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="35.3535%" y="565" width="0.2020%" height="15" fill="rgb(252,161,33)"/><text x="35.6035%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 1.11%)</title><rect x="34.7475%" y="949" width="1.1111%" height="15" fill="rgb(226,146,40)"/><text x="34.9975%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (11 samples, 1.11%)</title><rect x="34.7475%" y="933" width="1.1111%" height="15" fill="rgb(219,47,25)"/><text x="34.9975%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 1.11%)</title><rect x="34.7475%" y="917" width="1.1111%" height="15" fill="rgb(250,135,13)"/><text x="34.9975%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 1.11%)</title><rect x="34.7475%" y="901" width="1.1111%" height="15" fill="rgb(219,229,18)"/><text x="34.9975%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 1.11%)</title><rect x="34.7475%" y="885" width="1.1111%" height="15" fill="rgb(217,152,27)"/><text x="34.9975%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 1.11%)</title><rect x="34.7475%" y="869" width="1.1111%" height="15" fill="rgb(225,71,47)"/><text x="34.9975%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 1.11%)</title><rect x="34.7475%" y="853" width="1.1111%" height="15" fill="rgb(220,139,14)"/><text x="34.9975%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 1.11%)</title><rect x="34.7475%" y="837" width="1.1111%" height="15" fill="rgb(247,54,32)"/><text x="34.9975%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (11 samples, 1.11%)</title><rect x="34.7475%" y="821" width="1.1111%" height="15" fill="rgb(252,131,39)"/><text x="34.9975%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (11 samples, 1.11%)</title><rect x="34.7475%" y="805" width="1.1111%" height="15" fill="rgb(210,108,39)"/><text x="34.9975%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 1.11%)</title><rect x="34.7475%" y="789" width="1.1111%" height="15" fill="rgb(205,23,29)"/><text x="34.9975%" y="799.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (11 samples, 1.11%)</title><rect x="34.7475%" y="773" width="1.1111%" height="15" fill="rgb(246,139,46)"/><text x="34.9975%" y="783.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (11 samples, 1.11%)</title><rect x="34.7475%" y="757" width="1.1111%" height="15" fill="rgb(250,81,26)"/><text x="34.9975%" y="767.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (11 samples, 1.11%)</title><rect x="34.7475%" y="741" width="1.1111%" height="15" fill="rgb(214,104,7)"/><text x="34.9975%" y="751.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="35.5556%" y="725" width="0.3030%" height="15" fill="rgb(233,189,8)"/><text x="35.8056%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="35.5556%" y="709" width="0.3030%" height="15" fill="rgb(228,141,17)"/><text x="35.8056%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="35.5556%" y="693" width="0.3030%" height="15" fill="rgb(247,157,1)"/><text x="35.8056%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="35.5556%" y="677" width="0.3030%" height="15" fill="rgb(249,225,5)"/><text x="35.8056%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="35.5556%" y="661" width="0.3030%" height="15" fill="rgb(242,55,13)"/><text x="35.8056%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="35.5556%" y="645" width="0.3030%" height="15" fill="rgb(230,49,50)"/><text x="35.8056%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="35.5556%" y="629" width="0.3030%" height="15" fill="rgb(241,111,38)"/><text x="35.8056%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.30%)</title><rect x="35.5556%" y="613" width="0.3030%" height="15" fill="rgb(252,155,4)"/><text x="35.8056%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.30%)</title><rect x="35.5556%" y="597" width="0.3030%" height="15" fill="rgb(212,69,32)"/><text x="35.8056%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.30%)</title><rect x="35.5556%" y="581" width="0.3030%" height="15" fill="rgb(243,107,47)"/><text x="35.8056%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="35.5556%" y="565" width="0.3030%" height="15" fill="rgb(247,130,12)"/><text x="35.8056%" y="575.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="35.5556%" y="549" width="0.3030%" height="15" fill="rgb(233,74,16)"/><text x="35.8056%" y="559.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="35.6566%" y="533" width="0.2020%" height="15" fill="rgb(208,58,18)"/><text x="35.9066%" y="543.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (12 samples, 1.21%)</title><rect x="34.7475%" y="1013" width="1.2121%" height="15" fill="rgb(242,225,1)"/><text x="34.9975%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 1.21%)</title><rect x="34.7475%" y="997" width="1.2121%" height="15" fill="rgb(249,39,40)"/><text x="34.9975%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 1.21%)</title><rect x="34.7475%" y="981" width="1.2121%" height="15" fill="rgb(207,72,44)"/><text x="34.9975%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 1.21%)</title><rect x="34.7475%" y="965" width="1.2121%" height="15" fill="rgb(215,193,12)"/><text x="34.9975%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="35.8586%" y="949" width="0.1010%" height="15" fill="rgb(248,41,39)"/><text x="36.1086%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="35.8586%" y="933" width="0.1010%" height="15" fill="rgb(253,85,4)"/><text x="36.1086%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="35.8586%" y="917" width="0.1010%" height="15" fill="rgb(243,70,31)"/><text x="36.1086%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="35.8586%" y="901" width="0.1010%" height="15" fill="rgb(253,195,26)"/><text x="36.1086%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="35.8586%" y="885" width="0.1010%" height="15" fill="rgb(243,42,11)"/><text x="36.1086%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="35.8586%" y="869" width="0.1010%" height="15" fill="rgb(239,66,17)"/><text x="36.1086%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="35.8586%" y="853" width="0.1010%" height="15" fill="rgb(217,132,21)"/><text x="36.1086%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="35.8586%" y="837" width="0.1010%" height="15" fill="rgb(252,202,21)"/><text x="36.1086%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="35.9596%" y="949" width="0.1010%" height="15" fill="rgb(233,98,36)"/><text x="36.2096%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="35.9596%" y="933" width="0.1010%" height="15" fill="rgb(216,153,54)"/><text x="36.2096%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="35.9596%" y="917" width="0.1010%" height="15" fill="rgb(250,99,7)"/><text x="36.2096%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="35.9596%" y="901" width="0.1010%" height="15" fill="rgb(207,56,50)"/><text x="36.2096%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="35.9596%" y="885" width="0.1010%" height="15" fill="rgb(244,61,34)"/><text x="36.2096%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="35.9596%" y="869" width="0.1010%" height="15" fill="rgb(241,50,38)"/><text x="36.2096%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="35.9596%" y="853" width="0.1010%" height="15" fill="rgb(212,166,30)"/><text x="36.2096%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="35.9596%" y="837" width="0.1010%" height="15" fill="rgb(249,127,32)"/><text x="36.2096%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="35.9596%" y="821" width="0.1010%" height="15" fill="rgb(209,103,0)"/><text x="36.2096%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="35.9596%" y="805" width="0.1010%" height="15" fill="rgb(238,209,51)"/><text x="36.2096%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="35.9596%" y="789" width="0.1010%" height="15" fill="rgb(237,56,23)"/><text x="36.2096%" y="799.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="35.9596%" y="773" width="0.1010%" height="15" fill="rgb(215,153,46)"/><text x="36.2096%" y="783.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="35.9596%" y="757" width="0.1010%" height="15" fill="rgb(224,49,31)"/><text x="36.2096%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="35.9596%" y="997" width="0.4040%" height="15" fill="rgb(250,18,42)"/><text x="36.2096%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="35.9596%" y="981" width="0.4040%" height="15" fill="rgb(215,176,39)"/><text x="36.2096%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="35.9596%" y="965" width="0.4040%" height="15" fill="rgb(223,77,29)"/><text x="36.2096%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="36.0606%" y="949" width="0.3030%" height="15" fill="rgb(234,94,52)"/><text x="36.3106%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="36.0606%" y="933" width="0.3030%" height="15" fill="rgb(220,154,50)"/><text x="36.3106%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.30%)</title><rect x="36.0606%" y="917" width="0.3030%" height="15" fill="rgb(212,11,10)"/><text x="36.3106%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.30%)</title><rect x="36.0606%" y="901" width="0.3030%" height="15" fill="rgb(205,166,19)"/><text x="36.3106%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.30%)</title><rect x="36.0606%" y="885" width="0.3030%" height="15" fill="rgb(244,198,16)"/><text x="36.3106%" y="895.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="36.0606%" y="869" width="0.3030%" height="15" fill="rgb(219,69,12)"/><text x="36.3106%" y="879.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="36.0606%" y="853" width="0.3030%" height="15" fill="rgb(245,30,7)"/><text x="36.3106%" y="863.50"></text></g><g><title>_int_malloc (3 samples, 0.30%)</title><rect x="36.0606%" y="837" width="0.3030%" height="15" fill="rgb(218,221,48)"/><text x="36.3106%" y="847.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="36.2626%" y="821" width="0.1010%" height="15" fill="rgb(216,66,15)"/><text x="36.5126%" y="831.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (17 samples, 1.72%)</title><rect x="34.7475%" y="1045" width="1.7172%" height="15" fill="rgb(226,122,50)"/><text x="34.9975%" y="1055.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (17 samples, 1.72%)</title><rect x="34.7475%" y="1029" width="1.7172%" height="15" fill="rgb(239,156,16)"/><text x="34.9975%" y="1039.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="35.9596%" y="1013" width="0.5051%" height="15" fill="rgb(224,27,38)"/><text x="36.2096%" y="1023.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="36.3636%" y="997" width="0.1010%" height="15" fill="rgb(224,39,27)"/><text x="36.6136%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="36.3636%" y="981" width="0.1010%" height="15" fill="rgb(215,92,29)"/><text x="36.6136%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="36.3636%" y="965" width="0.1010%" height="15" fill="rgb(207,159,16)"/><text x="36.6136%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="36.3636%" y="949" width="0.1010%" height="15" fill="rgb(238,163,47)"/><text x="36.6136%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="36.3636%" y="933" width="0.1010%" height="15" fill="rgb(219,91,49)"/><text x="36.6136%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="36.3636%" y="917" width="0.1010%" height="15" fill="rgb(227,167,31)"/><text x="36.6136%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="36.3636%" y="901" width="0.1010%" height="15" fill="rgb(234,80,54)"/><text x="36.6136%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="36.3636%" y="885" width="0.1010%" height="15" fill="rgb(212,114,2)"/><text x="36.6136%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="36.3636%" y="869" width="0.1010%" height="15" fill="rgb(234,50,24)"/><text x="36.6136%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="36.3636%" y="853" width="0.1010%" height="15" fill="rgb(221,68,8)"/><text x="36.6136%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="36.3636%" y="837" width="0.1010%" height="15" fill="rgb(254,180,31)"/><text x="36.6136%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="36.3636%" y="821" width="0.1010%" height="15" fill="rgb(247,130,50)"/><text x="36.6136%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="36.3636%" y="805" width="0.1010%" height="15" fill="rgb(211,109,4)"/><text x="36.6136%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="37.2727%" y="613" width="0.1010%" height="15" fill="rgb(238,50,21)"/><text x="37.5227%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="37.2727%" y="597" width="0.1010%" height="15" fill="rgb(225,57,45)"/><text x="37.5227%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="37.2727%" y="581" width="0.1010%" height="15" fill="rgb(209,196,50)"/><text x="37.5227%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="37.3737%" y="501" width="0.1010%" height="15" fill="rgb(242,140,13)"/><text x="37.6237%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="37.3737%" y="485" width="0.1010%" height="15" fill="rgb(217,111,7)"/><text x="37.6237%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="37.3737%" y="469" width="0.1010%" height="15" fill="rgb(253,193,51)"/><text x="37.6237%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="37.2727%" y="661" width="0.3030%" height="15" fill="rgb(252,70,29)"/><text x="37.5227%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="37.2727%" y="645" width="0.3030%" height="15" fill="rgb(232,127,12)"/><text x="37.5227%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="37.2727%" y="629" width="0.3030%" height="15" fill="rgb(211,180,21)"/><text x="37.5227%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="37.3737%" y="613" width="0.2020%" height="15" fill="rgb(229,72,13)"/><text x="37.6237%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="37.3737%" y="597" width="0.2020%" height="15" fill="rgb(240,211,49)"/><text x="37.6237%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="37.3737%" y="581" width="0.2020%" height="15" fill="rgb(219,149,40)"/><text x="37.6237%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="37.3737%" y="565" width="0.2020%" height="15" fill="rgb(210,127,46)"/><text x="37.6237%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="37.3737%" y="549" width="0.2020%" height="15" fill="rgb(220,106,7)"/><text x="37.6237%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="37.3737%" y="533" width="0.2020%" height="15" fill="rgb(249,31,22)"/><text x="37.6237%" y="543.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="37.3737%" y="517" width="0.2020%" height="15" fill="rgb(253,1,49)"/><text x="37.6237%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="37.4747%" y="501" width="0.1010%" height="15" fill="rgb(227,144,33)"/><text x="37.7247%" y="511.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="37.4747%" y="485" width="0.1010%" height="15" fill="rgb(249,163,44)"/><text x="37.7247%" y="495.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="37.4747%" y="469" width="0.1010%" height="15" fill="rgb(234,15,39)"/><text x="37.7247%" y="479.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.61%)</title><rect x="37.5758%" y="565" width="0.6061%" height="15" fill="rgb(207,66,16)"/><text x="37.8258%" y="575.50"></text></g><g><title>_int_malloc (5 samples, 0.51%)</title><rect x="37.6768%" y="549" width="0.5051%" height="15" fill="rgb(233,112,24)"/><text x="37.9268%" y="559.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="38.0808%" y="533" width="0.1010%" height="15" fill="rgb(230,90,22)"/><text x="38.3308%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="36.8687%" y="709" width="1.4141%" height="15" fill="rgb(229,61,13)"/><text x="37.1187%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.41%)</title><rect x="36.8687%" y="693" width="1.4141%" height="15" fill="rgb(225,57,24)"/><text x="37.1187%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.41%)</title><rect x="36.8687%" y="677" width="1.4141%" height="15" fill="rgb(208,169,48)"/><text x="37.1187%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="37.5758%" y="661" width="0.7071%" height="15" fill="rgb(244,218,51)"/><text x="37.8258%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="37.5758%" y="645" width="0.7071%" height="15" fill="rgb(214,148,10)"/><text x="37.8258%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.71%)</title><rect x="37.5758%" y="629" width="0.7071%" height="15" fill="rgb(225,174,27)"/><text x="37.8258%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.71%)</title><rect x="37.5758%" y="613" width="0.7071%" height="15" fill="rgb(230,96,26)"/><text x="37.8258%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="37.5758%" y="597" width="0.7071%" height="15" fill="rgb(232,10,30)"/><text x="37.8258%" y="607.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.71%)</title><rect x="37.5758%" y="581" width="0.7071%" height="15" fill="rgb(222,8,50)"/><text x="37.8258%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="38.1818%" y="565" width="0.1010%" height="15" fill="rgb(213,81,27)"/><text x="38.4318%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="38.3838%" y="629" width="0.1010%" height="15" fill="rgb(245,50,10)"/><text x="38.6338%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="38.3838%" y="613" width="0.1010%" height="15" fill="rgb(216,100,18)"/><text x="38.6338%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="38.3838%" y="597" width="0.1010%" height="15" fill="rgb(236,147,54)"/><text x="38.6338%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="38.3838%" y="581" width="0.1010%" height="15" fill="rgb(205,143,26)"/><text x="38.6338%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="38.3838%" y="565" width="0.1010%" height="15" fill="rgb(236,26,9)"/><text x="38.6338%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="38.4848%" y="533" width="0.2020%" height="15" fill="rgb(221,165,53)"/><text x="38.7348%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="38.4848%" y="517" width="0.2020%" height="15" fill="rgb(214,110,17)"/><text x="38.7348%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (21 samples, 2.12%)</title><rect x="36.7677%" y="933" width="2.1212%" height="15" fill="rgb(237,197,12)"/><text x="37.0177%" y="943.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (21 samples, 2.12%)</title><rect x="36.7677%" y="917" width="2.1212%" height="15" fill="rgb(205,84,17)"/><text x="37.0177%" y="927.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21 samples, 2.12%)</title><rect x="36.7677%" y="901" width="2.1212%" height="15" fill="rgb(237,18,45)"/><text x="37.0177%" y="911.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21 samples, 2.12%)</title><rect x="36.7677%" y="885" width="2.1212%" height="15" fill="rgb(221,87,14)"/><text x="37.0177%" y="895.50">c..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 2.12%)</title><rect x="36.7677%" y="869" width="2.1212%" height="15" fill="rgb(238,186,15)"/><text x="37.0177%" y="879.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 2.12%)</title><rect x="36.7677%" y="853" width="2.1212%" height="15" fill="rgb(208,115,11)"/><text x="37.0177%" y="863.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 2.12%)</title><rect x="36.7677%" y="837" width="2.1212%" height="15" fill="rgb(254,175,0)"/><text x="37.0177%" y="847.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 2.12%)</title><rect x="36.7677%" y="821" width="2.1212%" height="15" fill="rgb(227,24,42)"/><text x="37.0177%" y="831.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (21 samples, 2.12%)</title><rect x="36.7677%" y="805" width="2.1212%" height="15" fill="rgb(223,211,37)"/><text x="37.0177%" y="815.50">c..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (21 samples, 2.12%)</title><rect x="36.7677%" y="789" width="2.1212%" height="15" fill="rgb(235,49,27)"/><text x="37.0177%" y="799.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (21 samples, 2.12%)</title><rect x="36.7677%" y="773" width="2.1212%" height="15" fill="rgb(254,97,51)"/><text x="37.0177%" y="783.50">c..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (21 samples, 2.12%)</title><rect x="36.7677%" y="757" width="2.1212%" height="15" fill="rgb(249,51,40)"/><text x="37.0177%" y="767.50">&lt;..</text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (20 samples, 2.02%)</title><rect x="36.8687%" y="741" width="2.0202%" height="15" fill="rgb(210,128,45)"/><text x="37.1187%" y="751.50">&lt;..</text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (20 samples, 2.02%)</title><rect x="36.8687%" y="725" width="2.0202%" height="15" fill="rgb(224,137,50)"/><text x="37.1187%" y="735.50">&lt;..</text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="38.2828%" y="709" width="0.6061%" height="15" fill="rgb(242,15,9)"/><text x="38.5328%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="38.2828%" y="693" width="0.6061%" height="15" fill="rgb(233,187,41)"/><text x="38.5328%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="38.3838%" y="677" width="0.5051%" height="15" fill="rgb(227,2,29)"/><text x="38.6338%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="38.3838%" y="661" width="0.5051%" height="15" fill="rgb(222,70,3)"/><text x="38.6338%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="38.3838%" y="645" width="0.5051%" height="15" fill="rgb(213,11,42)"/><text x="38.6338%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="38.4848%" y="629" width="0.4040%" height="15" fill="rgb(225,150,9)"/><text x="38.7348%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="38.4848%" y="613" width="0.4040%" height="15" fill="rgb(230,162,45)"/><text x="38.7348%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="38.4848%" y="597" width="0.4040%" height="15" fill="rgb(222,14,52)"/><text x="38.7348%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="38.4848%" y="581" width="0.4040%" height="15" fill="rgb(254,198,14)"/><text x="38.7348%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="38.4848%" y="565" width="0.4040%" height="15" fill="rgb(220,217,30)"/><text x="38.7348%" y="575.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="38.4848%" y="549" width="0.4040%" height="15" fill="rgb(215,146,41)"/><text x="38.7348%" y="559.50"></text></g><g><title>__rdl_alloc (2 samples, 0.20%)</title><rect x="38.6869%" y="533" width="0.2020%" height="15" fill="rgb(217,27,36)"/><text x="38.9369%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.20%)</title><rect x="38.6869%" y="517" width="0.2020%" height="15" fill="rgb(219,218,39)"/><text x="38.9369%" y="527.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (22 samples, 2.22%)</title><rect x="36.7677%" y="997" width="2.2222%" height="15" fill="rgb(219,4,42)"/><text x="37.0177%" y="1007.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 2.22%)</title><rect x="36.7677%" y="981" width="2.2222%" height="15" fill="rgb(249,119,36)"/><text x="37.0177%" y="991.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 2.22%)</title><rect x="36.7677%" y="965" width="2.2222%" height="15" fill="rgb(209,23,33)"/><text x="37.0177%" y="975.50">a..</text></g><g><title>alloc::slice::hack::to_vec (22 samples, 2.22%)</title><rect x="36.7677%" y="949" width="2.2222%" height="15" fill="rgb(211,10,0)"/><text x="37.0177%" y="959.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="38.8889%" y="933" width="0.1010%" height="15" fill="rgb(208,99,37)"/><text x="39.1389%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="38.8889%" y="917" width="0.1010%" height="15" fill="rgb(213,132,31)"/><text x="39.1389%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="38.8889%" y="901" width="0.1010%" height="15" fill="rgb(243,129,40)"/><text x="39.1389%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="38.8889%" y="885" width="0.1010%" height="15" fill="rgb(210,66,33)"/><text x="39.1389%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="38.8889%" y="869" width="0.1010%" height="15" fill="rgb(209,189,4)"/><text x="39.1389%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="38.8889%" y="853" width="0.1010%" height="15" fill="rgb(214,107,37)"/><text x="39.1389%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="38.8889%" y="837" width="0.1010%" height="15" fill="rgb(245,88,54)"/><text x="39.1389%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="38.8889%" y="821" width="0.1010%" height="15" fill="rgb(205,146,20)"/><text x="39.1389%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="39.1919%" y="885" width="0.2020%" height="15" fill="rgb(220,161,25)"/><text x="39.4419%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="39.1919%" y="869" width="0.2020%" height="15" fill="rgb(215,152,15)"/><text x="39.4419%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="39.2929%" y="853" width="0.1010%" height="15" fill="rgb(233,192,44)"/><text x="39.5429%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="39.3939%" y="773" width="0.2020%" height="15" fill="rgb(240,170,46)"/><text x="39.6439%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="39.3939%" y="757" width="0.2020%" height="15" fill="rgb(207,104,33)"/><text x="39.6439%" y="767.50"></text></g><g><title>core::ptr::write (2 samples, 0.20%)</title><rect x="39.3939%" y="741" width="0.2020%" height="15" fill="rgb(219,21,39)"/><text x="39.6439%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.81%)</title><rect x="39.0909%" y="933" width="0.8081%" height="15" fill="rgb(214,133,29)"/><text x="39.3409%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="39.1919%" y="917" width="0.7071%" height="15" fill="rgb(226,93,6)"/><text x="39.4419%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="39.1919%" y="901" width="0.7071%" height="15" fill="rgb(252,222,34)"/><text x="39.4419%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.51%)</title><rect x="39.3939%" y="885" width="0.5051%" height="15" fill="rgb(252,92,48)"/><text x="39.6439%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="39.3939%" y="869" width="0.5051%" height="15" fill="rgb(245,223,24)"/><text x="39.6439%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="39.3939%" y="853" width="0.5051%" height="15" fill="rgb(205,176,3)"/><text x="39.6439%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.51%)</title><rect x="39.3939%" y="837" width="0.5051%" height="15" fill="rgb(235,151,15)"/><text x="39.6439%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.51%)</title><rect x="39.3939%" y="821" width="0.5051%" height="15" fill="rgb(237,209,11)"/><text x="39.6439%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (5 samples, 0.51%)</title><rect x="39.3939%" y="805" width="0.5051%" height="15" fill="rgb(243,227,24)"/><text x="39.6439%" y="815.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (5 samples, 0.51%)</title><rect x="39.3939%" y="789" width="0.5051%" height="15" fill="rgb(239,193,16)"/><text x="39.6439%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="39.5960%" y="773" width="0.3030%" height="15" fill="rgb(231,27,9)"/><text x="39.8460%" y="783.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="39.5960%" y="757" width="0.3030%" height="15" fill="rgb(219,169,10)"/><text x="39.8460%" y="767.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="39.6970%" y="741" width="0.2020%" height="15" fill="rgb(244,229,43)"/><text x="39.9470%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 1.31%)</title><rect x="38.9899%" y="981" width="1.3131%" height="15" fill="rgb(254,38,20)"/><text x="39.2399%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 1.31%)</title><rect x="38.9899%" y="965" width="1.3131%" height="15" fill="rgb(250,47,30)"/><text x="39.2399%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.31%)</title><rect x="38.9899%" y="949" width="1.3131%" height="15" fill="rgb(224,124,36)"/><text x="39.2399%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="39.8990%" y="933" width="0.4040%" height="15" fill="rgb(246,68,51)"/><text x="40.1490%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="39.8990%" y="917" width="0.4040%" height="15" fill="rgb(253,43,49)"/><text x="40.1490%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="39.8990%" y="901" width="0.4040%" height="15" fill="rgb(219,54,36)"/><text x="40.1490%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="39.8990%" y="885" width="0.4040%" height="15" fill="rgb(227,133,34)"/><text x="40.1490%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="39.8990%" y="869" width="0.4040%" height="15" fill="rgb(247,227,15)"/><text x="40.1490%" y="879.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="39.8990%" y="853" width="0.4040%" height="15" fill="rgb(229,96,14)"/><text x="40.1490%" y="863.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.40%)</title><rect x="39.8990%" y="837" width="0.4040%" height="15" fill="rgb(220,79,17)"/><text x="40.1490%" y="847.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="40.1010%" y="821" width="0.2020%" height="15" fill="rgb(205,131,53)"/><text x="40.3510%" y="831.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.61%)</title><rect x="40.3030%" y="805" width="0.6061%" height="15" fill="rgb(209,50,29)"/><text x="40.5530%" y="815.50"></text></g><g><title>_int_malloc (6 samples, 0.61%)</title><rect x="40.3030%" y="789" width="0.6061%" height="15" fill="rgb(245,86,46)"/><text x="40.5530%" y="799.50"></text></g><g><title>polar::vm::PolarVirtualMachine::choose (63 samples, 6.36%)</title><rect x="34.6465%" y="1301" width="6.3636%" height="15" fill="rgb(235,66,46)"/><text x="34.8965%" y="1311.50">polar::v..</text></g><g><title>polar::vm::PolarVirtualMachine::push_choice (63 samples, 6.36%)</title><rect x="34.6465%" y="1285" width="6.3636%" height="15" fill="rgb(232,148,31)"/><text x="34.8965%" y="1295.50">polar::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 6.36%)</title><rect x="34.6465%" y="1269" width="6.3636%" height="15" fill="rgb(217,149,8)"/><text x="34.8965%" y="1279.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (63 samples, 6.36%)</title><rect x="34.6465%" y="1253" width="6.3636%" height="15" fill="rgb(209,183,11)"/><text x="34.8965%" y="1263.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (63 samples, 6.36%)</title><rect x="34.6465%" y="1237" width="6.3636%" height="15" fill="rgb(208,55,20)"/><text x="34.8965%" y="1247.50">alloc::s..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (63 samples, 6.36%)</title><rect x="34.6465%" y="1221" width="6.3636%" height="15" fill="rgb(218,39,14)"/><text x="34.8965%" y="1231.50">alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (63 samples, 6.36%)</title><rect x="34.6465%" y="1205" width="6.3636%" height="15" fill="rgb(216,169,33)"/><text x="34.8965%" y="1215.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (63 samples, 6.36%)</title><rect x="34.6465%" y="1189" width="6.3636%" height="15" fill="rgb(233,80,24)"/><text x="34.8965%" y="1199.50">&lt;alloc::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (63 samples, 6.36%)</title><rect x="34.6465%" y="1173" width="6.3636%" height="15" fill="rgb(213,179,31)"/><text x="34.8965%" y="1183.50">core::it..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 6.36%)</title><rect x="34.6465%" y="1157" width="6.3636%" height="15" fill="rgb(209,19,5)"/><text x="34.8965%" y="1167.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 6.36%)</title><rect x="34.6465%" y="1141" width="6.3636%" height="15" fill="rgb(219,18,35)"/><text x="34.8965%" y="1151.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 6.36%)</title><rect x="34.6465%" y="1125" width="6.3636%" height="15" fill="rgb(209,169,16)"/><text x="34.8965%" y="1135.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (63 samples, 6.36%)</title><rect x="34.6465%" y="1109" width="6.3636%" height="15" fill="rgb(245,90,51)"/><text x="34.8965%" y="1119.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (63 samples, 6.36%)</title><rect x="34.6465%" y="1093" width="6.3636%" height="15" fill="rgb(220,99,45)"/><text x="34.8965%" y="1103.50">core::it..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (63 samples, 6.36%)</title><rect x="34.6465%" y="1077" width="6.3636%" height="15" fill="rgb(249,89,25)"/><text x="34.8965%" y="1087.50">core::it..</text></g><g><title>core::ops::function::FnMut::call_mut (62 samples, 6.26%)</title><rect x="34.7475%" y="1061" width="6.2626%" height="15" fill="rgb(239,193,0)"/><text x="34.9975%" y="1071.50">core::op..</text></g><g><title>&lt;polar::vm::Goal as core::clone::Clone&gt;::clone (45 samples, 4.55%)</title><rect x="36.4646%" y="1045" width="4.5455%" height="15" fill="rgb(231,126,1)"/><text x="36.7146%" y="1055.50">&lt;pola..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (43 samples, 4.34%)</title><rect x="36.6667%" y="1029" width="4.3434%" height="15" fill="rgb(243,166,3)"/><text x="36.9167%" y="1039.50">&lt;pola..</text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (43 samples, 4.34%)</title><rect x="36.6667%" y="1013" width="4.3434%" height="15" fill="rgb(223,22,34)"/><text x="36.9167%" y="1023.50">&lt;pola..</text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (20 samples, 2.02%)</title><rect x="38.9899%" y="997" width="2.0202%" height="15" fill="rgb(251,52,51)"/><text x="39.2399%" y="1007.50">&lt;..</text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="40.3030%" y="981" width="0.7071%" height="15" fill="rgb(221,165,28)"/><text x="40.5530%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="40.3030%" y="965" width="0.7071%" height="15" fill="rgb(218,121,47)"/><text x="40.5530%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="40.3030%" y="949" width="0.7071%" height="15" fill="rgb(209,120,9)"/><text x="40.5530%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.71%)</title><rect x="40.3030%" y="933" width="0.7071%" height="15" fill="rgb(236,68,12)"/><text x="40.5530%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.71%)</title><rect x="40.3030%" y="917" width="0.7071%" height="15" fill="rgb(225,194,26)"/><text x="40.5530%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="40.3030%" y="901" width="0.7071%" height="15" fill="rgb(231,84,39)"/><text x="40.5530%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="40.3030%" y="885" width="0.7071%" height="15" fill="rgb(210,11,45)"/><text x="40.5530%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.71%)</title><rect x="40.3030%" y="869" width="0.7071%" height="15" fill="rgb(224,54,52)"/><text x="40.5530%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.71%)</title><rect x="40.3030%" y="853" width="0.7071%" height="15" fill="rgb(238,102,14)"/><text x="40.5530%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="40.3030%" y="837" width="0.7071%" height="15" fill="rgb(243,160,52)"/><text x="40.5530%" y="847.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.71%)</title><rect x="40.3030%" y="821" width="0.7071%" height="15" fill="rgb(216,114,19)"/><text x="40.5530%" y="831.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="40.9091%" y="805" width="0.1010%" height="15" fill="rgb(244,166,37)"/><text x="41.1591%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="41.0101%" y="725" width="0.1010%" height="15" fill="rgb(246,29,44)"/><text x="41.2601%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="41.0101%" y="709" width="0.1010%" height="15" fill="rgb(215,56,53)"/><text x="41.2601%" y="719.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="41.0101%" y="693" width="0.1010%" height="15" fill="rgb(217,60,2)"/><text x="41.2601%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="41.0101%" y="885" width="0.2020%" height="15" fill="rgb(207,26,24)"/><text x="41.2601%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="41.0101%" y="869" width="0.2020%" height="15" fill="rgb(252,210,15)"/><text x="41.2601%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="41.0101%" y="853" width="0.2020%" height="15" fill="rgb(253,209,26)"/><text x="41.2601%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="41.0101%" y="837" width="0.2020%" height="15" fill="rgb(238,170,14)"/><text x="41.2601%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="41.0101%" y="821" width="0.2020%" height="15" fill="rgb(216,178,15)"/><text x="41.2601%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="41.0101%" y="805" width="0.2020%" height="15" fill="rgb(250,197,2)"/><text x="41.2601%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="41.0101%" y="789" width="0.2020%" height="15" fill="rgb(212,70,42)"/><text x="41.2601%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="41.0101%" y="773" width="0.2020%" height="15" fill="rgb(227,213,9)"/><text x="41.2601%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="41.0101%" y="757" width="0.2020%" height="15" fill="rgb(245,99,25)"/><text x="41.2601%" y="767.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="41.0101%" y="741" width="0.2020%" height="15" fill="rgb(250,82,29)"/><text x="41.2601%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="41.1111%" y="725" width="0.1010%" height="15" fill="rgb(241,226,54)"/><text x="41.3611%" y="735.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="41.1111%" y="709" width="0.1010%" height="15" fill="rgb(221,99,41)"/><text x="41.3611%" y="719.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="41.0101%" y="1237" width="0.4040%" height="15" fill="rgb(213,90,21)"/><text x="41.2601%" y="1247.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="41.0101%" y="1221" width="0.4040%" height="15" fill="rgb(205,208,24)"/><text x="41.2601%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="41.0101%" y="1205" width="0.4040%" height="15" fill="rgb(246,31,12)"/><text x="41.2601%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="41.0101%" y="1189" width="0.4040%" height="15" fill="rgb(213,154,6)"/><text x="41.2601%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="41.0101%" y="1173" width="0.4040%" height="15" fill="rgb(222,163,29)"/><text x="41.2601%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="41.0101%" y="1157" width="0.4040%" height="15" fill="rgb(227,201,8)"/><text x="41.2601%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="41.0101%" y="1141" width="0.4040%" height="15" fill="rgb(233,9,32)"/><text x="41.2601%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="41.0101%" y="1125" width="0.4040%" height="15" fill="rgb(217,54,24)"/><text x="41.2601%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="41.0101%" y="1109" width="0.4040%" height="15" fill="rgb(235,192,0)"/><text x="41.2601%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="41.0101%" y="1093" width="0.4040%" height="15" fill="rgb(235,45,9)"/><text x="41.2601%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="41.0101%" y="1077" width="0.4040%" height="15" fill="rgb(246,42,40)"/><text x="41.2601%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="41.0101%" y="1061" width="0.4040%" height="15" fill="rgb(248,111,24)"/><text x="41.2601%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="41.0101%" y="1045" width="0.4040%" height="15" fill="rgb(249,65,22)"/><text x="41.2601%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="41.0101%" y="1029" width="0.4040%" height="15" fill="rgb(238,111,51)"/><text x="41.2601%" y="1039.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="41.0101%" y="1013" width="0.4040%" height="15" fill="rgb(250,118,22)"/><text x="41.2601%" y="1023.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.40%)</title><rect x="41.0101%" y="997" width="0.4040%" height="15" fill="rgb(234,84,26)"/><text x="41.2601%" y="1007.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="41.0101%" y="981" width="0.4040%" height="15" fill="rgb(243,172,12)"/><text x="41.2601%" y="991.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="41.0101%" y="965" width="0.4040%" height="15" fill="rgb(236,150,49)"/><text x="41.2601%" y="975.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="41.0101%" y="949" width="0.4040%" height="15" fill="rgb(225,197,26)"/><text x="41.2601%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="41.0101%" y="933" width="0.4040%" height="15" fill="rgb(214,17,42)"/><text x="41.2601%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="41.0101%" y="917" width="0.4040%" height="15" fill="rgb(224,165,40)"/><text x="41.2601%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="41.0101%" y="901" width="0.4040%" height="15" fill="rgb(246,100,4)"/><text x="41.2601%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="41.2121%" y="885" width="0.2020%" height="15" fill="rgb(222,103,0)"/><text x="41.4621%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="41.2121%" y="869" width="0.2020%" height="15" fill="rgb(227,189,26)"/><text x="41.4621%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="41.2121%" y="853" width="0.2020%" height="15" fill="rgb(214,202,17)"/><text x="41.4621%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="41.2121%" y="837" width="0.2020%" height="15" fill="rgb(229,111,3)"/><text x="41.4621%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="41.2121%" y="821" width="0.2020%" height="15" fill="rgb(229,172,15)"/><text x="41.4621%" y="831.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="41.2121%" y="805" width="0.2020%" height="15" fill="rgb(230,224,35)"/><text x="41.4621%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="41.2121%" y="789" width="0.2020%" height="15" fill="rgb(251,141,6)"/><text x="41.4621%" y="799.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="41.2121%" y="773" width="0.2020%" height="15" fill="rgb(225,208,6)"/><text x="41.4621%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="41.4141%" y="1029" width="0.1010%" height="15" fill="rgb(246,181,16)"/><text x="41.6641%" y="1039.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="41.5152%" y="1013" width="0.2020%" height="15" fill="rgb(227,129,36)"/><text x="41.7652%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="41.5152%" y="997" width="0.2020%" height="15" fill="rgb(248,117,24)"/><text x="41.7652%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="41.5152%" y="981" width="0.2020%" height="15" fill="rgb(214,185,35)"/><text x="41.7652%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="41.5152%" y="965" width="0.2020%" height="15" fill="rgb(236,150,34)"/><text x="41.7652%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="41.5152%" y="949" width="0.2020%" height="15" fill="rgb(243,228,27)"/><text x="41.7652%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="41.5152%" y="933" width="0.2020%" height="15" fill="rgb(245,77,44)"/><text x="41.7652%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="41.5152%" y="917" width="0.2020%" height="15" fill="rgb(235,214,42)"/><text x="41.7652%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="41.5152%" y="901" width="0.2020%" height="15" fill="rgb(221,74,3)"/><text x="41.7652%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="41.5152%" y="885" width="0.2020%" height="15" fill="rgb(206,121,29)"/><text x="41.7652%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="41.5152%" y="869" width="0.2020%" height="15" fill="rgb(249,131,53)"/><text x="41.7652%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="41.5152%" y="853" width="0.2020%" height="15" fill="rgb(236,170,29)"/><text x="41.7652%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="41.5152%" y="837" width="0.2020%" height="15" fill="rgb(247,96,15)"/><text x="41.7652%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="41.6162%" y="821" width="0.1010%" height="15" fill="rgb(211,210,7)"/><text x="41.8662%" y="831.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="41.6162%" y="805" width="0.1010%" height="15" fill="rgb(240,88,50)"/><text x="41.8662%" y="815.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (157 samples, 15.86%)</title><rect x="25.9596%" y="1573" width="15.8586%" height="15" fill="rgb(209,229,26)"/><text x="26.2096%" y="1583.50">criterion::Bencher&lt;M&gt;::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (157 samples, 15.86%)</title><rect x="25.9596%" y="1557" width="15.8586%" height="15" fill="rgb(210,68,23)"/><text x="26.2096%" y="1567.50">&lt;alloc::vec::Vec&lt;T&gt; as c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (157 samples, 15.86%)</title><rect x="25.9596%" y="1541" width="15.8586%" height="15" fill="rgb(229,180,13)"/><text x="26.2096%" y="1551.50">&lt;alloc::vec::Vec&lt;T&gt; as a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (157 samples, 15.86%)</title><rect x="25.9596%" y="1525" width="15.8586%" height="15" fill="rgb(236,53,44)"/><text x="26.2096%" y="1535.50">core::iter::traits::iter..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (157 samples, 15.86%)</title><rect x="25.9596%" y="1509" width="15.8586%" height="15" fill="rgb(244,214,29)"/><text x="26.2096%" y="1519.50">&lt;core::iter::adapters::M..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (157 samples, 15.86%)</title><rect x="25.9596%" y="1493" width="15.8586%" height="15" fill="rgb(220,75,29)"/><text x="26.2096%" y="1503.50">core::iter::traits::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (157 samples, 15.86%)</title><rect x="25.9596%" y="1477" width="15.8586%" height="15" fill="rgb(214,183,37)"/><text x="26.2096%" y="1487.50">core::iter::traits::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (157 samples, 15.86%)</title><rect x="25.9596%" y="1461" width="15.8586%" height="15" fill="rgb(239,117,29)"/><text x="26.2096%" y="1471.50">core::iter::traits::iter..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (157 samples, 15.86%)</title><rect x="25.9596%" y="1445" width="15.8586%" height="15" fill="rgb(237,171,35)"/><text x="26.2096%" y="1455.50">core::iter::adapters::ma..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (157 samples, 15.86%)</title><rect x="25.9596%" y="1429" width="15.8586%" height="15" fill="rgb(229,178,53)"/><text x="26.2096%" y="1439.50">core::ops::function::imp..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (157 samples, 15.86%)</title><rect x="25.9596%" y="1413" width="15.8586%" height="15" fill="rgb(210,102,19)"/><text x="26.2096%" y="1423.50">bench::simple_queries::_..</text></g><g><title>bench::Runner::run (157 samples, 15.86%)</title><rect x="25.9596%" y="1397" width="15.8586%" height="15" fill="rgb(235,127,22)"/><text x="26.2096%" y="1407.50">bench::Runner::run</text></g><g><title>bench::Runner::next (157 samples, 15.86%)</title><rect x="25.9596%" y="1381" width="15.8586%" height="15" fill="rgb(244,31,31)"/><text x="26.2096%" y="1391.50">bench::Runner::next</text></g><g><title>polar::polar::Polar::query (157 samples, 15.86%)</title><rect x="25.9596%" y="1365" width="15.8586%" height="15" fill="rgb(231,43,21)"/><text x="26.2096%" y="1375.50">polar::polar::Polar::que..</text></g><g><title>polar::vm::PolarVirtualMachine::run (157 samples, 15.86%)</title><rect x="25.9596%" y="1349" width="15.8586%" height="15" fill="rgb(217,131,35)"/><text x="26.2096%" y="1359.50">polar::vm::PolarVirtualM..</text></g><g><title>polar::vm::PolarVirtualMachine::next (157 samples, 15.86%)</title><rect x="25.9596%" y="1333" width="15.8586%" height="15" fill="rgb(221,149,4)"/><text x="26.2096%" y="1343.50">polar::vm::PolarVirtualM..</text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (85 samples, 8.59%)</title><rect x="33.2323%" y="1317" width="8.5859%" height="15" fill="rgb(232,170,28)"/><text x="33.4823%" y="1327.50">polar::vm::P..</text></g><g><title>polar::vm::PolarVirtualMachine::rename_vars (8 samples, 0.81%)</title><rect x="41.0101%" y="1301" width="0.8081%" height="15" fill="rgb(238,56,10)"/><text x="41.2601%" y="1311.50"></text></g><g><title>polar::types::Rule::map (8 samples, 0.81%)</title><rect x="41.0101%" y="1285" width="0.8081%" height="15" fill="rgb(235,196,14)"/><text x="41.2601%" y="1295.50"></text></g><g><title>polar::types::Term::map (8 samples, 0.81%)</title><rect x="41.0101%" y="1269" width="0.8081%" height="15" fill="rgb(216,45,48)"/><text x="41.2601%" y="1279.50"></text></g><g><title>polar::types::Value::map (8 samples, 0.81%)</title><rect x="41.0101%" y="1253" width="0.8081%" height="15" fill="rgb(238,213,17)"/><text x="41.2601%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.40%)</title><rect x="41.4141%" y="1237" width="0.4040%" height="15" fill="rgb(212,13,2)"/><text x="41.6641%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.40%)</title><rect x="41.4141%" y="1221" width="0.4040%" height="15" fill="rgb(240,114,20)"/><text x="41.6641%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (4 samples, 0.40%)</title><rect x="41.4141%" y="1205" width="0.4040%" height="15" fill="rgb(228,41,40)"/><text x="41.6641%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="41.4141%" y="1189" width="0.4040%" height="15" fill="rgb(244,132,35)"/><text x="41.6641%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="41.4141%" y="1173" width="0.4040%" height="15" fill="rgb(253,189,4)"/><text x="41.6641%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="41.4141%" y="1157" width="0.4040%" height="15" fill="rgb(224,37,19)"/><text x="41.6641%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="41.4141%" y="1141" width="0.4040%" height="15" fill="rgb(235,223,18)"/><text x="41.6641%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="41.4141%" y="1125" width="0.4040%" height="15" fill="rgb(235,163,25)"/><text x="41.6641%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="41.4141%" y="1109" width="0.4040%" height="15" fill="rgb(217,145,28)"/><text x="41.6641%" y="1119.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="41.4141%" y="1093" width="0.4040%" height="15" fill="rgb(223,223,32)"/><text x="41.6641%" y="1103.50"></text></g><g><title>polar::types::Value::map::_{{closure}} (4 samples, 0.40%)</title><rect x="41.4141%" y="1077" width="0.4040%" height="15" fill="rgb(227,189,39)"/><text x="41.6641%" y="1087.50"></text></g><g><title>polar::types::Term::map (4 samples, 0.40%)</title><rect x="41.4141%" y="1061" width="0.4040%" height="15" fill="rgb(248,10,22)"/><text x="41.6641%" y="1071.50"></text></g><g><title>polar::types::Value::map (4 samples, 0.40%)</title><rect x="41.4141%" y="1045" width="0.4040%" height="15" fill="rgb(248,46,39)"/><text x="41.6641%" y="1055.50"></text></g><g><title>polar::types::Predicate::map (3 samples, 0.30%)</title><rect x="41.5152%" y="1029" width="0.3030%" height="15" fill="rgb(248,113,48)"/><text x="41.7652%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="41.7172%" y="1013" width="0.1010%" height="15" fill="rgb(245,16,25)"/><text x="41.9672%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="41.7172%" y="997" width="0.1010%" height="15" fill="rgb(249,152,16)"/><text x="41.9672%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="41.7172%" y="981" width="0.1010%" height="15" fill="rgb(250,16,1)"/><text x="41.9672%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="41.7172%" y="965" width="0.1010%" height="15" fill="rgb(249,138,3)"/><text x="41.9672%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="41.7172%" y="949" width="0.1010%" height="15" fill="rgb(227,71,41)"/><text x="41.9672%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="41.7172%" y="933" width="0.1010%" height="15" fill="rgb(209,184,23)"/><text x="41.9672%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="41.7172%" y="917" width="0.1010%" height="15" fill="rgb(223,215,31)"/><text x="41.9672%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="41.7172%" y="901" width="0.1010%" height="15" fill="rgb(210,146,28)"/><text x="41.9672%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="41.7172%" y="885" width="0.1010%" height="15" fill="rgb(209,183,41)"/><text x="41.9672%" y="895.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="41.7172%" y="869" width="0.1010%" height="15" fill="rgb(209,224,45)"/><text x="41.9672%" y="879.50"></text></g><g><title>polar::types::Predicate::map::_{{closure}} (1 samples, 0.10%)</title><rect x="41.7172%" y="853" width="0.1010%" height="15" fill="rgb(224,209,51)"/><text x="41.9672%" y="863.50"></text></g><g><title>polar::types::Term::map (1 samples, 0.10%)</title><rect x="41.7172%" y="837" width="0.1010%" height="15" fill="rgb(223,17,39)"/><text x="41.9672%" y="847.50"></text></g><g><title>polar::types::Value::map (1 samples, 0.10%)</title><rect x="41.7172%" y="821" width="0.1010%" height="15" fill="rgb(234,204,37)"/><text x="41.9672%" y="831.50"></text></g><g><title>polar::vm::PolarVirtualMachine::rename_vars::_{{closure}} (1 samples, 0.10%)</title><rect x="41.7172%" y="805" width="0.1010%" height="15" fill="rgb(236,120,5)"/><text x="41.9672%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="41.8182%" y="821" width="0.2020%" height="15" fill="rgb(248,97,27)"/><text x="42.0682%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="41.9192%" y="805" width="0.1010%" height="15" fill="rgb(240,66,17)"/><text x="42.1692%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="41.9192%" y="789" width="0.1010%" height="15" fill="rgb(210,79,3)"/><text x="42.1692%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="41.9192%" y="773" width="0.1010%" height="15" fill="rgb(214,176,27)"/><text x="42.1692%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="41.9192%" y="757" width="0.1010%" height="15" fill="rgb(235,185,3)"/><text x="42.1692%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.51%)</title><rect x="41.8182%" y="901" width="0.5051%" height="15" fill="rgb(227,24,12)"/><text x="42.0682%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.51%)</title><rect x="41.8182%" y="885" width="0.5051%" height="15" fill="rgb(252,169,48)"/><text x="42.0682%" y="895.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.51%)</title><rect x="41.8182%" y="869" width="0.5051%" height="15" fill="rgb(212,65,1)"/><text x="42.0682%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.51%)</title><rect x="41.8182%" y="853" width="0.5051%" height="15" fill="rgb(242,39,24)"/><text x="42.0682%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="41.8182%" y="837" width="0.5051%" height="15" fill="rgb(249,32,23)"/><text x="42.0682%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.30%)</title><rect x="42.0202%" y="821" width="0.3030%" height="15" fill="rgb(251,195,23)"/><text x="42.2702%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.30%)</title><rect x="42.0202%" y="805" width="0.3030%" height="15" fill="rgb(236,174,8)"/><text x="42.2702%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.30%)</title><rect x="42.0202%" y="789" width="0.3030%" height="15" fill="rgb(220,197,8)"/><text x="42.2702%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (2 samples, 0.20%)</title><rect x="42.3232%" y="901" width="0.2020%" height="15" fill="rgb(240,108,37)"/><text x="42.5732%" y="911.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.81%)</title><rect x="41.8182%" y="949" width="0.8081%" height="15" fill="rgb(232,176,24)"/><text x="42.0682%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.81%)</title><rect x="41.8182%" y="933" width="0.8081%" height="15" fill="rgb(243,35,29)"/><text x="42.0682%" y="943.50"></text></g><g><title>core::fmt::write (8 samples, 0.81%)</title><rect x="41.8182%" y="917" width="0.8081%" height="15" fill="rgb(210,37,18)"/><text x="42.0682%" y="927.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.10%)</title><rect x="42.5253%" y="901" width="0.1010%" height="15" fill="rgb(224,184,40)"/><text x="42.7753%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.10%)</title><rect x="42.6263%" y="933" width="0.1010%" height="15" fill="rgb(236,39,29)"/><text x="42.8763%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.10%)</title><rect x="42.6263%" y="917" width="0.1010%" height="15" fill="rgb(232,48,39)"/><text x="42.8763%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.10%)</title><rect x="42.6263%" y="901" width="0.1010%" height="15" fill="rgb(236,34,42)"/><text x="42.8763%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="42.6263%" y="885" width="0.1010%" height="15" fill="rgb(243,106,37)"/><text x="42.8763%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="42.6263%" y="869" width="0.1010%" height="15" fill="rgb(218,96,6)"/><text x="42.8763%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="42.6263%" y="853" width="0.1010%" height="15" fill="rgb(235,130,12)"/><text x="42.8763%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="42.6263%" y="837" width="0.1010%" height="15" fill="rgb(231,95,0)"/><text x="42.8763%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="42.6263%" y="821" width="0.1010%" height="15" fill="rgb(228,12,23)"/><text x="42.8763%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="42.7273%" y="869" width="0.2020%" height="15" fill="rgb(216,12,1)"/><text x="42.9773%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="42.7273%" y="853" width="0.2020%" height="15" fill="rgb(219,59,3)"/><text x="42.9773%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="42.7273%" y="837" width="0.2020%" height="15" fill="rgb(215,208,46)"/><text x="42.9773%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="42.8283%" y="821" width="0.1010%" height="15" fill="rgb(254,224,29)"/><text x="43.0783%" y="831.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="42.8283%" y="805" width="0.1010%" height="15" fill="rgb(232,14,29)"/><text x="43.0783%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="42.8283%" y="789" width="0.1010%" height="15" fill="rgb(208,45,52)"/><text x="43.0783%" y="799.50"></text></g><g><title>polar::formatting::to_polar::format_args (4 samples, 0.40%)</title><rect x="42.6263%" y="949" width="0.4040%" height="15" fill="rgb(234,191,28)"/><text x="42.8763%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.30%)</title><rect x="42.7273%" y="933" width="0.3030%" height="15" fill="rgb(244,67,43)"/><text x="42.9773%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="42.7273%" y="917" width="0.3030%" height="15" fill="rgb(236,189,24)"/><text x="42.9773%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="42.7273%" y="901" width="0.3030%" height="15" fill="rgb(239,214,33)"/><text x="42.9773%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="42.7273%" y="885" width="0.3030%" height="15" fill="rgb(226,176,41)"/><text x="42.9773%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="42.9293%" y="869" width="0.1010%" height="15" fill="rgb(248,47,8)"/><text x="43.1793%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="42.9293%" y="853" width="0.1010%" height="15" fill="rgb(218,81,44)"/><text x="43.1793%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="42.9293%" y="837" width="0.1010%" height="15" fill="rgb(213,98,6)"/><text x="43.1793%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="42.9293%" y="821" width="0.1010%" height="15" fill="rgb(222,85,22)"/><text x="43.1793%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="42.9293%" y="805" width="0.1010%" height="15" fill="rgb(239,46,39)"/><text x="43.1793%" y="815.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="42.9293%" y="789" width="0.1010%" height="15" fill="rgb(237,12,29)"/><text x="43.1793%" y="799.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (1 samples, 0.10%)</title><rect x="42.9293%" y="773" width="0.1010%" height="15" fill="rgb(214,77,8)"/><text x="43.1793%" y="783.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (1 samples, 0.10%)</title><rect x="42.9293%" y="757" width="0.1010%" height="15" fill="rgb(217,168,37)"/><text x="43.1793%" y="767.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="42.9293%" y="741" width="0.1010%" height="15" fill="rgb(221,217,23)"/><text x="43.1793%" y="751.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="42.9293%" y="725" width="0.1010%" height="15" fill="rgb(243,229,36)"/><text x="43.1793%" y="735.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="42.9293%" y="709" width="0.1010%" height="15" fill="rgb(251,163,40)"/><text x="43.1793%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="43.0303%" y="853" width="0.1010%" height="15" fill="rgb(237,222,12)"/><text x="43.2803%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="43.0303%" y="837" width="0.1010%" height="15" fill="rgb(248,132,6)"/><text x="43.2803%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (2 samples, 0.20%)</title><rect x="43.0303%" y="933" width="0.2020%" height="15" fill="rgb(227,167,50)"/><text x="43.2803%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (2 samples, 0.20%)</title><rect x="43.0303%" y="917" width="0.2020%" height="15" fill="rgb(242,84,37)"/><text x="43.2803%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (2 samples, 0.20%)</title><rect x="43.0303%" y="901" width="0.2020%" height="15" fill="rgb(212,4,50)"/><text x="43.2803%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="43.0303%" y="885" width="0.2020%" height="15" fill="rgb(230,228,32)"/><text x="43.2803%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="43.0303%" y="869" width="0.2020%" height="15" fill="rgb(248,217,23)"/><text x="43.2803%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="43.1313%" y="853" width="0.1010%" height="15" fill="rgb(238,197,32)"/><text x="43.3813%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="43.1313%" y="837" width="0.1010%" height="15" fill="rgb(236,106,1)"/><text x="43.3813%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="43.1313%" y="821" width="0.1010%" height="15" fill="rgb(219,228,13)"/><text x="43.3813%" y="831.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (15 samples, 1.52%)</title><rect x="41.8182%" y="965" width="1.5152%" height="15" fill="rgb(238,30,35)"/><text x="42.0682%" y="975.50"></text></g><g><title>polar::formatting::to_polar::format_params (3 samples, 0.30%)</title><rect x="43.0303%" y="949" width="0.3030%" height="15" fill="rgb(236,70,23)"/><text x="43.2803%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="43.2323%" y="933" width="0.1010%" height="15" fill="rgb(249,104,48)"/><text x="43.4823%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="43.2323%" y="917" width="0.1010%" height="15" fill="rgb(254,117,50)"/><text x="43.4823%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="43.2323%" y="901" width="0.1010%" height="15" fill="rgb(223,152,4)"/><text x="43.4823%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="43.2323%" y="885" width="0.1010%" height="15" fill="rgb(245,6,2)"/><text x="43.4823%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="43.2323%" y="869" width="0.1010%" height="15" fill="rgb(249,150,24)"/><text x="43.4823%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="43.2323%" y="853" width="0.1010%" height="15" fill="rgb(228,185,42)"/><text x="43.4823%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="43.2323%" y="837" width="0.1010%" height="15" fill="rgb(226,39,33)"/><text x="43.4823%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="43.2323%" y="821" width="0.1010%" height="15" fill="rgb(221,166,19)"/><text x="43.4823%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="43.2323%" y="805" width="0.1010%" height="15" fill="rgb(209,109,2)"/><text x="43.4823%" y="815.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="43.2323%" y="789" width="0.1010%" height="15" fill="rgb(252,216,26)"/><text x="43.4823%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="43.2323%" y="773" width="0.1010%" height="15" fill="rgb(227,173,36)"/><text x="43.4823%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="43.2323%" y="757" width="0.1010%" height="15" fill="rgb(209,90,7)"/><text x="43.4823%" y="767.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="43.2323%" y="741" width="0.1010%" height="15" fill="rgb(250,194,11)"/><text x="43.4823%" y="751.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="43.3333%" y="917" width="0.1010%" height="15" fill="rgb(220,72,50)"/><text x="43.5833%" y="927.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="43.3333%" y="901" width="0.1010%" height="15" fill="rgb(222,106,48)"/><text x="43.5833%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="43.3333%" y="885" width="0.1010%" height="15" fill="rgb(216,220,45)"/><text x="43.5833%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="43.3333%" y="869" width="0.1010%" height="15" fill="rgb(234,112,18)"/><text x="43.5833%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="43.3333%" y="853" width="0.1010%" height="15" fill="rgb(206,179,9)"/><text x="43.5833%" y="863.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="43.3333%" y="837" width="0.1010%" height="15" fill="rgb(215,115,40)"/><text x="43.5833%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="43.3333%" y="821" width="0.1010%" height="15" fill="rgb(222,69,34)"/><text x="43.5833%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="43.3333%" y="805" width="0.1010%" height="15" fill="rgb(209,161,10)"/><text x="43.5833%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="43.3333%" y="789" width="0.1010%" height="15" fill="rgb(217,6,38)"/><text x="43.5833%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="43.3333%" y="773" width="0.1010%" height="15" fill="rgb(229,229,48)"/><text x="43.5833%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="43.3333%" y="757" width="0.1010%" height="15" fill="rgb(225,21,28)"/><text x="43.5833%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="43.3333%" y="741" width="0.1010%" height="15" fill="rgb(206,33,13)"/><text x="43.5833%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="43.3333%" y="725" width="0.1010%" height="15" fill="rgb(242,178,17)"/><text x="43.5833%" y="735.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="43.3333%" y="709" width="0.1010%" height="15" fill="rgb(220,162,5)"/><text x="43.5833%" y="719.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="43.3333%" y="693" width="0.1010%" height="15" fill="rgb(210,33,43)"/><text x="43.5833%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="43.3333%" y="677" width="0.1010%" height="15" fill="rgb(216,116,54)"/><text x="43.5833%" y="687.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="43.3333%" y="933" width="0.2020%" height="15" fill="rgb(249,92,24)"/><text x="43.5833%" y="943.50"></text></g><g><title>polar::formatting::to_polar::format_args (1 samples, 0.10%)</title><rect x="43.4343%" y="917" width="0.1010%" height="15" fill="rgb(231,189,14)"/><text x="43.6843%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="43.4343%" y="901" width="0.1010%" height="15" fill="rgb(230,8,41)"/><text x="43.6843%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="43.4343%" y="885" width="0.1010%" height="15" fill="rgb(249,7,27)"/><text x="43.6843%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="43.4343%" y="869" width="0.1010%" height="15" fill="rgb(232,86,5)"/><text x="43.6843%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="43.4343%" y="853" width="0.1010%" height="15" fill="rgb(224,175,18)"/><text x="43.6843%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="43.4343%" y="837" width="0.1010%" height="15" fill="rgb(220,129,12)"/><text x="43.6843%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="43.4343%" y="821" width="0.1010%" height="15" fill="rgb(210,19,36)"/><text x="43.6843%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="43.4343%" y="805" width="0.1010%" height="15" fill="rgb(219,96,14)"/><text x="43.6843%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="43.4343%" y="789" width="0.1010%" height="15" fill="rgb(249,106,1)"/><text x="43.6843%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="43.4343%" y="773" width="0.1010%" height="15" fill="rgb(249,155,20)"/><text x="43.6843%" y="783.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="43.4343%" y="757" width="0.1010%" height="15" fill="rgb(244,168,9)"/><text x="43.6843%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="43.4343%" y="741" width="0.1010%" height="15" fill="rgb(216,23,50)"/><text x="43.6843%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="43.4343%" y="725" width="0.1010%" height="15" fill="rgb(224,219,20)"/><text x="43.6843%" y="735.50"></text></g><g><title>alloc::vec::SetLenOnDrop::increment_len (1 samples, 0.10%)</title><rect x="43.4343%" y="709" width="0.1010%" height="15" fill="rgb(222,156,15)"/><text x="43.6843%" y="719.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="43.5354%" y="885" width="0.1010%" height="15" fill="rgb(231,97,17)"/><text x="43.7854%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="43.6364%" y="885" width="0.1010%" height="15" fill="rgb(218,70,48)"/><text x="43.8864%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="43.7374%" y="853" width="0.2020%" height="15" fill="rgb(212,196,52)"/><text x="43.9874%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="43.7374%" y="837" width="0.2020%" height="15" fill="rgb(243,203,18)"/><text x="43.9874%" y="847.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.20%)</title><rect x="43.7374%" y="821" width="0.2020%" height="15" fill="rgb(252,125,41)"/><text x="43.9874%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="43.7374%" y="805" width="0.2020%" height="15" fill="rgb(223,180,33)"/><text x="43.9874%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="43.7374%" y="789" width="0.2020%" height="15" fill="rgb(254,159,46)"/><text x="43.9874%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="43.7374%" y="773" width="0.2020%" height="15" fill="rgb(254,38,10)"/><text x="43.9874%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="43.7374%" y="757" width="0.2020%" height="15" fill="rgb(208,217,32)"/><text x="43.9874%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="43.7374%" y="741" width="0.2020%" height="15" fill="rgb(221,120,13)"/><text x="43.9874%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (2 samples, 0.20%)</title><rect x="43.7374%" y="725" width="0.2020%" height="15" fill="rgb(246,54,52)"/><text x="43.9874%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="43.7374%" y="709" width="0.2020%" height="15" fill="rgb(242,34,25)"/><text x="43.9874%" y="719.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="43.7374%" y="693" width="0.2020%" height="15" fill="rgb(247,209,9)"/><text x="43.9874%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="43.7374%" y="677" width="0.2020%" height="15" fill="rgb(228,71,26)"/><text x="43.9874%" y="687.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (7 samples, 0.71%)</title><rect x="43.3333%" y="965" width="0.7071%" height="15" fill="rgb(222,145,49)"/><text x="43.5833%" y="975.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (7 samples, 0.71%)</title><rect x="43.3333%" y="949" width="0.7071%" height="15" fill="rgb(218,121,17)"/><text x="43.5833%" y="959.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.51%)</title><rect x="43.5354%" y="933" width="0.5051%" height="15" fill="rgb(244,50,7)"/><text x="43.7854%" y="943.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.51%)</title><rect x="43.5354%" y="917" width="0.5051%" height="15" fill="rgb(246,229,37)"/><text x="43.7854%" y="927.50"></text></g><g><title>core::fmt::write (5 samples, 0.51%)</title><rect x="43.5354%" y="901" width="0.5051%" height="15" fill="rgb(225,18,5)"/><text x="43.7854%" y="911.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (3 samples, 0.30%)</title><rect x="43.7374%" y="885" width="0.3030%" height="15" fill="rgb(213,204,8)"/><text x="43.9874%" y="895.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.30%)</title><rect x="43.7374%" y="869" width="0.3030%" height="15" fill="rgb(238,103,6)"/><text x="43.9874%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="43.9394%" y="853" width="0.1010%" height="15" fill="rgb(222,25,35)"/><text x="44.1894%" y="863.50"></text></g><g><title>core::fmt::Formatter::write_fmt (8 samples, 0.81%)</title><rect x="44.0404%" y="965" width="0.8081%" height="15" fill="rgb(213,203,35)"/><text x="44.2904%" y="975.50"></text></g><g><title>core::fmt::write (8 samples, 0.81%)</title><rect x="44.0404%" y="949" width="0.8081%" height="15" fill="rgb(221,79,53)"/><text x="44.2904%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.81%)</title><rect x="44.0404%" y="933" width="0.8081%" height="15" fill="rgb(243,200,35)"/><text x="44.2904%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.81%)</title><rect x="44.0404%" y="917" width="0.8081%" height="15" fill="rgb(248,60,25)"/><text x="44.2904%" y="927.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.81%)</title><rect x="44.0404%" y="901" width="0.8081%" height="15" fill="rgb(227,53,46)"/><text x="44.2904%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.81%)</title><rect x="44.0404%" y="885" width="0.8081%" height="15" fill="rgb(216,120,32)"/><text x="44.2904%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.81%)</title><rect x="44.0404%" y="869" width="0.8081%" height="15" fill="rgb(220,134,1)"/><text x="44.2904%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.81%)</title><rect x="44.0404%" y="853" width="0.8081%" height="15" fill="rgb(237,168,5)"/><text x="44.2904%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.81%)</title><rect x="44.0404%" y="837" width="0.8081%" height="15" fill="rgb(231,100,33)"/><text x="44.2904%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (8 samples, 0.81%)</title><rect x="44.0404%" y="821" width="0.8081%" height="15" fill="rgb(236,177,47)"/><text x="44.2904%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (8 samples, 0.81%)</title><rect x="44.0404%" y="805" width="0.8081%" height="15" fill="rgb(235,7,49)"/><text x="44.2904%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (8 samples, 0.81%)</title><rect x="44.0404%" y="789" width="0.8081%" height="15" fill="rgb(232,119,22)"/><text x="44.2904%" y="799.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.81%)</title><rect x="44.0404%" y="773" width="0.8081%" height="15" fill="rgb(254,73,53)"/><text x="44.2904%" y="783.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.81%)</title><rect x="44.0404%" y="757" width="0.8081%" height="15" fill="rgb(251,35,20)"/><text x="44.2904%" y="767.50"></text></g><g><title>_int_realloc (8 samples, 0.81%)</title><rect x="44.0404%" y="741" width="0.8081%" height="15" fill="rgb(241,119,20)"/><text x="44.2904%" y="751.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="44.4444%" y="725" width="0.4040%" height="15" fill="rgb(207,102,14)"/><text x="44.6944%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="44.7475%" y="709" width="0.1010%" height="15" fill="rgb(248,201,50)"/><text x="44.9975%" y="719.50"></text></g><g><title>&lt;polar::types::Symbol as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="44.8485%" y="773" width="0.1010%" height="15" fill="rgb(222,185,44)"/><text x="45.0985%" y="783.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.10%)</title><rect x="44.8485%" y="757" width="0.1010%" height="15" fill="rgb(218,107,18)"/><text x="45.0985%" y="767.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.10%)</title><rect x="44.8485%" y="741" width="0.1010%" height="15" fill="rgb(237,177,39)"/><text x="45.0985%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="44.8485%" y="725" width="0.1010%" height="15" fill="rgb(246,69,6)"/><text x="45.0985%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="44.8485%" y="709" width="0.1010%" height="15" fill="rgb(234,208,37)"/><text x="45.0985%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="44.8485%" y="693" width="0.1010%" height="15" fill="rgb(225,4,6)"/><text x="45.0985%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="44.8485%" y="677" width="0.1010%" height="15" fill="rgb(233,45,0)"/><text x="45.0985%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="44.8485%" y="661" width="0.1010%" height="15" fill="rgb(226,136,5)"/><text x="45.0985%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="44.8485%" y="645" width="0.1010%" height="15" fill="rgb(211,91,47)"/><text x="45.0985%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="44.8485%" y="629" width="0.1010%" height="15" fill="rgb(242,88,51)"/><text x="45.0985%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="44.8485%" y="613" width="0.1010%" height="15" fill="rgb(230,91,28)"/><text x="45.0985%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="44.8485%" y="597" width="0.1010%" height="15" fill="rgb(254,186,29)"/><text x="45.0985%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="44.8485%" y="581" width="0.1010%" height="15" fill="rgb(238,6,4)"/><text x="45.0985%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="44.8485%" y="565" width="0.1010%" height="15" fill="rgb(221,151,16)"/><text x="45.0985%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="44.8485%" y="549" width="0.1010%" height="15" fill="rgb(251,143,52)"/><text x="45.0985%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="45.9596%" y="549" width="0.1010%" height="15" fill="rgb(206,90,15)"/><text x="46.2096%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="45.9596%" y="533" width="0.1010%" height="15" fill="rgb(218,35,8)"/><text x="46.2096%" y="543.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="45.9596%" y="517" width="0.1010%" height="15" fill="rgb(239,215,6)"/><text x="46.2096%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="45.8586%" y="581" width="0.4040%" height="15" fill="rgb(245,116,39)"/><text x="46.1086%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="45.9596%" y="565" width="0.3030%" height="15" fill="rgb(242,65,28)"/><text x="46.2096%" y="575.50"></text></g><g><title>__rdl_alloc (2 samples, 0.20%)</title><rect x="46.0606%" y="549" width="0.2020%" height="15" fill="rgb(252,132,53)"/><text x="46.3106%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.20%)</title><rect x="46.0606%" y="533" width="0.2020%" height="15" fill="rgb(224,159,50)"/><text x="46.3106%" y="543.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.51%)</title><rect x="46.3636%" y="549" width="0.5051%" height="15" fill="rgb(224,93,4)"/><text x="46.6136%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="46.7677%" y="533" width="0.1010%" height="15" fill="rgb(208,81,34)"/><text x="47.0177%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (13 samples, 1.31%)</title><rect x="45.8586%" y="645" width="1.3131%" height="15" fill="rgb(233,92,54)"/><text x="46.1086%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 1.31%)</title><rect x="45.8586%" y="629" width="1.3131%" height="15" fill="rgb(237,21,14)"/><text x="46.1086%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (13 samples, 1.31%)</title><rect x="45.8586%" y="613" width="1.3131%" height="15" fill="rgb(249,128,51)"/><text x="46.1086%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (13 samples, 1.31%)</title><rect x="45.8586%" y="597" width="1.3131%" height="15" fill="rgb(223,129,24)"/><text x="46.1086%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (9 samples, 0.91%)</title><rect x="46.2626%" y="581" width="0.9091%" height="15" fill="rgb(231,168,25)"/><text x="46.5126%" y="591.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.91%)</title><rect x="46.2626%" y="565" width="0.9091%" height="15" fill="rgb(224,39,20)"/><text x="46.5126%" y="575.50"></text></g><g><title>__rdl_realloc (3 samples, 0.30%)</title><rect x="46.8687%" y="549" width="0.3030%" height="15" fill="rgb(225,152,53)"/><text x="47.1187%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.20%)</title><rect x="46.9697%" y="533" width="0.2020%" height="15" fill="rgb(252,17,24)"/><text x="47.2197%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 1.82%)</title><rect x="45.5556%" y="725" width="1.8182%" height="15" fill="rgb(250,114,30)"/><text x="45.8056%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 1.62%)</title><rect x="45.7576%" y="709" width="1.6162%" height="15" fill="rgb(229,5,4)"/><text x="46.0076%" y="719.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 1.62%)</title><rect x="45.7576%" y="693" width="1.6162%" height="15" fill="rgb(225,176,49)"/><text x="46.0076%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 1.62%)</title><rect x="45.7576%" y="677" width="1.6162%" height="15" fill="rgb(224,221,49)"/><text x="46.0076%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 1.62%)</title><rect x="45.7576%" y="661" width="1.6162%" height="15" fill="rgb(253,169,27)"/><text x="46.0076%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.20%)</title><rect x="47.1717%" y="645" width="0.2020%" height="15" fill="rgb(211,206,16)"/><text x="47.4217%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.20%)</title><rect x="47.1717%" y="629" width="0.2020%" height="15" fill="rgb(244,87,35)"/><text x="47.4217%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="47.2727%" y="613" width="0.1010%" height="15" fill="rgb(246,28,10)"/><text x="47.5227%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (3 samples, 0.30%)</title><rect x="47.3737%" y="725" width="0.3030%" height="15" fill="rgb(229,12,44)"/><text x="47.6237%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="47.6768%" y="725" width="0.1010%" height="15" fill="rgb(210,145,37)"/><text x="47.9268%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.10%)</title><rect x="47.6768%" y="709" width="0.1010%" height="15" fill="rgb(227,112,52)"/><text x="47.9268%" y="719.50"></text></g><g><title>alloc::fmt::format (29 samples, 2.93%)</title><rect x="44.9495%" y="773" width="2.9293%" height="15" fill="rgb(238,155,34)"/><text x="45.1995%" y="783.50">al..</text></g><g><title>core::fmt::Write::write_fmt (29 samples, 2.93%)</title><rect x="44.9495%" y="757" width="2.9293%" height="15" fill="rgb(239,226,36)"/><text x="45.1995%" y="767.50">co..</text></g><g><title>core::fmt::write (29 samples, 2.93%)</title><rect x="44.9495%" y="741" width="2.9293%" height="15" fill="rgb(230,16,23)"/><text x="45.1995%" y="751.50">co..</text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.10%)</title><rect x="47.7778%" y="725" width="0.1010%" height="15" fill="rgb(236,171,36)"/><text x="48.0278%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="48.0808%" y="709" width="0.1010%" height="15" fill="rgb(221,22,14)"/><text x="48.3308%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="48.0808%" y="693" width="0.1010%" height="15" fill="rgb(242,43,11)"/><text x="48.3308%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="48.0808%" y="677" width="0.1010%" height="15" fill="rgb(232,69,23)"/><text x="48.3308%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="48.0808%" y="661" width="0.1010%" height="15" fill="rgb(216,180,54)"/><text x="48.3308%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="48.0808%" y="645" width="0.1010%" height="15" fill="rgb(216,5,24)"/><text x="48.3308%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="48.3838%" y="613" width="0.1010%" height="15" fill="rgb(225,89,9)"/><text x="48.6338%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (6 samples, 0.61%)</title><rect x="47.9798%" y="757" width="0.6061%" height="15" fill="rgb(243,75,33)"/><text x="48.2298%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.61%)</title><rect x="47.9798%" y="741" width="0.6061%" height="15" fill="rgb(247,141,45)"/><text x="48.2298%" y="751.50"></text></g><g><title>alloc::str::join_generic_copy (6 samples, 0.61%)</title><rect x="47.9798%" y="725" width="0.6061%" height="15" fill="rgb(232,177,36)"/><text x="48.2298%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="48.1818%" y="709" width="0.4040%" height="15" fill="rgb(219,125,36)"/><text x="48.4318%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="48.1818%" y="693" width="0.4040%" height="15" fill="rgb(227,94,9)"/><text x="48.4318%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="48.1818%" y="677" width="0.4040%" height="15" fill="rgb(240,34,52)"/><text x="48.4318%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="48.1818%" y="661" width="0.4040%" height="15" fill="rgb(216,45,12)"/><text x="48.4318%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="48.1818%" y="645" width="0.4040%" height="15" fill="rgb(246,21,19)"/><text x="48.4318%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="48.3838%" y="629" width="0.2020%" height="15" fill="rgb(213,98,42)"/><text x="48.6338%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="48.4848%" y="613" width="0.1010%" height="15" fill="rgb(250,136,47)"/><text x="48.7348%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="48.4848%" y="597" width="0.1010%" height="15" fill="rgb(251,124,27)"/><text x="48.7348%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="48.5859%" y="693" width="0.1010%" height="15" fill="rgb(229,180,14)"/><text x="48.8359%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="48.5859%" y="677" width="0.1010%" height="15" fill="rgb(245,216,25)"/><text x="48.8359%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="48.5859%" y="661" width="0.1010%" height="15" fill="rgb(251,43,5)"/><text x="48.8359%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.10%)</title><rect x="48.5859%" y="645" width="0.1010%" height="15" fill="rgb(250,128,24)"/><text x="48.8359%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.10%)</title><rect x="48.5859%" y="629" width="0.1010%" height="15" fill="rgb(217,117,27)"/><text x="48.8359%" y="639.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="48.6869%" y="565" width="0.2020%" height="15" fill="rgb(245,147,4)"/><text x="48.9369%" y="575.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="48.6869%" y="549" width="0.2020%" height="15" fill="rgb(242,201,35)"/><text x="48.9369%" y="559.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="48.7879%" y="533" width="0.1010%" height="15" fill="rgb(218,181,1)"/><text x="49.0379%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.51%)</title><rect x="48.5859%" y="757" width="0.5051%" height="15" fill="rgb(222,6,29)"/><text x="48.8359%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="48.5859%" y="741" width="0.5051%" height="15" fill="rgb(208,186,3)"/><text x="48.8359%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="48.5859%" y="725" width="0.5051%" height="15" fill="rgb(216,36,26)"/><text x="48.8359%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="48.5859%" y="709" width="0.5051%" height="15" fill="rgb(248,201,23)"/><text x="48.8359%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="48.6869%" y="693" width="0.4040%" height="15" fill="rgb(251,170,31)"/><text x="48.9369%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="48.6869%" y="677" width="0.4040%" height="15" fill="rgb(207,110,25)"/><text x="48.9369%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="48.6869%" y="661" width="0.4040%" height="15" fill="rgb(250,54,15)"/><text x="48.9369%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="48.6869%" y="645" width="0.4040%" height="15" fill="rgb(227,68,33)"/><text x="48.9369%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="48.6869%" y="629" width="0.4040%" height="15" fill="rgb(238,34,41)"/><text x="48.9369%" y="639.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="48.6869%" y="613" width="0.4040%" height="15" fill="rgb(220,11,15)"/><text x="48.9369%" y="623.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (4 samples, 0.40%)</title><rect x="48.6869%" y="597" width="0.4040%" height="15" fill="rgb(246,111,35)"/><text x="48.9369%" y="607.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (4 samples, 0.40%)</title><rect x="48.6869%" y="581" width="0.4040%" height="15" fill="rgb(209,88,53)"/><text x="48.9369%" y="591.50"></text></g><g><title>polar::formatting::to_polar::has_lower_pred (2 samples, 0.20%)</title><rect x="48.8889%" y="565" width="0.2020%" height="15" fill="rgb(231,185,47)"/><text x="49.1389%" y="575.50"></text></g><g><title>__GI___libc_free (2 samples, 0.20%)</title><rect x="49.0909%" y="613" width="0.2020%" height="15" fill="rgb(233,154,1)"/><text x="49.3409%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.40%)</title><rect x="49.0909%" y="741" width="0.4040%" height="15" fill="rgb(225,15,46)"/><text x="49.3409%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="49.0909%" y="725" width="0.4040%" height="15" fill="rgb(211,135,41)"/><text x="49.3409%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="49.0909%" y="709" width="0.4040%" height="15" fill="rgb(208,54,0)"/><text x="49.3409%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="49.0909%" y="693" width="0.4040%" height="15" fill="rgb(244,136,14)"/><text x="49.3409%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="49.0909%" y="677" width="0.4040%" height="15" fill="rgb(241,56,14)"/><text x="49.3409%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.40%)</title><rect x="49.0909%" y="661" width="0.4040%" height="15" fill="rgb(205,80,24)"/><text x="49.3409%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (4 samples, 0.40%)</title><rect x="49.0909%" y="645" width="0.4040%" height="15" fill="rgb(220,57,4)"/><text x="49.3409%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.40%)</title><rect x="49.0909%" y="629" width="0.4040%" height="15" fill="rgb(226,193,50)"/><text x="49.3409%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="49.2929%" y="613" width="0.2020%" height="15" fill="rgb(231,168,22)"/><text x="49.5429%" y="623.50"></text></g><g><title>polar::formatting::to_polar::format_args (17 samples, 1.72%)</title><rect x="47.8788%" y="773" width="1.7172%" height="15" fill="rgb(254,215,14)"/><text x="48.1288%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.51%)</title><rect x="49.0909%" y="757" width="0.5051%" height="15" fill="rgb(211,115,16)"/><text x="49.3409%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="49.4949%" y="741" width="0.1010%" height="15" fill="rgb(236,210,16)"/><text x="49.7449%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="49.4949%" y="725" width="0.1010%" height="15" fill="rgb(221,94,12)"/><text x="49.7449%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="49.4949%" y="709" width="0.1010%" height="15" fill="rgb(235,218,49)"/><text x="49.7449%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="49.4949%" y="693" width="0.1010%" height="15" fill="rgb(217,114,14)"/><text x="49.7449%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="49.4949%" y="677" width="0.1010%" height="15" fill="rgb(216,145,22)"/><text x="49.7449%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.10%)</title><rect x="49.5960%" y="725" width="0.1010%" height="15" fill="rgb(217,112,39)"/><text x="49.8460%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="49.8990%" y="613" width="0.2020%" height="15" fill="rgb(225,85,32)"/><text x="50.1490%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="50.0000%" y="597" width="0.1010%" height="15" fill="rgb(245,209,47)"/><text x="50.2500%" y="607.50"></text></g><g><title>alloc::str::join_generic_copy (5 samples, 0.51%)</title><rect x="49.6970%" y="725" width="0.5051%" height="15" fill="rgb(218,220,15)"/><text x="49.9470%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="49.8990%" y="709" width="0.3030%" height="15" fill="rgb(222,202,31)"/><text x="50.1490%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="49.8990%" y="693" width="0.3030%" height="15" fill="rgb(243,203,4)"/><text x="50.1490%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.30%)</title><rect x="49.8990%" y="677" width="0.3030%" height="15" fill="rgb(237,92,17)"/><text x="50.1490%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.30%)</title><rect x="49.8990%" y="661" width="0.3030%" height="15" fill="rgb(231,119,7)"/><text x="50.1490%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.30%)</title><rect x="49.8990%" y="645" width="0.3030%" height="15" fill="rgb(237,82,41)"/><text x="50.1490%" y="655.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="49.8990%" y="629" width="0.3030%" height="15" fill="rgb(226,81,48)"/><text x="50.1490%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="50.1010%" y="613" width="0.1010%" height="15" fill="rgb(234,70,51)"/><text x="50.3510%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="50.1010%" y="597" width="0.1010%" height="15" fill="rgb(251,86,4)"/><text x="50.3510%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (8 samples, 0.81%)</title><rect x="49.5960%" y="757" width="0.8081%" height="15" fill="rgb(244,144,28)"/><text x="49.8460%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (8 samples, 0.81%)</title><rect x="49.5960%" y="741" width="0.8081%" height="15" fill="rgb(232,161,39)"/><text x="49.8460%" y="751.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (2 samples, 0.20%)</title><rect x="50.2020%" y="725" width="0.2020%" height="15" fill="rgb(247,34,51)"/><text x="50.4520%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="50.4040%" y="693" width="0.2020%" height="15" fill="rgb(225,132,2)"/><text x="50.6540%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="50.4040%" y="677" width="0.2020%" height="15" fill="rgb(209,159,44)"/><text x="50.6540%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="50.4040%" y="661" width="0.2020%" height="15" fill="rgb(251,214,1)"/><text x="50.6540%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="50.4040%" y="645" width="0.2020%" height="15" fill="rgb(247,84,47)"/><text x="50.6540%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="50.4040%" y="629" width="0.2020%" height="15" fill="rgb(240,111,43)"/><text x="50.6540%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="50.5051%" y="613" width="0.1010%" height="15" fill="rgb(215,214,35)"/><text x="50.7551%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.91%)</title><rect x="50.4040%" y="757" width="0.9091%" height="15" fill="rgb(248,207,23)"/><text x="50.6540%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.91%)</title><rect x="50.4040%" y="741" width="0.9091%" height="15" fill="rgb(214,186,4)"/><text x="50.6540%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.91%)</title><rect x="50.4040%" y="725" width="0.9091%" height="15" fill="rgb(220,133,22)"/><text x="50.6540%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.91%)</title><rect x="50.4040%" y="709" width="0.9091%" height="15" fill="rgb(239,134,19)"/><text x="50.6540%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.71%)</title><rect x="50.6061%" y="693" width="0.7071%" height="15" fill="rgb(250,140,9)"/><text x="50.8561%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.71%)</title><rect x="50.6061%" y="677" width="0.7071%" height="15" fill="rgb(225,59,14)"/><text x="50.8561%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.71%)</title><rect x="50.6061%" y="661" width="0.7071%" height="15" fill="rgb(214,152,51)"/><text x="50.8561%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.71%)</title><rect x="50.6061%" y="645" width="0.7071%" height="15" fill="rgb(251,227,43)"/><text x="50.8561%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (7 samples, 0.71%)</title><rect x="50.6061%" y="629" width="0.7071%" height="15" fill="rgb(241,96,17)"/><text x="50.8561%" y="639.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (7 samples, 0.71%)</title><rect x="50.6061%" y="613" width="0.7071%" height="15" fill="rgb(234,198,43)"/><text x="50.8561%" y="623.50"></text></g><g><title>polar::formatting::to_polar::format_params::_{{closure}} (7 samples, 0.71%)</title><rect x="50.6061%" y="597" width="0.7071%" height="15" fill="rgb(220,108,29)"/><text x="50.8561%" y="607.50"></text></g><g><title>&lt;polar::types::Parameter as polar::formatting::to_polar::ToPolarString&gt;::to_polar (7 samples, 0.71%)</title><rect x="50.6061%" y="581" width="0.7071%" height="15" fill="rgb(226,163,33)"/><text x="50.8561%" y="591.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (6 samples, 0.61%)</title><rect x="50.7071%" y="565" width="0.6061%" height="15" fill="rgb(205,194,45)"/><text x="50.9571%" y="575.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (6 samples, 0.61%)</title><rect x="50.7071%" y="549" width="0.6061%" height="15" fill="rgb(206,143,44)"/><text x="50.9571%" y="559.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.20%)</title><rect x="51.1111%" y="533" width="0.2020%" height="15" fill="rgb(236,136,36)"/><text x="51.3611%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="51.1111%" y="517" width="0.2020%" height="15" fill="rgb(249,172,42)"/><text x="51.3611%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="51.2121%" y="501" width="0.1010%" height="15" fill="rgb(216,139,23)"/><text x="51.4621%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="51.3131%" y="741" width="0.1010%" height="15" fill="rgb(207,166,20)"/><text x="51.5631%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="51.3131%" y="725" width="0.1010%" height="15" fill="rgb(210,209,22)"/><text x="51.5631%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="51.3131%" y="709" width="0.1010%" height="15" fill="rgb(232,118,20)"/><text x="51.5631%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="51.3131%" y="693" width="0.1010%" height="15" fill="rgb(238,113,42)"/><text x="51.5631%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="51.3131%" y="677" width="0.1010%" height="15" fill="rgb(231,42,5)"/><text x="51.5631%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="51.3131%" y="661" width="0.1010%" height="15" fill="rgb(243,166,24)"/><text x="51.5631%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="51.3131%" y="645" width="0.1010%" height="15" fill="rgb(237,226,12)"/><text x="51.5631%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="51.3131%" y="629" width="0.1010%" height="15" fill="rgb(229,133,24)"/><text x="51.5631%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="51.3131%" y="613" width="0.1010%" height="15" fill="rgb(238,33,43)"/><text x="51.5631%" y="623.50"></text></g><g><title>__GI___libc_free (3 samples, 0.30%)</title><rect x="51.4141%" y="677" width="0.3030%" height="15" fill="rgb(227,59,38)"/><text x="51.6641%" y="687.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (70 samples, 7.07%)</title><rect x="44.8485%" y="789" width="7.0707%" height="15" fill="rgb(230,97,0)"/><text x="45.0985%" y="799.50">&lt;polar::t..</text></g><g><title>polar::formatting::to_polar::format_params (23 samples, 2.32%)</title><rect x="49.5960%" y="773" width="2.3232%" height="15" fill="rgb(250,173,50)"/><text x="49.8460%" y="783.50">p..</text></g><g><title>core::ptr::drop_in_place (6 samples, 0.61%)</title><rect x="51.3131%" y="757" width="0.6061%" height="15" fill="rgb(240,15,50)"/><text x="51.5631%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.51%)</title><rect x="51.4141%" y="741" width="0.5051%" height="15" fill="rgb(221,93,22)"/><text x="51.6641%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.51%)</title><rect x="51.4141%" y="725" width="0.5051%" height="15" fill="rgb(245,180,53)"/><text x="51.6641%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (5 samples, 0.51%)</title><rect x="51.4141%" y="709" width="0.5051%" height="15" fill="rgb(231,88,51)"/><text x="51.6641%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.51%)</title><rect x="51.4141%" y="693" width="0.5051%" height="15" fill="rgb(240,58,21)"/><text x="51.6641%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="51.7172%" y="677" width="0.2020%" height="15" fill="rgb(237,21,10)"/><text x="51.9672%" y="687.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (101 samples, 10.20%)</title><rect x="41.8182%" y="1029" width="10.2020%" height="15" fill="rgb(218,43,11)"/><text x="42.0682%" y="1039.50">&lt;T as alloc::st..</text></g><g><title>core::fmt::Write::write_fmt (101 samples, 10.20%)</title><rect x="41.8182%" y="1013" width="10.2020%" height="15" fill="rgb(218,221,29)"/><text x="42.0682%" y="1023.50">core::fmt::Writ..</text></g><g><title>core::fmt::write (101 samples, 10.20%)</title><rect x="41.8182%" y="997" width="10.2020%" height="15" fill="rgb(214,118,42)"/><text x="42.0682%" y="1007.50">core::fmt::write</text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (101 samples, 10.20%)</title><rect x="41.8182%" y="981" width="10.2020%" height="15" fill="rgb(251,200,26)"/><text x="42.0682%" y="991.50">polar::formatti..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (71 samples, 7.17%)</title><rect x="44.8485%" y="965" width="7.1717%" height="15" fill="rgb(237,101,39)"/><text x="45.0985%" y="975.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (71 samples, 7.17%)</title><rect x="44.8485%" y="949" width="7.1717%" height="15" fill="rgb(251,117,11)"/><text x="45.0985%" y="959.50">&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (71 samples, 7.17%)</title><rect x="44.8485%" y="933" width="7.1717%" height="15" fill="rgb(216,223,23)"/><text x="45.0985%" y="943.50">&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (71 samples, 7.17%)</title><rect x="44.8485%" y="917" width="7.1717%" height="15" fill="rgb(251,54,12)"/><text x="45.0985%" y="927.50">&lt;alloc::ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (71 samples, 7.17%)</title><rect x="44.8485%" y="901" width="7.1717%" height="15" fill="rgb(254,176,54)"/><text x="45.0985%" y="911.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 7.17%)</title><rect x="44.8485%" y="885" width="7.1717%" height="15" fill="rgb(210,32,8)"/><text x="45.0985%" y="895.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (71 samples, 7.17%)</title><rect x="44.8485%" y="869" width="7.1717%" height="15" fill="rgb(235,52,38)"/><text x="45.0985%" y="879.50">core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (71 samples, 7.17%)</title><rect x="44.8485%" y="853" width="7.1717%" height="15" fill="rgb(231,4,44)"/><text x="45.0985%" y="863.50">core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (71 samples, 7.17%)</title><rect x="44.8485%" y="837" width="7.1717%" height="15" fill="rgb(249,2,32)"/><text x="45.0985%" y="847.50">core::iter..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (71 samples, 7.17%)</title><rect x="44.8485%" y="821" width="7.1717%" height="15" fill="rgb(224,65,26)"/><text x="45.0985%" y="831.50">core::iter..</text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (71 samples, 7.17%)</title><rect x="44.8485%" y="805" width="7.1717%" height="15" fill="rgb(250,73,40)"/><text x="45.0985%" y="815.50">polar::for..</text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="51.9192%" y="789" width="0.1010%" height="15" fill="rgb(253,177,16)"/><text x="52.1692%" y="799.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="51.9192%" y="773" width="0.1010%" height="15" fill="rgb(217,32,34)"/><text x="52.1692%" y="783.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="51.9192%" y="757" width="0.1010%" height="15" fill="rgb(212,7,10)"/><text x="52.1692%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="51.9192%" y="741" width="0.1010%" height="15" fill="rgb(245,89,8)"/><text x="52.1692%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="51.9192%" y="725" width="0.1010%" height="15" fill="rgb(237,16,53)"/><text x="52.1692%" y="735.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.10%)</title><rect x="51.9192%" y="709" width="0.1010%" height="15" fill="rgb(250,204,30)"/><text x="52.1692%" y="719.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="51.9192%" y="693" width="0.1010%" height="15" fill="rgb(208,77,27)"/><text x="52.1692%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="51.9192%" y="677" width="0.1010%" height="15" fill="rgb(250,204,28)"/><text x="52.1692%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="51.9192%" y="661" width="0.1010%" height="15" fill="rgb(244,63,21)"/><text x="52.1692%" y="671.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="51.9192%" y="645" width="0.1010%" height="15" fill="rgb(236,85,44)"/><text x="52.1692%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="51.9192%" y="629" width="0.1010%" height="15" fill="rgb(215,98,4)"/><text x="52.1692%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="51.9192%" y="613" width="0.1010%" height="15" fill="rgb(235,38,11)"/><text x="52.1692%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="52.0202%" y="565" width="0.2020%" height="15" fill="rgb(254,186,25)"/><text x="52.2702%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="52.0202%" y="549" width="0.2020%" height="15" fill="rgb(225,55,31)"/><text x="52.2702%" y="559.50"></text></g><g><title>core::ptr::write (2 samples, 0.20%)</title><rect x="52.0202%" y="533" width="0.2020%" height="15" fill="rgb(211,15,21)"/><text x="52.2702%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 1.01%)</title><rect x="52.0202%" y="773" width="1.0101%" height="15" fill="rgb(215,187,41)"/><text x="52.2702%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 1.01%)</title><rect x="52.0202%" y="757" width="1.0101%" height="15" fill="rgb(248,69,32)"/><text x="52.2702%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 1.01%)</title><rect x="52.0202%" y="741" width="1.0101%" height="15" fill="rgb(252,102,52)"/><text x="52.2702%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 1.01%)</title><rect x="52.0202%" y="725" width="1.0101%" height="15" fill="rgb(253,140,32)"/><text x="52.2702%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (10 samples, 1.01%)</title><rect x="52.0202%" y="709" width="1.0101%" height="15" fill="rgb(216,56,42)"/><text x="52.2702%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 1.01%)</title><rect x="52.0202%" y="693" width="1.0101%" height="15" fill="rgb(216,184,14)"/><text x="52.2702%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 1.01%)</title><rect x="52.0202%" y="677" width="1.0101%" height="15" fill="rgb(237,187,27)"/><text x="52.2702%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.01%)</title><rect x="52.0202%" y="661" width="1.0101%" height="15" fill="rgb(219,65,3)"/><text x="52.2702%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.01%)</title><rect x="52.0202%" y="645" width="1.0101%" height="15" fill="rgb(245,83,25)"/><text x="52.2702%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 1.01%)</title><rect x="52.0202%" y="629" width="1.0101%" height="15" fill="rgb(214,205,45)"/><text x="52.2702%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 1.01%)</title><rect x="52.0202%" y="613" width="1.0101%" height="15" fill="rgb(241,20,18)"/><text x="52.2702%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (10 samples, 1.01%)</title><rect x="52.0202%" y="597" width="1.0101%" height="15" fill="rgb(232,163,23)"/><text x="52.2702%" y="607.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (10 samples, 1.01%)</title><rect x="52.0202%" y="581" width="1.0101%" height="15" fill="rgb(214,5,46)"/><text x="52.2702%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.81%)</title><rect x="52.2222%" y="565" width="0.8081%" height="15" fill="rgb(229,78,17)"/><text x="52.4722%" y="575.50"></text></g><g><title>&lt;polar::types::Parameter as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="52.2222%" y="549" width="0.8081%" height="15" fill="rgb(248,89,10)"/><text x="52.4722%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="52.4242%" y="533" width="0.6061%" height="15" fill="rgb(248,54,15)"/><text x="52.6742%" y="543.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.9293%" y="517" width="0.1010%" height="15" fill="rgb(223,116,6)"/><text x="53.1793%" y="527.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="52.9293%" y="501" width="0.1010%" height="15" fill="rgb(205,125,38)"/><text x="53.1793%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="53.6364%" y="357" width="0.1010%" height="15" fill="rgb(251,78,38)"/><text x="53.8864%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="53.6364%" y="341" width="0.1010%" height="15" fill="rgb(253,78,28)"/><text x="53.8864%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.61%)</title><rect x="53.6364%" y="405" width="0.6061%" height="15" fill="rgb(209,120,3)"/><text x="53.8864%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (6 samples, 0.61%)</title><rect x="53.6364%" y="389" width="0.6061%" height="15" fill="rgb(238,229,9)"/><text x="53.8864%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.61%)</title><rect x="53.6364%" y="373" width="0.6061%" height="15" fill="rgb(253,159,18)"/><text x="53.8864%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.51%)</title><rect x="53.7374%" y="357" width="0.5051%" height="15" fill="rgb(244,42,34)"/><text x="53.9874%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="53.7374%" y="341" width="0.5051%" height="15" fill="rgb(224,8,7)"/><text x="53.9874%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="53.7374%" y="325" width="0.5051%" height="15" fill="rgb(210,201,45)"/><text x="53.9874%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.51%)</title><rect x="53.7374%" y="309" width="0.5051%" height="15" fill="rgb(252,185,21)"/><text x="53.9874%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="53.8384%" y="293" width="0.4040%" height="15" fill="rgb(223,131,1)"/><text x="54.0884%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="53.8384%" y="277" width="0.4040%" height="15" fill="rgb(245,141,16)"/><text x="54.0884%" y="287.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="53.8384%" y="261" width="0.4040%" height="15" fill="rgb(229,55,45)"/><text x="54.0884%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.40%)</title><rect x="53.8384%" y="245" width="0.4040%" height="15" fill="rgb(208,92,15)"/><text x="54.0884%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (4 samples, 0.40%)</title><rect x="53.8384%" y="229" width="0.4040%" height="15" fill="rgb(234,185,47)"/><text x="54.0884%" y="239.50"></text></g><g><title>core::ptr::write (4 samples, 0.40%)</title><rect x="53.8384%" y="213" width="0.4040%" height="15" fill="rgb(253,104,50)"/><text x="54.0884%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.41%)</title><rect x="53.5354%" y="453" width="1.4141%" height="15" fill="rgb(205,70,7)"/><text x="53.7854%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.41%)</title><rect x="53.5354%" y="437" width="1.4141%" height="15" fill="rgb(240,178,43)"/><text x="53.7854%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.41%)</title><rect x="53.5354%" y="421" width="1.4141%" height="15" fill="rgb(214,112,2)"/><text x="53.7854%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="54.2424%" y="405" width="0.7071%" height="15" fill="rgb(206,46,17)"/><text x="54.4924%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="54.2424%" y="389" width="0.7071%" height="15" fill="rgb(225,220,16)"/><text x="54.4924%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.71%)</title><rect x="54.2424%" y="373" width="0.7071%" height="15" fill="rgb(238,65,40)"/><text x="54.4924%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.71%)</title><rect x="54.2424%" y="357" width="0.7071%" height="15" fill="rgb(230,151,21)"/><text x="54.4924%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="54.2424%" y="341" width="0.7071%" height="15" fill="rgb(218,58,49)"/><text x="54.4924%" y="351.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.71%)</title><rect x="54.2424%" y="325" width="0.7071%" height="15" fill="rgb(219,179,14)"/><text x="54.4924%" y="335.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.71%)</title><rect x="54.2424%" y="309" width="0.7071%" height="15" fill="rgb(223,72,1)"/><text x="54.4924%" y="319.50"></text></g><g><title>_int_malloc (5 samples, 0.51%)</title><rect x="54.4444%" y="293" width="0.5051%" height="15" fill="rgb(238,126,10)"/><text x="54.6944%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="54.9495%" y="373" width="0.2020%" height="15" fill="rgb(224,206,38)"/><text x="55.1995%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="54.9495%" y="357" width="0.2020%" height="15" fill="rgb(212,201,54)"/><text x="55.1995%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.20%)</title><rect x="54.9495%" y="341" width="0.2020%" height="15" fill="rgb(218,154,48)"/><text x="55.1995%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.20%)</title><rect x="54.9495%" y="325" width="0.2020%" height="15" fill="rgb(232,93,24)"/><text x="55.1995%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="55.0505%" y="309" width="0.1010%" height="15" fill="rgb(245,30,21)"/><text x="55.3005%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (22 samples, 2.22%)</title><rect x="53.0303%" y="677" width="2.2222%" height="15" fill="rgb(242,148,29)"/><text x="53.2803%" y="687.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (22 samples, 2.22%)</title><rect x="53.0303%" y="661" width="2.2222%" height="15" fill="rgb(244,153,54)"/><text x="53.2803%" y="671.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 2.22%)</title><rect x="53.0303%" y="645" width="2.2222%" height="15" fill="rgb(252,87,22)"/><text x="53.2803%" y="655.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22 samples, 2.22%)</title><rect x="53.0303%" y="629" width="2.2222%" height="15" fill="rgb(210,51,29)"/><text x="53.2803%" y="639.50">c..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 2.22%)</title><rect x="53.0303%" y="613" width="2.2222%" height="15" fill="rgb(242,136,47)"/><text x="53.2803%" y="623.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 2.22%)</title><rect x="53.0303%" y="597" width="2.2222%" height="15" fill="rgb(238,68,4)"/><text x="53.2803%" y="607.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (22 samples, 2.22%)</title><rect x="53.0303%" y="581" width="2.2222%" height="15" fill="rgb(242,161,30)"/><text x="53.2803%" y="591.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 2.22%)</title><rect x="53.0303%" y="565" width="2.2222%" height="15" fill="rgb(218,58,44)"/><text x="53.2803%" y="575.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (22 samples, 2.22%)</title><rect x="53.0303%" y="549" width="2.2222%" height="15" fill="rgb(252,125,32)"/><text x="53.2803%" y="559.50">c..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (22 samples, 2.22%)</title><rect x="53.0303%" y="533" width="2.2222%" height="15" fill="rgb(219,178,0)"/><text x="53.2803%" y="543.50">c..</text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 2.22%)</title><rect x="53.0303%" y="517" width="2.2222%" height="15" fill="rgb(213,152,7)"/><text x="53.2803%" y="527.50">c..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (22 samples, 2.22%)</title><rect x="53.0303%" y="501" width="2.2222%" height="15" fill="rgb(249,109,34)"/><text x="53.2803%" y="511.50">&lt;..</text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (19 samples, 1.92%)</title><rect x="53.3333%" y="485" width="1.9192%" height="15" fill="rgb(232,96,21)"/><text x="53.5833%" y="495.50">&lt;..</text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (17 samples, 1.72%)</title><rect x="53.5354%" y="469" width="1.7172%" height="15" fill="rgb(228,27,39)"/><text x="53.7854%" y="479.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="54.9495%" y="453" width="0.3030%" height="15" fill="rgb(211,182,52)"/><text x="55.1995%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="54.9495%" y="437" width="0.3030%" height="15" fill="rgb(234,178,38)"/><text x="55.1995%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="54.9495%" y="421" width="0.3030%" height="15" fill="rgb(221,111,3)"/><text x="55.1995%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="54.9495%" y="405" width="0.3030%" height="15" fill="rgb(228,175,21)"/><text x="55.1995%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="54.9495%" y="389" width="0.3030%" height="15" fill="rgb(228,174,43)"/><text x="55.1995%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="55.1515%" y="373" width="0.1010%" height="15" fill="rgb(211,191,0)"/><text x="55.4015%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="55.1515%" y="357" width="0.1010%" height="15" fill="rgb(253,117,3)"/><text x="55.4015%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="55.1515%" y="341" width="0.1010%" height="15" fill="rgb(241,127,19)"/><text x="55.4015%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="55.1515%" y="325" width="0.1010%" height="15" fill="rgb(218,103,12)"/><text x="55.4015%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="55.1515%" y="309" width="0.1010%" height="15" fill="rgb(236,214,43)"/><text x="55.4015%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="55.1515%" y="293" width="0.1010%" height="15" fill="rgb(244,144,19)"/><text x="55.4015%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="55.1515%" y="277" width="0.1010%" height="15" fill="rgb(246,188,10)"/><text x="55.4015%" y="287.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (135 samples, 13.64%)</title><rect x="41.8182%" y="1493" width="13.6364%" height="15" fill="rgb(212,193,33)"/><text x="42.0682%" y="1503.50">&lt;criterion::routine::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (135 samples, 13.64%)</title><rect x="41.8182%" y="1477" width="13.6364%" height="15" fill="rgb(241,51,29)"/><text x="42.0682%" y="1487.50">core::iter::traits::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (135 samples, 13.64%)</title><rect x="41.8182%" y="1461" width="13.6364%" height="15" fill="rgb(211,58,19)"/><text x="42.0682%" y="1471.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (135 samples, 13.64%)</title><rect x="41.8182%" y="1445" width="13.6364%" height="15" fill="rgb(229,111,26)"/><text x="42.0682%" y="1455.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (135 samples, 13.64%)</title><rect x="41.8182%" y="1429" width="13.6364%" height="15" fill="rgb(213,115,40)"/><text x="42.0682%" y="1439.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (135 samples, 13.64%)</title><rect x="41.8182%" y="1413" width="13.6364%" height="15" fill="rgb(209,56,44)"/><text x="42.0682%" y="1423.50">core::iter::traits::i..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 13.64%)</title><rect x="41.8182%" y="1397" width="13.6364%" height="15" fill="rgb(230,108,32)"/><text x="42.0682%" y="1407.50">&lt;core::iter::adapters..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (135 samples, 13.64%)</title><rect x="41.8182%" y="1381" width="13.6364%" height="15" fill="rgb(216,165,31)"/><text x="42.0682%" y="1391.50">core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (135 samples, 13.64%)</title><rect x="41.8182%" y="1365" width="13.6364%" height="15" fill="rgb(218,122,21)"/><text x="42.0682%" y="1375.50">core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1349" width="13.6364%" height="15" fill="rgb(223,224,47)"/><text x="42.0682%" y="1359.50">core::iter::traits::i..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1333" width="13.6364%" height="15" fill="rgb(238,102,44)"/><text x="42.0682%" y="1343.50">core::iter::adapters:..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1317" width="13.6364%" height="15" fill="rgb(236,46,40)"/><text x="42.0682%" y="1327.50">&lt;criterion::routine::..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1301" width="13.6364%" height="15" fill="rgb(247,202,50)"/><text x="42.0682%" y="1311.50">criterion::benchmark_..</text></g><g><title>bench::too_many_predicates::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1285" width="13.6364%" height="15" fill="rgb(209,99,20)"/><text x="42.0682%" y="1295.50">bench::too_many_predi..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (135 samples, 13.64%)</title><rect x="41.8182%" y="1269" width="13.6364%" height="15" fill="rgb(252,27,34)"/><text x="42.0682%" y="1279.50">criterion::Bencher&lt;M&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (135 samples, 13.64%)</title><rect x="41.8182%" y="1253" width="13.6364%" height="15" fill="rgb(215,206,23)"/><text x="42.0682%" y="1263.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (135 samples, 13.64%)</title><rect x="41.8182%" y="1237" width="13.6364%" height="15" fill="rgb(212,135,36)"/><text x="42.0682%" y="1247.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (135 samples, 13.64%)</title><rect x="41.8182%" y="1221" width="13.6364%" height="15" fill="rgb(240,189,1)"/><text x="42.0682%" y="1231.50">core::iter::traits::i..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 13.64%)</title><rect x="41.8182%" y="1205" width="13.6364%" height="15" fill="rgb(242,56,20)"/><text x="42.0682%" y="1215.50">&lt;core::iter::adapters..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (135 samples, 13.64%)</title><rect x="41.8182%" y="1189" width="13.6364%" height="15" fill="rgb(247,132,33)"/><text x="42.0682%" y="1199.50">core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (135 samples, 13.64%)</title><rect x="41.8182%" y="1173" width="13.6364%" height="15" fill="rgb(208,149,11)"/><text x="42.0682%" y="1183.50">core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1157" width="13.6364%" height="15" fill="rgb(211,33,11)"/><text x="42.0682%" y="1167.50">core::iter::traits::i..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1141" width="13.6364%" height="15" fill="rgb(221,29,38)"/><text x="42.0682%" y="1151.50">core::iter::adapters:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (135 samples, 13.64%)</title><rect x="41.8182%" y="1125" width="13.6364%" height="15" fill="rgb(206,182,49)"/><text x="42.0682%" y="1135.50">core::ops::function::..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (135 samples, 13.64%)</title><rect x="41.8182%" y="1109" width="13.6364%" height="15" fill="rgb(216,140,1)"/><text x="42.0682%" y="1119.50">bench::simple_queries..</text></g><g><title>bench::Runner::run (135 samples, 13.64%)</title><rect x="41.8182%" y="1093" width="13.6364%" height="15" fill="rgb(232,57,40)"/><text x="42.0682%" y="1103.50">bench::Runner::run</text></g><g><title>bench::Runner::next (135 samples, 13.64%)</title><rect x="41.8182%" y="1077" width="13.6364%" height="15" fill="rgb(224,186,18)"/><text x="42.0682%" y="1087.50">bench::Runner::next</text></g><g><title>polar::polar::Polar::query (135 samples, 13.64%)</title><rect x="41.8182%" y="1061" width="13.6364%" height="15" fill="rgb(215,121,11)"/><text x="42.0682%" y="1071.50">polar::polar::Polar::..</text></g><g><title>polar::vm::PolarVirtualMachine::run (135 samples, 13.64%)</title><rect x="41.8182%" y="1045" width="13.6364%" height="15" fill="rgb(245,147,10)"/><text x="42.0682%" y="1055.50">polar::vm::PolarVirtu..</text></g><g><title>&lt;polar::vm::Goal as core::clone::Clone&gt;::clone (34 samples, 3.43%)</title><rect x="52.0202%" y="1029" width="3.4343%" height="15" fill="rgb(238,153,13)"/><text x="52.2702%" y="1039.50">&lt;po..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 3.43%)</title><rect x="52.0202%" y="1013" width="3.4343%" height="15" fill="rgb(233,108,0)"/><text x="52.2702%" y="1023.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (34 samples, 3.43%)</title><rect x="52.0202%" y="997" width="3.4343%" height="15" fill="rgb(212,157,17)"/><text x="52.2702%" y="1007.50">all..</text></g><g><title>alloc::slice::hack::to_vec (34 samples, 3.43%)</title><rect x="52.0202%" y="981" width="3.4343%" height="15" fill="rgb(225,213,38)"/><text x="52.2702%" y="991.50">all..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (34 samples, 3.43%)</title><rect x="52.0202%" y="965" width="3.4343%" height="15" fill="rgb(248,16,11)"/><text x="52.2702%" y="975.50">all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (34 samples, 3.43%)</title><rect x="52.0202%" y="949" width="3.4343%" height="15" fill="rgb(241,33,4)"/><text x="52.2702%" y="959.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 3.43%)</title><rect x="52.0202%" y="933" width="3.4343%" height="15" fill="rgb(222,26,43)"/><text x="52.2702%" y="943.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (34 samples, 3.43%)</title><rect x="52.0202%" y="917" width="3.4343%" height="15" fill="rgb(243,29,36)"/><text x="52.2702%" y="927.50">cor..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 3.43%)</title><rect x="52.0202%" y="901" width="3.4343%" height="15" fill="rgb(241,9,27)"/><text x="52.2702%" y="911.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 3.43%)</title><rect x="52.0202%" y="885" width="3.4343%" height="15" fill="rgb(205,117,26)"/><text x="52.2702%" y="895.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 3.43%)</title><rect x="52.0202%" y="869" width="3.4343%" height="15" fill="rgb(209,80,39)"/><text x="52.2702%" y="879.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 3.43%)</title><rect x="52.0202%" y="853" width="3.4343%" height="15" fill="rgb(239,155,6)"/><text x="52.2702%" y="863.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (34 samples, 3.43%)</title><rect x="52.0202%" y="837" width="3.4343%" height="15" fill="rgb(212,104,12)"/><text x="52.2702%" y="847.50">cor..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (34 samples, 3.43%)</title><rect x="52.0202%" y="821" width="3.4343%" height="15" fill="rgb(234,204,3)"/><text x="52.2702%" y="831.50">cor..</text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 3.43%)</title><rect x="52.0202%" y="805" width="3.4343%" height="15" fill="rgb(251,218,7)"/><text x="52.2702%" y="815.50">cor..</text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (34 samples, 3.43%)</title><rect x="52.0202%" y="789" width="3.4343%" height="15" fill="rgb(221,81,32)"/><text x="52.2702%" y="799.50">&lt;po..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (24 samples, 2.42%)</title><rect x="53.0303%" y="773" width="2.4242%" height="15" fill="rgb(214,152,26)"/><text x="53.2803%" y="783.50">&lt;p..</text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (24 samples, 2.42%)</title><rect x="53.0303%" y="757" width="2.4242%" height="15" fill="rgb(223,22,3)"/><text x="53.2803%" y="767.50">&lt;p..</text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (24 samples, 2.42%)</title><rect x="53.0303%" y="741" width="2.4242%" height="15" fill="rgb(207,174,7)"/><text x="53.2803%" y="751.50">&lt;p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 2.42%)</title><rect x="53.0303%" y="725" width="2.4242%" height="15" fill="rgb(224,19,52)"/><text x="53.2803%" y="735.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 2.42%)</title><rect x="53.0303%" y="709" width="2.4242%" height="15" fill="rgb(228,24,14)"/><text x="53.2803%" y="719.50">al..</text></g><g><title>alloc::slice::hack::to_vec (24 samples, 2.42%)</title><rect x="53.0303%" y="693" width="2.4242%" height="15" fill="rgb(230,153,43)"/><text x="53.2803%" y="703.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="55.2525%" y="677" width="0.2020%" height="15" fill="rgb(231,106,12)"/><text x="55.5025%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="55.2525%" y="661" width="0.2020%" height="15" fill="rgb(215,92,2)"/><text x="55.5025%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="55.2525%" y="645" width="0.2020%" height="15" fill="rgb(249,143,25)"/><text x="55.5025%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="55.2525%" y="629" width="0.2020%" height="15" fill="rgb(252,7,35)"/><text x="55.5025%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="55.2525%" y="613" width="0.2020%" height="15" fill="rgb(216,69,40)"/><text x="55.5025%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="55.2525%" y="597" width="0.2020%" height="15" fill="rgb(240,36,33)"/><text x="55.5025%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="55.2525%" y="581" width="0.2020%" height="15" fill="rgb(231,128,14)"/><text x="55.5025%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="55.2525%" y="565" width="0.2020%" height="15" fill="rgb(245,143,14)"/><text x="55.5025%" y="575.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.20%)</title><rect x="55.4545%" y="1125" width="0.2020%" height="15" fill="rgb(222,130,28)"/><text x="55.7045%" y="1135.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="55.4545%" y="1109" width="0.2020%" height="15" fill="rgb(212,10,48)"/><text x="55.7045%" y="1119.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="55.4545%" y="1093" width="0.2020%" height="15" fill="rgb(254,118,45)"/><text x="55.7045%" y="1103.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="55.4545%" y="1077" width="0.2020%" height="15" fill="rgb(228,6,45)"/><text x="55.7045%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="55.5556%" y="1061" width="0.1010%" height="15" fill="rgb(241,18,35)"/><text x="55.8056%" y="1071.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="55.5556%" y="1045" width="0.1010%" height="15" fill="rgb(227,214,53)"/><text x="55.8056%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="55.5556%" y="1029" width="0.1010%" height="15" fill="rgb(224,107,51)"/><text x="55.8056%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="55.5556%" y="1013" width="0.1010%" height="15" fill="rgb(248,60,28)"/><text x="55.8056%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="55.5556%" y="997" width="0.1010%" height="15" fill="rgb(249,101,23)"/><text x="55.8056%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="55.5556%" y="981" width="0.1010%" height="15" fill="rgb(228,51,19)"/><text x="55.8056%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="55.5556%" y="965" width="0.1010%" height="15" fill="rgb(213,20,6)"/><text x="55.8056%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="55.5556%" y="949" width="0.1010%" height="15" fill="rgb(212,124,10)"/><text x="55.8056%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="55.5556%" y="933" width="0.1010%" height="15" fill="rgb(248,3,40)"/><text x="55.8056%" y="943.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="55.5556%" y="917" width="0.1010%" height="15" fill="rgb(223,178,23)"/><text x="55.8056%" y="927.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="55.5556%" y="901" width="0.1010%" height="15" fill="rgb(240,132,45)"/><text x="55.8056%" y="911.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (3 samples, 0.30%)</title><rect x="55.4545%" y="1141" width="0.3030%" height="15" fill="rgb(245,164,36)"/><text x="55.7045%" y="1151.50"></text></g><g><title>polar::formatting::to_polar::format_args (1 samples, 0.10%)</title><rect x="55.6566%" y="1125" width="0.1010%" height="15" fill="rgb(231,188,53)"/><text x="55.9066%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="55.6566%" y="1109" width="0.1010%" height="15" fill="rgb(237,198,39)"/><text x="55.9066%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="55.6566%" y="1093" width="0.1010%" height="15" fill="rgb(223,120,35)"/><text x="55.9066%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="55.6566%" y="1077" width="0.1010%" height="15" fill="rgb(253,107,49)"/><text x="55.9066%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="55.6566%" y="1061" width="0.1010%" height="15" fill="rgb(216,44,31)"/><text x="55.9066%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="55.6566%" y="1045" width="0.1010%" height="15" fill="rgb(253,87,21)"/><text x="55.9066%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="55.6566%" y="1029" width="0.1010%" height="15" fill="rgb(226,18,2)"/><text x="55.9066%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="55.6566%" y="1013" width="0.1010%" height="15" fill="rgb(216,8,46)"/><text x="55.9066%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="55.6566%" y="997" width="0.1010%" height="15" fill="rgb(226,140,39)"/><text x="55.9066%" y="1007.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="55.6566%" y="981" width="0.1010%" height="15" fill="rgb(221,194,54)"/><text x="55.9066%" y="991.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="55.6566%" y="965" width="0.1010%" height="15" fill="rgb(213,92,11)"/><text x="55.9066%" y="975.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="55.7576%" y="1109" width="0.1010%" height="15" fill="rgb(229,162,46)"/><text x="56.0076%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="55.7576%" y="1093" width="0.1010%" height="15" fill="rgb(214,111,36)"/><text x="56.0076%" y="1103.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="55.7576%" y="1077" width="0.1010%" height="15" fill="rgb(207,6,21)"/><text x="56.0076%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="55.7576%" y="1061" width="0.1010%" height="15" fill="rgb(213,127,38)"/><text x="56.0076%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="55.7576%" y="1045" width="0.1010%" height="15" fill="rgb(238,118,32)"/><text x="56.0076%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="55.7576%" y="1029" width="0.1010%" height="15" fill="rgb(240,139,39)"/><text x="56.0076%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="55.7576%" y="1013" width="0.1010%" height="15" fill="rgb(235,10,37)"/><text x="56.0076%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="55.7576%" y="997" width="0.1010%" height="15" fill="rgb(249,171,38)"/><text x="56.0076%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="55.7576%" y="981" width="0.1010%" height="15" fill="rgb(242,144,32)"/><text x="56.0076%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="55.7576%" y="965" width="0.1010%" height="15" fill="rgb(217,117,21)"/><text x="56.0076%" y="975.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="55.7576%" y="949" width="0.1010%" height="15" fill="rgb(249,87,1)"/><text x="56.0076%" y="959.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="55.7576%" y="933" width="0.1010%" height="15" fill="rgb(248,196,48)"/><text x="56.0076%" y="943.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="55.7576%" y="917" width="0.1010%" height="15" fill="rgb(251,206,33)"/><text x="56.0076%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="55.7576%" y="901" width="0.1010%" height="15" fill="rgb(232,141,28)"/><text x="56.0076%" y="911.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.20%)</title><rect x="55.7576%" y="1141" width="0.2020%" height="15" fill="rgb(209,167,14)"/><text x="56.0076%" y="1151.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="55.7576%" y="1125" width="0.2020%" height="15" fill="rgb(225,11,50)"/><text x="56.0076%" y="1135.50"></text></g><g><title>&lt;polar::vm::Goal as core::fmt::Debug&gt;::fmt (1 samples, 0.10%)</title><rect x="55.8586%" y="1109" width="0.1010%" height="15" fill="rgb(209,50,20)"/><text x="56.1086%" y="1119.50"></text></g><g><title>core::fmt::Formatter::debug_tuple (1 samples, 0.10%)</title><rect x="55.8586%" y="1093" width="0.1010%" height="15" fill="rgb(212,17,46)"/><text x="56.1086%" y="1103.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (1 samples, 0.10%)</title><rect x="55.8586%" y="1077" width="0.1010%" height="15" fill="rgb(216,101,39)"/><text x="56.1086%" y="1087.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.10%)</title><rect x="55.8586%" y="1061" width="0.1010%" height="15" fill="rgb(212,228,48)"/><text x="56.1086%" y="1071.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="55.8586%" y="1045" width="0.1010%" height="15" fill="rgb(250,6,50)"/><text x="56.1086%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="55.8586%" y="1029" width="0.1010%" height="15" fill="rgb(250,160,48)"/><text x="56.1086%" y="1039.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="55.8586%" y="1013" width="0.1010%" height="15" fill="rgb(244,216,33)"/><text x="56.1086%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="55.8586%" y="997" width="0.1010%" height="15" fill="rgb(207,157,5)"/><text x="56.1086%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="55.8586%" y="981" width="0.1010%" height="15" fill="rgb(228,199,8)"/><text x="56.1086%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="55.8586%" y="965" width="0.1010%" height="15" fill="rgb(227,80,20)"/><text x="56.1086%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="55.8586%" y="949" width="0.1010%" height="15" fill="rgb(222,9,33)"/><text x="56.1086%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="55.8586%" y="933" width="0.1010%" height="15" fill="rgb(239,44,28)"/><text x="56.1086%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="55.8586%" y="917" width="0.1010%" height="15" fill="rgb(249,187,43)"/><text x="56.1086%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="55.8586%" y="901" width="0.1010%" height="15" fill="rgb(216,141,28)"/><text x="56.1086%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="55.8586%" y="885" width="0.1010%" height="15" fill="rgb(230,154,53)"/><text x="56.1086%" y="895.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="55.8586%" y="869" width="0.1010%" height="15" fill="rgb(227,82,4)"/><text x="56.1086%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="56.2626%" y="757" width="0.1010%" height="15" fill="rgb(220,107,16)"/><text x="56.5126%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="56.2626%" y="741" width="0.1010%" height="15" fill="rgb(207,187,2)"/><text x="56.5126%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="56.2626%" y="725" width="0.1010%" height="15" fill="rgb(210,162,52)"/><text x="56.5126%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="56.2626%" y="709" width="0.1010%" height="15" fill="rgb(217,216,49)"/><text x="56.5126%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.51%)</title><rect x="56.1616%" y="901" width="0.5051%" height="15" fill="rgb(218,146,49)"/><text x="56.4116%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.40%)</title><rect x="56.2626%" y="885" width="0.4040%" height="15" fill="rgb(216,55,40)"/><text x="56.5126%" y="895.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.40%)</title><rect x="56.2626%" y="869" width="0.4040%" height="15" fill="rgb(208,196,21)"/><text x="56.5126%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="56.2626%" y="853" width="0.4040%" height="15" fill="rgb(242,117,42)"/><text x="56.5126%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="56.2626%" y="837" width="0.4040%" height="15" fill="rgb(210,11,23)"/><text x="56.5126%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.40%)</title><rect x="56.2626%" y="821" width="0.4040%" height="15" fill="rgb(217,110,2)"/><text x="56.5126%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.40%)</title><rect x="56.2626%" y="805" width="0.4040%" height="15" fill="rgb(229,77,54)"/><text x="56.5126%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.40%)</title><rect x="56.2626%" y="789" width="0.4040%" height="15" fill="rgb(218,53,16)"/><text x="56.5126%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (4 samples, 0.40%)</title><rect x="56.2626%" y="773" width="0.4040%" height="15" fill="rgb(215,38,13)"/><text x="56.5126%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (3 samples, 0.30%)</title><rect x="56.3636%" y="757" width="0.3030%" height="15" fill="rgb(235,42,18)"/><text x="56.6136%" y="767.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.30%)</title><rect x="56.3636%" y="741" width="0.3030%" height="15" fill="rgb(219,66,54)"/><text x="56.6136%" y="751.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.30%)</title><rect x="56.3636%" y="725" width="0.3030%" height="15" fill="rgb(222,205,4)"/><text x="56.6136%" y="735.50"></text></g><g><title>_int_realloc (2 samples, 0.20%)</title><rect x="56.4646%" y="709" width="0.2020%" height="15" fill="rgb(227,213,46)"/><text x="56.7146%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="56.6667%" y="901" width="0.1010%" height="15" fill="rgb(250,145,42)"/><text x="56.9167%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="56.6667%" y="885" width="0.1010%" height="15" fill="rgb(219,15,2)"/><text x="56.9167%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="56.6667%" y="869" width="0.1010%" height="15" fill="rgb(231,181,52)"/><text x="56.9167%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="56.6667%" y="853" width="0.1010%" height="15" fill="rgb(235,1,42)"/><text x="56.9167%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="56.6667%" y="837" width="0.1010%" height="15" fill="rgb(249,88,27)"/><text x="56.9167%" y="847.50"></text></g><g><title>alloc::fmt::format (10 samples, 1.01%)</title><rect x="55.9596%" y="949" width="1.0101%" height="15" fill="rgb(235,145,16)"/><text x="56.2096%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 1.01%)</title><rect x="55.9596%" y="933" width="1.0101%" height="15" fill="rgb(237,114,19)"/><text x="56.2096%" y="943.50"></text></g><g><title>core::fmt::write (10 samples, 1.01%)</title><rect x="55.9596%" y="917" width="1.0101%" height="15" fill="rgb(238,51,50)"/><text x="56.2096%" y="927.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.20%)</title><rect x="56.7677%" y="901" width="0.2020%" height="15" fill="rgb(205,194,25)"/><text x="57.0177%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.10%)</title><rect x="56.9697%" y="933" width="0.1010%" height="15" fill="rgb(215,203,17)"/><text x="57.2197%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.10%)</title><rect x="56.9697%" y="917" width="0.1010%" height="15" fill="rgb(233,112,49)"/><text x="57.2197%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.10%)</title><rect x="56.9697%" y="901" width="0.1010%" height="15" fill="rgb(241,130,26)"/><text x="57.2197%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="56.9697%" y="885" width="0.1010%" height="15" fill="rgb(252,223,19)"/><text x="57.2197%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="56.9697%" y="869" width="0.1010%" height="15" fill="rgb(211,95,25)"/><text x="57.2197%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="56.9697%" y="853" width="0.1010%" height="15" fill="rgb(251,182,27)"/><text x="57.2197%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="56.9697%" y="837" width="0.1010%" height="15" fill="rgb(238,24,4)"/><text x="57.2197%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="56.9697%" y="821" width="0.1010%" height="15" fill="rgb(224,220,25)"/><text x="57.2197%" y="831.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="57.3737%" y="693" width="0.1010%" height="15" fill="rgb(239,133,26)"/><text x="57.6237%" y="703.50"></text></g><g><title>polar::formatting::to_polar::format_args (6 samples, 0.61%)</title><rect x="56.9697%" y="949" width="0.6061%" height="15" fill="rgb(211,94,48)"/><text x="57.2197%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.51%)</title><rect x="57.0707%" y="933" width="0.5051%" height="15" fill="rgb(239,87,6)"/><text x="57.3207%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="57.0707%" y="917" width="0.5051%" height="15" fill="rgb(227,62,0)"/><text x="57.3207%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="57.0707%" y="901" width="0.5051%" height="15" fill="rgb(211,226,4)"/><text x="57.3207%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="57.0707%" y="885" width="0.5051%" height="15" fill="rgb(253,38,52)"/><text x="57.3207%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.51%)</title><rect x="57.0707%" y="869" width="0.5051%" height="15" fill="rgb(229,126,40)"/><text x="57.3207%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="57.0707%" y="853" width="0.5051%" height="15" fill="rgb(229,165,44)"/><text x="57.3207%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.51%)</title><rect x="57.0707%" y="837" width="0.5051%" height="15" fill="rgb(247,95,47)"/><text x="57.3207%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.51%)</title><rect x="57.0707%" y="821" width="0.5051%" height="15" fill="rgb(216,140,30)"/><text x="57.3207%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (5 samples, 0.51%)</title><rect x="57.0707%" y="805" width="0.5051%" height="15" fill="rgb(246,214,8)"/><text x="57.3207%" y="815.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (5 samples, 0.51%)</title><rect x="57.0707%" y="789" width="0.5051%" height="15" fill="rgb(227,224,15)"/><text x="57.3207%" y="799.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (5 samples, 0.51%)</title><rect x="57.0707%" y="773" width="0.5051%" height="15" fill="rgb(233,175,4)"/><text x="57.3207%" y="783.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (5 samples, 0.51%)</title><rect x="57.0707%" y="757" width="0.5051%" height="15" fill="rgb(221,66,45)"/><text x="57.3207%" y="767.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (5 samples, 0.51%)</title><rect x="57.0707%" y="741" width="0.5051%" height="15" fill="rgb(221,178,18)"/><text x="57.3207%" y="751.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (5 samples, 0.51%)</title><rect x="57.0707%" y="725" width="0.5051%" height="15" fill="rgb(213,81,29)"/><text x="57.3207%" y="735.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (3 samples, 0.30%)</title><rect x="57.2727%" y="709" width="0.3030%" height="15" fill="rgb(220,89,49)"/><text x="57.5227%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="57.4747%" y="693" width="0.1010%" height="15" fill="rgb(227,60,33)"/><text x="57.7247%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="57.4747%" y="677" width="0.1010%" height="15" fill="rgb(205,113,12)"/><text x="57.7247%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="57.4747%" y="661" width="0.1010%" height="15" fill="rgb(211,32,1)"/><text x="57.7247%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="57.4747%" y="645" width="0.1010%" height="15" fill="rgb(246,2,12)"/><text x="57.7247%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="57.4747%" y="629" width="0.1010%" height="15" fill="rgb(243,37,27)"/><text x="57.7247%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="57.4747%" y="613" width="0.1010%" height="15" fill="rgb(248,211,31)"/><text x="57.7247%" y="623.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="57.4747%" y="597" width="0.1010%" height="15" fill="rgb(242,146,47)"/><text x="57.7247%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.10%)</title><rect x="57.5758%" y="933" width="0.1010%" height="15" fill="rgb(206,70,20)"/><text x="57.8258%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.10%)</title><rect x="57.5758%" y="917" width="0.1010%" height="15" fill="rgb(215,10,51)"/><text x="57.8258%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.10%)</title><rect x="57.5758%" y="901" width="0.1010%" height="15" fill="rgb(243,178,53)"/><text x="57.8258%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="57.5758%" y="885" width="0.1010%" height="15" fill="rgb(233,221,20)"/><text x="57.8258%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="57.5758%" y="869" width="0.1010%" height="15" fill="rgb(218,95,35)"/><text x="57.8258%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="57.5758%" y="853" width="0.1010%" height="15" fill="rgb(229,13,5)"/><text x="57.8258%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="57.5758%" y="837" width="0.1010%" height="15" fill="rgb(252,164,30)"/><text x="57.8258%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="57.5758%" y="821" width="0.1010%" height="15" fill="rgb(232,68,36)"/><text x="57.8258%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="57.5758%" y="805" width="0.1010%" height="15" fill="rgb(219,59,54)"/><text x="57.8258%" y="815.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="57.5758%" y="789" width="0.1010%" height="15" fill="rgb(250,92,33)"/><text x="57.8258%" y="799.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (24 samples, 2.42%)</title><rect x="55.4545%" y="1205" width="2.4242%" height="15" fill="rgb(229,162,54)"/><text x="55.7045%" y="1215.50">&lt;T..</text></g><g><title>core::fmt::Write::write_fmt (24 samples, 2.42%)</title><rect x="55.4545%" y="1189" width="2.4242%" height="15" fill="rgb(244,114,52)"/><text x="55.7045%" y="1199.50">co..</text></g><g><title>core::fmt::write (24 samples, 2.42%)</title><rect x="55.4545%" y="1173" width="2.4242%" height="15" fill="rgb(212,211,43)"/><text x="55.7045%" y="1183.50">co..</text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (24 samples, 2.42%)</title><rect x="55.4545%" y="1157" width="2.4242%" height="15" fill="rgb(226,147,8)"/><text x="55.7045%" y="1167.50">po..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 1.92%)</title><rect x="55.9596%" y="1141" width="1.9192%" height="15" fill="rgb(226,23,13)"/><text x="56.2096%" y="1151.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 1.92%)</title><rect x="55.9596%" y="1125" width="1.9192%" height="15" fill="rgb(240,63,4)"/><text x="56.2096%" y="1135.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (19 samples, 1.92%)</title><rect x="55.9596%" y="1109" width="1.9192%" height="15" fill="rgb(221,1,32)"/><text x="56.2096%" y="1119.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 1.92%)</title><rect x="55.9596%" y="1093" width="1.9192%" height="15" fill="rgb(242,117,10)"/><text x="56.2096%" y="1103.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 1.92%)</title><rect x="55.9596%" y="1077" width="1.9192%" height="15" fill="rgb(249,172,44)"/><text x="56.2096%" y="1087.50">c..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.92%)</title><rect x="55.9596%" y="1061" width="1.9192%" height="15" fill="rgb(244,46,45)"/><text x="56.2096%" y="1071.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (19 samples, 1.92%)</title><rect x="55.9596%" y="1045" width="1.9192%" height="15" fill="rgb(206,43,17)"/><text x="56.2096%" y="1055.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 1.92%)</title><rect x="55.9596%" y="1029" width="1.9192%" height="15" fill="rgb(239,218,39)"/><text x="56.2096%" y="1039.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (19 samples, 1.92%)</title><rect x="55.9596%" y="1013" width="1.9192%" height="15" fill="rgb(208,169,54)"/><text x="56.2096%" y="1023.50">c..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (19 samples, 1.92%)</title><rect x="55.9596%" y="997" width="1.9192%" height="15" fill="rgb(247,25,42)"/><text x="56.2096%" y="1007.50">c..</text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (19 samples, 1.92%)</title><rect x="55.9596%" y="981" width="1.9192%" height="15" fill="rgb(226,23,31)"/><text x="56.2096%" y="991.50">p..</text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (19 samples, 1.92%)</title><rect x="55.9596%" y="965" width="1.9192%" height="15" fill="rgb(247,16,28)"/><text x="56.2096%" y="975.50">&lt;..</text></g><g><title>polar::formatting::to_polar::format_params (3 samples, 0.30%)</title><rect x="57.5758%" y="949" width="0.3030%" height="15" fill="rgb(231,147,38)"/><text x="57.8258%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="57.6768%" y="933" width="0.2020%" height="15" fill="rgb(253,81,48)"/><text x="57.9268%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="57.6768%" y="917" width="0.2020%" height="15" fill="rgb(249,222,43)"/><text x="57.9268%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="57.6768%" y="901" width="0.2020%" height="15" fill="rgb(221,3,27)"/><text x="57.9268%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="57.6768%" y="885" width="0.2020%" height="15" fill="rgb(228,180,5)"/><text x="57.9268%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="57.6768%" y="869" width="0.2020%" height="15" fill="rgb(227,131,42)"/><text x="57.9268%" y="879.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="57.6768%" y="853" width="0.2020%" height="15" fill="rgb(212,3,39)"/><text x="57.9268%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="57.8788%" y="949" width="0.2020%" height="15" fill="rgb(226,45,5)"/><text x="58.1288%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="57.8788%" y="933" width="0.2020%" height="15" fill="rgb(215,167,45)"/><text x="58.1288%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="57.8788%" y="917" width="0.2020%" height="15" fill="rgb(250,218,53)"/><text x="58.1288%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="57.8788%" y="901" width="0.2020%" height="15" fill="rgb(207,140,0)"/><text x="58.1288%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="57.8788%" y="885" width="0.2020%" height="15" fill="rgb(238,133,51)"/><text x="58.1288%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="57.8788%" y="869" width="0.2020%" height="15" fill="rgb(218,203,53)"/><text x="58.1288%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="57.8788%" y="853" width="0.2020%" height="15" fill="rgb(226,184,25)"/><text x="58.1288%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="57.8788%" y="837" width="0.2020%" height="15" fill="rgb(231,121,21)"/><text x="58.1288%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="57.8788%" y="821" width="0.2020%" height="15" fill="rgb(251,14,34)"/><text x="58.1288%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="57.8788%" y="805" width="0.2020%" height="15" fill="rgb(249,193,11)"/><text x="58.1288%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="57.8788%" y="789" width="0.2020%" height="15" fill="rgb(220,172,37)"/><text x="58.1288%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="57.8788%" y="773" width="0.2020%" height="15" fill="rgb(231,229,43)"/><text x="58.1288%" y="783.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="57.8788%" y="757" width="0.2020%" height="15" fill="rgb(250,161,5)"/><text x="58.1288%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="57.8788%" y="741" width="0.2020%" height="15" fill="rgb(218,225,18)"/><text x="58.1288%" y="751.50"></text></g><g><title>&lt;polar::types::Parameter as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="57.8788%" y="725" width="0.2020%" height="15" fill="rgb(245,45,42)"/><text x="58.1288%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="57.9798%" y="709" width="0.1010%" height="15" fill="rgb(211,115,1)"/><text x="58.2298%" y="719.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (164 samples, 16.57%)</title><rect x="41.8182%" y="1573" width="16.5657%" height="15" fill="rgb(248,133,52)"/><text x="42.0682%" y="1583.50">criterion::Criterion&lt;M&gt;::b..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (164 samples, 16.57%)</title><rect x="41.8182%" y="1557" width="16.5657%" height="15" fill="rgb(238,100,21)"/><text x="42.0682%" y="1567.50">criterion::benchmark_group..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (164 samples, 16.57%)</title><rect x="41.8182%" y="1541" width="16.5657%" height="15" fill="rgb(247,144,11)"/><text x="42.0682%" y="1551.50">criterion::benchmark_group..</text></g><g><title>criterion::analysis::common (164 samples, 16.57%)</title><rect x="41.8182%" y="1525" width="16.5657%" height="15" fill="rgb(206,164,16)"/><text x="42.0682%" y="1535.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::profile (164 samples, 16.57%)</title><rect x="41.8182%" y="1509" width="16.5657%" height="15" fill="rgb(222,34,3)"/><text x="42.0682%" y="1519.50">criterion::routine::Routin..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (29 samples, 2.93%)</title><rect x="55.4545%" y="1493" width="2.9293%" height="15" fill="rgb(248,82,4)"/><text x="55.7045%" y="1503.50">&lt;c..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (29 samples, 2.93%)</title><rect x="55.4545%" y="1477" width="2.9293%" height="15" fill="rgb(228,81,46)"/><text x="55.7045%" y="1487.50">cr..</text></g><g><title>bench::too_many_predicates::_{{closure}} (29 samples, 2.93%)</title><rect x="55.4545%" y="1461" width="2.9293%" height="15" fill="rgb(227,67,47)"/><text x="55.7045%" y="1471.50">be..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (29 samples, 2.93%)</title><rect x="55.4545%" y="1445" width="2.9293%" height="15" fill="rgb(215,93,53)"/><text x="55.7045%" y="1455.50">cr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (29 samples, 2.93%)</title><rect x="55.4545%" y="1429" width="2.9293%" height="15" fill="rgb(248,194,39)"/><text x="55.7045%" y="1439.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 2.93%)</title><rect x="55.4545%" y="1413" width="2.9293%" height="15" fill="rgb(215,5,19)"/><text x="55.7045%" y="1423.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (29 samples, 2.93%)</title><rect x="55.4545%" y="1397" width="2.9293%" height="15" fill="rgb(226,215,51)"/><text x="55.7045%" y="1407.50">co..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.93%)</title><rect x="55.4545%" y="1381" width="2.9293%" height="15" fill="rgb(225,56,26)"/><text x="55.7045%" y="1391.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (29 samples, 2.93%)</title><rect x="55.4545%" y="1365" width="2.9293%" height="15" fill="rgb(222,75,29)"/><text x="55.7045%" y="1375.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 2.93%)</title><rect x="55.4545%" y="1349" width="2.9293%" height="15" fill="rgb(236,139,6)"/><text x="55.7045%" y="1359.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (29 samples, 2.93%)</title><rect x="55.4545%" y="1333" width="2.9293%" height="15" fill="rgb(223,137,36)"/><text x="55.7045%" y="1343.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (29 samples, 2.93%)</title><rect x="55.4545%" y="1317" width="2.9293%" height="15" fill="rgb(226,99,2)"/><text x="55.7045%" y="1327.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (29 samples, 2.93%)</title><rect x="55.4545%" y="1301" width="2.9293%" height="15" fill="rgb(206,133,23)"/><text x="55.7045%" y="1311.50">co..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (29 samples, 2.93%)</title><rect x="55.4545%" y="1285" width="2.9293%" height="15" fill="rgb(243,173,15)"/><text x="55.7045%" y="1295.50">be..</text></g><g><title>bench::Runner::run (29 samples, 2.93%)</title><rect x="55.4545%" y="1269" width="2.9293%" height="15" fill="rgb(228,69,28)"/><text x="55.7045%" y="1279.50">be..</text></g><g><title>bench::Runner::next (29 samples, 2.93%)</title><rect x="55.4545%" y="1253" width="2.9293%" height="15" fill="rgb(212,51,22)"/><text x="55.7045%" y="1263.50">be..</text></g><g><title>polar::polar::Polar::query (29 samples, 2.93%)</title><rect x="55.4545%" y="1237" width="2.9293%" height="15" fill="rgb(227,113,0)"/><text x="55.7045%" y="1247.50">po..</text></g><g><title>polar::vm::PolarVirtualMachine::run (29 samples, 2.93%)</title><rect x="55.4545%" y="1221" width="2.9293%" height="15" fill="rgb(252,84,27)"/><text x="55.7045%" y="1231.50">po..</text></g><g><title>&lt;polar::vm::Goal as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="57.8788%" y="1205" width="0.5051%" height="15" fill="rgb(223,145,39)"/><text x="58.1288%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="57.8788%" y="1189" width="0.5051%" height="15" fill="rgb(239,219,30)"/><text x="58.1288%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="57.8788%" y="1173" width="0.5051%" height="15" fill="rgb(224,196,39)"/><text x="58.1288%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="57.8788%" y="1157" width="0.5051%" height="15" fill="rgb(205,35,43)"/><text x="58.1288%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.51%)</title><rect x="57.8788%" y="1141" width="0.5051%" height="15" fill="rgb(228,201,21)"/><text x="58.1288%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="57.8788%" y="1125" width="0.5051%" height="15" fill="rgb(237,118,16)"/><text x="58.1288%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="57.8788%" y="1109" width="0.5051%" height="15" fill="rgb(241,17,19)"/><text x="58.1288%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.51%)</title><rect x="57.8788%" y="1093" width="0.5051%" height="15" fill="rgb(214,10,25)"/><text x="58.1288%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="57.8788%" y="1077" width="0.5051%" height="15" fill="rgb(238,37,29)"/><text x="58.1288%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="57.8788%" y="1061" width="0.5051%" height="15" fill="rgb(253,83,25)"/><text x="58.1288%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.51%)</title><rect x="57.8788%" y="1045" width="0.5051%" height="15" fill="rgb(234,192,12)"/><text x="58.1288%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.51%)</title><rect x="57.8788%" y="1029" width="0.5051%" height="15" fill="rgb(241,216,45)"/><text x="58.1288%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (5 samples, 0.51%)</title><rect x="57.8788%" y="1013" width="0.5051%" height="15" fill="rgb(242,22,33)"/><text x="58.1288%" y="1023.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (5 samples, 0.51%)</title><rect x="57.8788%" y="997" width="0.5051%" height="15" fill="rgb(231,105,49)"/><text x="58.1288%" y="1007.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.51%)</title><rect x="57.8788%" y="981" width="0.5051%" height="15" fill="rgb(218,204,15)"/><text x="58.1288%" y="991.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="57.8788%" y="965" width="0.5051%" height="15" fill="rgb(235,138,41)"/><text x="58.1288%" y="975.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="58.0808%" y="949" width="0.3030%" height="15" fill="rgb(246,0,9)"/><text x="58.3308%" y="959.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="58.0808%" y="933" width="0.3030%" height="15" fill="rgb(210,74,4)"/><text x="58.3308%" y="943.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="58.0808%" y="917" width="0.3030%" height="15" fill="rgb(250,60,41)"/><text x="58.3308%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="58.0808%" y="901" width="0.3030%" height="15" fill="rgb(220,115,12)"/><text x="58.3308%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="58.0808%" y="885" width="0.3030%" height="15" fill="rgb(237,100,13)"/><text x="58.3308%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="58.0808%" y="869" width="0.3030%" height="15" fill="rgb(213,55,26)"/><text x="58.3308%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="58.0808%" y="853" width="0.3030%" height="15" fill="rgb(216,17,4)"/><text x="58.3308%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="58.0808%" y="837" width="0.3030%" height="15" fill="rgb(220,153,47)"/><text x="58.3308%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="58.0808%" y="821" width="0.3030%" height="15" fill="rgb(215,131,9)"/><text x="58.3308%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="58.0808%" y="805" width="0.3030%" height="15" fill="rgb(233,46,42)"/><text x="58.3308%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="58.0808%" y="789" width="0.3030%" height="15" fill="rgb(226,86,7)"/><text x="58.3308%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="58.0808%" y="773" width="0.3030%" height="15" fill="rgb(239,226,21)"/><text x="58.3308%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="58.0808%" y="757" width="0.3030%" height="15" fill="rgb(244,137,22)"/><text x="58.3308%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="58.0808%" y="741" width="0.3030%" height="15" fill="rgb(211,139,35)"/><text x="58.3308%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="58.0808%" y="725" width="0.3030%" height="15" fill="rgb(214,62,50)"/><text x="58.3308%" y="735.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="58.0808%" y="709" width="0.3030%" height="15" fill="rgb(212,113,44)"/><text x="58.3308%" y="719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="58.0808%" y="693" width="0.3030%" height="15" fill="rgb(226,150,43)"/><text x="58.3308%" y="703.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="58.0808%" y="677" width="0.3030%" height="15" fill="rgb(250,71,37)"/><text x="58.3308%" y="687.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="58.2828%" y="661" width="0.1010%" height="15" fill="rgb(219,76,19)"/><text x="58.5328%" y="671.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="58.2828%" y="645" width="0.1010%" height="15" fill="rgb(250,39,11)"/><text x="58.5328%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="58.2828%" y="629" width="0.1010%" height="15" fill="rgb(230,64,31)"/><text x="58.5328%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="58.2828%" y="613" width="0.1010%" height="15" fill="rgb(208,222,23)"/><text x="58.5328%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="58.2828%" y="597" width="0.1010%" height="15" fill="rgb(227,125,18)"/><text x="58.5328%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="58.2828%" y="581" width="0.1010%" height="15" fill="rgb(234,210,9)"/><text x="58.5328%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="58.3838%" y="453" width="0.1010%" height="15" fill="rgb(217,127,24)"/><text x="58.6338%" y="463.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="58.3838%" y="1013" width="0.2020%" height="15" fill="rgb(239,141,48)"/><text x="58.6338%" y="1023.50"></text></g><g><title>polar::formatting::to_polar::format_args (2 samples, 0.20%)</title><rect x="58.3838%" y="997" width="0.2020%" height="15" fill="rgb(227,109,8)"/><text x="58.6338%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="58.3838%" y="981" width="0.2020%" height="15" fill="rgb(235,184,23)"/><text x="58.6338%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="58.3838%" y="965" width="0.2020%" height="15" fill="rgb(227,226,48)"/><text x="58.6338%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="58.3838%" y="949" width="0.2020%" height="15" fill="rgb(206,150,11)"/><text x="58.6338%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="58.3838%" y="933" width="0.2020%" height="15" fill="rgb(254,2,33)"/><text x="58.6338%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="58.3838%" y="917" width="0.2020%" height="15" fill="rgb(243,160,20)"/><text x="58.6338%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="58.3838%" y="901" width="0.2020%" height="15" fill="rgb(218,208,30)"/><text x="58.6338%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="58.3838%" y="885" width="0.2020%" height="15" fill="rgb(224,120,49)"/><text x="58.6338%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="58.3838%" y="869" width="0.2020%" height="15" fill="rgb(246,12,2)"/><text x="58.6338%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="58.3838%" y="853" width="0.2020%" height="15" fill="rgb(236,117,3)"/><text x="58.6338%" y="863.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="58.3838%" y="837" width="0.2020%" height="15" fill="rgb(216,128,52)"/><text x="58.6338%" y="847.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (2 samples, 0.20%)</title><rect x="58.3838%" y="821" width="0.2020%" height="15" fill="rgb(246,145,19)"/><text x="58.6338%" y="831.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (2 samples, 0.20%)</title><rect x="58.3838%" y="805" width="0.2020%" height="15" fill="rgb(222,11,46)"/><text x="58.6338%" y="815.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="58.3838%" y="789" width="0.2020%" height="15" fill="rgb(245,82,36)"/><text x="58.6338%" y="799.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="58.3838%" y="773" width="0.2020%" height="15" fill="rgb(250,73,51)"/><text x="58.6338%" y="783.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="58.3838%" y="757" width="0.2020%" height="15" fill="rgb(221,189,23)"/><text x="58.6338%" y="767.50"></text></g><g><title>polar::formatting::to_polar::format_args (2 samples, 0.20%)</title><rect x="58.3838%" y="741" width="0.2020%" height="15" fill="rgb(210,33,7)"/><text x="58.6338%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="58.3838%" y="725" width="0.2020%" height="15" fill="rgb(210,107,22)"/><text x="58.6338%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="58.3838%" y="709" width="0.2020%" height="15" fill="rgb(222,116,37)"/><text x="58.6338%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="58.3838%" y="693" width="0.2020%" height="15" fill="rgb(254,17,48)"/><text x="58.6338%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="58.3838%" y="677" width="0.2020%" height="15" fill="rgb(224,36,32)"/><text x="58.6338%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="58.3838%" y="661" width="0.2020%" height="15" fill="rgb(232,90,46)"/><text x="58.6338%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="58.3838%" y="645" width="0.2020%" height="15" fill="rgb(241,66,40)"/><text x="58.6338%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="58.3838%" y="629" width="0.2020%" height="15" fill="rgb(249,184,29)"/><text x="58.6338%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="58.3838%" y="613" width="0.2020%" height="15" fill="rgb(231,181,1)"/><text x="58.6338%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="58.3838%" y="597" width="0.2020%" height="15" fill="rgb(224,94,2)"/><text x="58.6338%" y="607.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="58.3838%" y="581" width="0.2020%" height="15" fill="rgb(229,170,15)"/><text x="58.6338%" y="591.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (2 samples, 0.20%)</title><rect x="58.3838%" y="565" width="0.2020%" height="15" fill="rgb(240,127,35)"/><text x="58.6338%" y="575.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (2 samples, 0.20%)</title><rect x="58.3838%" y="549" width="0.2020%" height="15" fill="rgb(248,196,34)"/><text x="58.6338%" y="559.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="58.3838%" y="533" width="0.2020%" height="15" fill="rgb(236,137,7)"/><text x="58.6338%" y="543.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="58.3838%" y="517" width="0.2020%" height="15" fill="rgb(235,127,16)"/><text x="58.6338%" y="527.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.20%)</title><rect x="58.3838%" y="501" width="0.2020%" height="15" fill="rgb(250,192,54)"/><text x="58.6338%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="58.3838%" y="485" width="0.2020%" height="15" fill="rgb(218,98,20)"/><text x="58.6338%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="58.3838%" y="469" width="0.2020%" height="15" fill="rgb(230,176,47)"/><text x="58.6338%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.10%)</title><rect x="58.4848%" y="453" width="0.1010%" height="15" fill="rgb(244,2,33)"/><text x="58.7348%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="58.4848%" y="437" width="0.1010%" height="15" fill="rgb(231,100,17)"/><text x="58.7348%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="58.4848%" y="421" width="0.1010%" height="15" fill="rgb(245,23,12)"/><text x="58.7348%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="58.7879%" y="277" width="0.1010%" height="15" fill="rgb(249,55,22)"/><text x="59.0379%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="58.7879%" y="261" width="0.1010%" height="15" fill="rgb(207,134,9)"/><text x="59.0379%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="58.7879%" y="245" width="0.1010%" height="15" fill="rgb(218,134,0)"/><text x="59.0379%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="58.7879%" y="229" width="0.1010%" height="15" fill="rgb(213,212,33)"/><text x="59.0379%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="58.7879%" y="213" width="0.1010%" height="15" fill="rgb(252,106,18)"/><text x="59.0379%" y="223.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.61%)</title><rect x="58.8889%" y="69" width="0.6061%" height="15" fill="rgb(208,126,42)"/><text x="59.1389%" y="79.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="59.0909%" y="53" width="0.4040%" height="15" fill="rgb(246,175,29)"/><text x="59.3409%" y="63.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.20%)</title><rect x="59.2929%" y="37" width="0.2020%" height="15" fill="rgb(215,13,50)"/><text x="59.5429%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (7 samples, 0.71%)</title><rect x="58.8889%" y="165" width="0.7071%" height="15" fill="rgb(216,172,15)"/><text x="59.1389%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.71%)</title><rect x="58.8889%" y="149" width="0.7071%" height="15" fill="rgb(212,103,13)"/><text x="59.1389%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (7 samples, 0.71%)</title><rect x="58.8889%" y="133" width="0.7071%" height="15" fill="rgb(231,171,36)"/><text x="59.1389%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (7 samples, 0.71%)</title><rect x="58.8889%" y="117" width="0.7071%" height="15" fill="rgb(250,123,20)"/><text x="59.1389%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="58.8889%" y="101" width="0.7071%" height="15" fill="rgb(212,53,50)"/><text x="59.1389%" y="111.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.71%)</title><rect x="58.8889%" y="85" width="0.7071%" height="15" fill="rgb(243,54,12)"/><text x="59.1389%" y="95.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="59.4949%" y="69" width="0.1010%" height="15" fill="rgb(234,101,34)"/><text x="59.7449%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.81%)</title><rect x="58.8889%" y="245" width="0.8081%" height="15" fill="rgb(254,67,22)"/><text x="59.1389%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.81%)</title><rect x="58.8889%" y="229" width="0.8081%" height="15" fill="rgb(250,35,47)"/><text x="59.1389%" y="239.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.81%)</title><rect x="58.8889%" y="213" width="0.8081%" height="15" fill="rgb(226,126,38)"/><text x="59.1389%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.81%)</title><rect x="58.8889%" y="197" width="0.8081%" height="15" fill="rgb(216,138,53)"/><text x="59.1389%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.81%)</title><rect x="58.8889%" y="181" width="0.8081%" height="15" fill="rgb(246,199,43)"/><text x="59.1389%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="59.5960%" y="165" width="0.1010%" height="15" fill="rgb(232,125,11)"/><text x="59.8460%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="59.5960%" y="149" width="0.1010%" height="15" fill="rgb(218,219,45)"/><text x="59.8460%" y="159.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="59.5960%" y="133" width="0.1010%" height="15" fill="rgb(216,102,54)"/><text x="59.8460%" y="143.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (14 samples, 1.41%)</title><rect x="58.3838%" y="1077" width="1.4141%" height="15" fill="rgb(250,228,7)"/><text x="58.6338%" y="1087.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 1.41%)</title><rect x="58.3838%" y="1061" width="1.4141%" height="15" fill="rgb(226,125,25)"/><text x="58.6338%" y="1071.50"></text></g><g><title>core::fmt::write (14 samples, 1.41%)</title><rect x="58.3838%" y="1045" width="1.4141%" height="15" fill="rgb(224,165,27)"/><text x="58.6338%" y="1055.50"></text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (14 samples, 1.41%)</title><rect x="58.3838%" y="1029" width="1.4141%" height="15" fill="rgb(233,86,3)"/><text x="58.6338%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 1.21%)</title><rect x="58.5859%" y="1013" width="1.2121%" height="15" fill="rgb(228,116,20)"/><text x="58.8359%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 1.21%)</title><rect x="58.5859%" y="997" width="1.2121%" height="15" fill="rgb(209,192,17)"/><text x="58.8359%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (12 samples, 1.21%)</title><rect x="58.5859%" y="981" width="1.2121%" height="15" fill="rgb(224,88,34)"/><text x="58.8359%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 1.21%)</title><rect x="58.5859%" y="965" width="1.2121%" height="15" fill="rgb(233,38,6)"/><text x="58.8359%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 1.21%)</title><rect x="58.5859%" y="949" width="1.2121%" height="15" fill="rgb(212,59,30)"/><text x="58.8359%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 1.21%)</title><rect x="58.5859%" y="933" width="1.2121%" height="15" fill="rgb(213,80,3)"/><text x="58.8359%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 1.21%)</title><rect x="58.5859%" y="917" width="1.2121%" height="15" fill="rgb(251,178,7)"/><text x="58.8359%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 1.21%)</title><rect x="58.5859%" y="901" width="1.2121%" height="15" fill="rgb(213,154,26)"/><text x="58.8359%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="885" width="1.2121%" height="15" fill="rgb(238,165,49)"/><text x="58.8359%" y="895.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="869" width="1.2121%" height="15" fill="rgb(248,91,46)"/><text x="58.8359%" y="879.50"></text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="853" width="1.2121%" height="15" fill="rgb(244,21,52)"/><text x="58.8359%" y="863.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (12 samples, 1.21%)</title><rect x="58.5859%" y="837" width="1.2121%" height="15" fill="rgb(247,122,20)"/><text x="58.8359%" y="847.50"></text></g><g><title>polar::formatting::to_polar::format_args (12 samples, 1.21%)</title><rect x="58.5859%" y="821" width="1.2121%" height="15" fill="rgb(218,27,9)"/><text x="58.8359%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 1.21%)</title><rect x="58.5859%" y="805" width="1.2121%" height="15" fill="rgb(246,7,6)"/><text x="58.8359%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 1.21%)</title><rect x="58.5859%" y="789" width="1.2121%" height="15" fill="rgb(227,135,54)"/><text x="58.8359%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (12 samples, 1.21%)</title><rect x="58.5859%" y="773" width="1.2121%" height="15" fill="rgb(247,14,11)"/><text x="58.8359%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 1.21%)</title><rect x="58.5859%" y="757" width="1.2121%" height="15" fill="rgb(206,149,34)"/><text x="58.8359%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 1.21%)</title><rect x="58.5859%" y="741" width="1.2121%" height="15" fill="rgb(227,228,4)"/><text x="58.8359%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 1.21%)</title><rect x="58.5859%" y="725" width="1.2121%" height="15" fill="rgb(238,218,28)"/><text x="58.8359%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 1.21%)</title><rect x="58.5859%" y="709" width="1.2121%" height="15" fill="rgb(252,86,40)"/><text x="58.8359%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 1.21%)</title><rect x="58.5859%" y="693" width="1.2121%" height="15" fill="rgb(251,225,11)"/><text x="58.8359%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="677" width="1.2121%" height="15" fill="rgb(206,46,49)"/><text x="58.8359%" y="687.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="661" width="1.2121%" height="15" fill="rgb(245,128,24)"/><text x="58.8359%" y="671.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="645" width="1.2121%" height="15" fill="rgb(219,177,34)"/><text x="58.8359%" y="655.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (12 samples, 1.21%)</title><rect x="58.5859%" y="629" width="1.2121%" height="15" fill="rgb(218,60,48)"/><text x="58.8359%" y="639.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (12 samples, 1.21%)</title><rect x="58.5859%" y="613" width="1.2121%" height="15" fill="rgb(221,11,5)"/><text x="58.8359%" y="623.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (12 samples, 1.21%)</title><rect x="58.5859%" y="597" width="1.2121%" height="15" fill="rgb(220,148,13)"/><text x="58.8359%" y="607.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (12 samples, 1.21%)</title><rect x="58.5859%" y="581" width="1.2121%" height="15" fill="rgb(210,16,3)"/><text x="58.8359%" y="591.50"></text></g><g><title>polar::formatting::to_polar::format_args (12 samples, 1.21%)</title><rect x="58.5859%" y="565" width="1.2121%" height="15" fill="rgb(236,80,2)"/><text x="58.8359%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 1.21%)</title><rect x="58.5859%" y="549" width="1.2121%" height="15" fill="rgb(239,129,19)"/><text x="58.8359%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 1.21%)</title><rect x="58.5859%" y="533" width="1.2121%" height="15" fill="rgb(220,106,35)"/><text x="58.8359%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (12 samples, 1.21%)</title><rect x="58.5859%" y="517" width="1.2121%" height="15" fill="rgb(252,139,45)"/><text x="58.8359%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 1.21%)</title><rect x="58.5859%" y="501" width="1.2121%" height="15" fill="rgb(229,8,36)"/><text x="58.8359%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 1.21%)</title><rect x="58.5859%" y="485" width="1.2121%" height="15" fill="rgb(230,126,33)"/><text x="58.8359%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 1.21%)</title><rect x="58.5859%" y="469" width="1.2121%" height="15" fill="rgb(239,140,21)"/><text x="58.8359%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 1.21%)</title><rect x="58.5859%" y="453" width="1.2121%" height="15" fill="rgb(254,104,9)"/><text x="58.8359%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 1.21%)</title><rect x="58.5859%" y="437" width="1.2121%" height="15" fill="rgb(239,52,14)"/><text x="58.8359%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="421" width="1.2121%" height="15" fill="rgb(208,227,44)"/><text x="58.8359%" y="431.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="405" width="1.2121%" height="15" fill="rgb(246,18,19)"/><text x="58.8359%" y="415.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (12 samples, 1.21%)</title><rect x="58.5859%" y="389" width="1.2121%" height="15" fill="rgb(235,228,25)"/><text x="58.8359%" y="399.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (12 samples, 1.21%)</title><rect x="58.5859%" y="373" width="1.2121%" height="15" fill="rgb(240,156,20)"/><text x="58.8359%" y="383.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (12 samples, 1.21%)</title><rect x="58.5859%" y="357" width="1.2121%" height="15" fill="rgb(224,8,20)"/><text x="58.8359%" y="367.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (12 samples, 1.21%)</title><rect x="58.5859%" y="341" width="1.2121%" height="15" fill="rgb(214,12,52)"/><text x="58.8359%" y="351.50"></text></g><g><title>alloc::fmt::format (12 samples, 1.21%)</title><rect x="58.5859%" y="325" width="1.2121%" height="15" fill="rgb(211,220,47)"/><text x="58.8359%" y="335.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 1.21%)</title><rect x="58.5859%" y="309" width="1.2121%" height="15" fill="rgb(250,173,5)"/><text x="58.8359%" y="319.50"></text></g><g><title>core::fmt::write (12 samples, 1.21%)</title><rect x="58.5859%" y="293" width="1.2121%" height="15" fill="rgb(250,125,52)"/><text x="58.8359%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (9 samples, 0.91%)</title><rect x="58.8889%" y="277" width="0.9091%" height="15" fill="rgb(209,133,18)"/><text x="59.1389%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (9 samples, 0.91%)</title><rect x="58.8889%" y="261" width="0.9091%" height="15" fill="rgb(216,173,22)"/><text x="59.1389%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="59.6970%" y="245" width="0.1010%" height="15" fill="rgb(205,3,22)"/><text x="59.9470%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="60.1010%" y="1061" width="0.1010%" height="15" fill="rgb(248,22,20)"/><text x="60.3510%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="60.1010%" y="1045" width="0.1010%" height="15" fill="rgb(233,6,29)"/><text x="60.3510%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="60.4040%" y="1013" width="0.1010%" height="15" fill="rgb(240,22,54)"/><text x="60.6540%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="60.4040%" y="997" width="0.1010%" height="15" fill="rgb(231,133,32)"/><text x="60.6540%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="60.4040%" y="981" width="0.1010%" height="15" fill="rgb(248,193,4)"/><text x="60.6540%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="60.4040%" y="965" width="0.1010%" height="15" fill="rgb(211,178,46)"/><text x="60.6540%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="60.4040%" y="949" width="0.1010%" height="15" fill="rgb(224,5,42)"/><text x="60.6540%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="60.4040%" y="933" width="0.1010%" height="15" fill="rgb(239,176,25)"/><text x="60.6540%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="60.4040%" y="1045" width="0.3030%" height="15" fill="rgb(245,187,50)"/><text x="60.6540%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="60.4040%" y="1029" width="0.3030%" height="15" fill="rgb(248,24,15)"/><text x="60.6540%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="60.5051%" y="1013" width="0.2020%" height="15" fill="rgb(205,166,13)"/><text x="60.7551%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="60.5051%" y="997" width="0.2020%" height="15" fill="rgb(208,114,23)"/><text x="60.7551%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="60.5051%" y="981" width="0.2020%" height="15" fill="rgb(239,127,18)"/><text x="60.7551%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="60.5051%" y="965" width="0.2020%" height="15" fill="rgb(219,154,28)"/><text x="60.7551%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="60.5051%" y="949" width="0.2020%" height="15" fill="rgb(225,157,23)"/><text x="60.7551%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="60.5051%" y="933" width="0.2020%" height="15" fill="rgb(219,8,6)"/><text x="60.7551%" y="943.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="60.5051%" y="917" width="0.2020%" height="15" fill="rgb(212,47,6)"/><text x="60.7551%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (3 samples, 0.30%)</title><rect x="60.7071%" y="1029" width="0.3030%" height="15" fill="rgb(224,190,4)"/><text x="60.9571%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (3 samples, 0.30%)</title><rect x="60.7071%" y="1013" width="0.3030%" height="15" fill="rgb(239,183,29)"/><text x="60.9571%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (3 samples, 0.30%)</title><rect x="60.7071%" y="997" width="0.3030%" height="15" fill="rgb(213,57,7)"/><text x="60.9571%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.30%)</title><rect x="60.7071%" y="981" width="0.3030%" height="15" fill="rgb(216,148,1)"/><text x="60.9571%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.30%)</title><rect x="60.7071%" y="965" width="0.3030%" height="15" fill="rgb(236,182,29)"/><text x="60.9571%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (3 samples, 0.30%)</title><rect x="60.7071%" y="949" width="0.3030%" height="15" fill="rgb(244,120,48)"/><text x="60.9571%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (3 samples, 0.30%)</title><rect x="60.7071%" y="933" width="0.3030%" height="15" fill="rgb(206,71,34)"/><text x="60.9571%" y="943.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.30%)</title><rect x="60.7071%" y="917" width="0.3030%" height="15" fill="rgb(242,32,6)"/><text x="60.9571%" y="927.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.30%)</title><rect x="60.7071%" y="901" width="0.3030%" height="15" fill="rgb(241,35,3)"/><text x="60.9571%" y="911.50"></text></g><g><title>_int_realloc (3 samples, 0.30%)</title><rect x="60.7071%" y="885" width="0.3030%" height="15" fill="rgb(222,62,19)"/><text x="60.9571%" y="895.50"></text></g><g><title>_int_malloc (3 samples, 0.30%)</title><rect x="60.7071%" y="869" width="0.3030%" height="15" fill="rgb(223,110,41)"/><text x="60.9571%" y="879.50"></text></g><g><title>malloc_consolidate (2 samples, 0.20%)</title><rect x="60.8081%" y="853" width="0.2020%" height="15" fill="rgb(208,224,4)"/><text x="61.0581%" y="863.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (4 samples, 0.40%)</title><rect x="60.7071%" y="1045" width="0.4040%" height="15" fill="rgb(241,137,19)"/><text x="60.9571%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="61.0101%" y="1029" width="0.1010%" height="15" fill="rgb(244,24,17)"/><text x="61.2601%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="61.0101%" y="1013" width="0.1010%" height="15" fill="rgb(245,178,49)"/><text x="61.2601%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="61.0101%" y="997" width="0.1010%" height="15" fill="rgb(219,160,38)"/><text x="61.2601%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="61.0101%" y="981" width="0.1010%" height="15" fill="rgb(228,137,14)"/><text x="61.2601%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="61.0101%" y="965" width="0.1010%" height="15" fill="rgb(237,134,11)"/><text x="61.2601%" y="975.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="61.0101%" y="949" width="0.1010%" height="15" fill="rgb(211,126,44)"/><text x="61.2601%" y="959.50"></text></g><g><title>polar::vm::PolarVirtualMachine::is_more_specific (10 samples, 1.01%)</title><rect x="60.2020%" y="1061" width="1.0101%" height="15" fill="rgb(226,171,33)"/><text x="60.4520%" y="1071.50"></text></g><g><title>polar::vm::PolarVirtualMachine::bind (1 samples, 0.10%)</title><rect x="61.1111%" y="1045" width="0.1010%" height="15" fill="rgb(253,99,13)"/><text x="61.3611%" y="1055.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.1111%" y="1029" width="0.1010%" height="15" fill="rgb(244,48,7)"/><text x="61.3611%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.1111%" y="1013" width="0.1010%" height="15" fill="rgb(244,217,54)"/><text x="61.3611%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.1111%" y="997" width="0.1010%" height="15" fill="rgb(224,15,18)"/><text x="61.3611%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="61.1111%" y="981" width="0.1010%" height="15" fill="rgb(244,99,12)"/><text x="61.3611%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="61.1111%" y="965" width="0.1010%" height="15" fill="rgb(233,226,8)"/><text x="61.3611%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="61.1111%" y="949" width="0.1010%" height="15" fill="rgb(229,211,3)"/><text x="61.3611%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="61.1111%" y="933" width="0.1010%" height="15" fill="rgb(216,140,21)"/><text x="61.3611%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="61.1111%" y="917" width="0.1010%" height="15" fill="rgb(234,122,30)"/><text x="61.3611%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="61.1111%" y="901" width="0.1010%" height="15" fill="rgb(236,25,46)"/><text x="61.3611%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="61.1111%" y="885" width="0.1010%" height="15" fill="rgb(217,52,54)"/><text x="61.3611%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="61.1111%" y="869" width="0.1010%" height="15" fill="rgb(222,29,26)"/><text x="61.3611%" y="879.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="61.1111%" y="853" width="0.1010%" height="15" fill="rgb(216,177,29)"/><text x="61.3611%" y="863.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.4141%" y="1029" width="0.1010%" height="15" fill="rgb(247,136,51)"/><text x="61.6641%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.4141%" y="1013" width="0.1010%" height="15" fill="rgb(231,47,47)"/><text x="61.6641%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.4141%" y="997" width="0.1010%" height="15" fill="rgb(211,192,36)"/><text x="61.6641%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="61.4141%" y="981" width="0.1010%" height="15" fill="rgb(229,156,32)"/><text x="61.6641%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="61.4141%" y="965" width="0.1010%" height="15" fill="rgb(248,213,20)"/><text x="61.6641%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="61.4141%" y="949" width="0.1010%" height="15" fill="rgb(217,64,7)"/><text x="61.6641%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="61.4141%" y="933" width="0.1010%" height="15" fill="rgb(232,142,8)"/><text x="61.6641%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="61.4141%" y="917" width="0.1010%" height="15" fill="rgb(224,92,44)"/><text x="61.6641%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="61.4141%" y="901" width="0.1010%" height="15" fill="rgb(214,169,17)"/><text x="61.6641%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="61.4141%" y="885" width="0.1010%" height="15" fill="rgb(210,59,37)"/><text x="61.6641%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="61.4141%" y="869" width="0.1010%" height="15" fill="rgb(214,116,48)"/><text x="61.6641%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="61.4141%" y="853" width="0.1010%" height="15" fill="rgb(244,191,6)"/><text x="61.6641%" y="863.50"></text></g><g><title>polar::vm::PolarVirtualMachine::is_subspecializer (4 samples, 0.40%)</title><rect x="61.2121%" y="1061" width="0.4040%" height="15" fill="rgb(241,50,52)"/><text x="61.4621%" y="1071.50"></text></g><g><title>polar::vm::PolarVirtualMachine::bind (3 samples, 0.30%)</title><rect x="61.3131%" y="1045" width="0.3030%" height="15" fill="rgb(236,75,39)"/><text x="61.5631%" y="1055.50"></text></g><g><title>std::env::var (1 samples, 0.10%)</title><rect x="61.5152%" y="1029" width="0.1010%" height="15" fill="rgb(236,99,0)"/><text x="61.7652%" y="1039.50"></text></g><g><title>std::env::_var (1 samples, 0.10%)</title><rect x="61.5152%" y="1013" width="0.1010%" height="15" fill="rgb(207,202,15)"/><text x="61.7652%" y="1023.50"></text></g><g><title>std::env::var_os (1 samples, 0.10%)</title><rect x="61.5152%" y="997" width="0.1010%" height="15" fill="rgb(233,207,14)"/><text x="61.7652%" y="1007.50"></text></g><g><title>std::env::_var_os (1 samples, 0.10%)</title><rect x="61.5152%" y="981" width="0.1010%" height="15" fill="rgb(226,27,51)"/><text x="61.7652%" y="991.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.10%)</title><rect x="61.5152%" y="965" width="0.1010%" height="15" fill="rgb(206,104,42)"/><text x="61.7652%" y="975.50"></text></g><g><title>std::sys::unix::os::env_lock (1 samples, 0.10%)</title><rect x="61.5152%" y="949" width="0.1010%" height="15" fill="rgb(212,225,4)"/><text x="61.7652%" y="959.50"></text></g><g><title>std::sys_common::mutex::Mutex::lock (1 samples, 0.10%)</title><rect x="61.5152%" y="933" width="0.1010%" height="15" fill="rgb(233,96,42)"/><text x="61.7652%" y="943.50"></text></g><g><title>std::sys_common::mutex::Mutex::raw_lock (1 samples, 0.10%)</title><rect x="61.5152%" y="917" width="0.1010%" height="15" fill="rgb(229,21,32)"/><text x="61.7652%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.10%)</title><rect x="61.5152%" y="901" width="0.1010%" height="15" fill="rgb(226,216,24)"/><text x="61.7652%" y="911.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.10%)</title><rect x="61.5152%" y="885" width="0.1010%" height="15" fill="rgb(221,163,17)"/><text x="61.7652%" y="895.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.6162%" y="1045" width="0.1010%" height="15" fill="rgb(216,216,42)"/><text x="61.8662%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="61.6162%" y="1029" width="0.1010%" height="15" fill="rgb(240,118,7)"/><text x="61.8662%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="61.6162%" y="1013" width="0.1010%" height="15" fill="rgb(221,67,37)"/><text x="61.8662%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="61.6162%" y="997" width="0.1010%" height="15" fill="rgb(241,32,44)"/><text x="61.8662%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="61.6162%" y="981" width="0.1010%" height="15" fill="rgb(235,204,43)"/><text x="61.8662%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="61.6162%" y="965" width="0.1010%" height="15" fill="rgb(213,116,10)"/><text x="61.8662%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="61.6162%" y="949" width="0.1010%" height="15" fill="rgb(239,15,48)"/><text x="61.8662%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="61.6162%" y="933" width="0.1010%" height="15" fill="rgb(207,123,36)"/><text x="61.8662%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="61.6162%" y="917" width="0.1010%" height="15" fill="rgb(209,103,30)"/><text x="61.8662%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="61.6162%" y="901" width="0.1010%" height="15" fill="rgb(238,100,19)"/><text x="61.8662%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="61.6162%" y="885" width="0.1010%" height="15" fill="rgb(244,30,14)"/><text x="61.8662%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="61.6162%" y="869" width="0.1010%" height="15" fill="rgb(249,174,6)"/><text x="61.8662%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="61.6162%" y="853" width="0.1010%" height="15" fill="rgb(235,213,41)"/><text x="61.8662%" y="863.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="61.6162%" y="837" width="0.1010%" height="15" fill="rgb(213,118,6)"/><text x="61.8662%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="61.6162%" y="821" width="0.1010%" height="15" fill="rgb(235,44,51)"/><text x="61.8662%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="61.6162%" y="805" width="0.1010%" height="15" fill="rgb(217,9,53)"/><text x="61.8662%" y="815.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="61.6162%" y="789" width="0.1010%" height="15" fill="rgb(237,172,34)"/><text x="61.8662%" y="799.50"></text></g><g><title>core::iter::LoopState&lt;C,B&gt;::break_value (1 samples, 0.10%)</title><rect x="61.7172%" y="917" width="0.1010%" height="15" fill="rgb(206,206,11)"/><text x="61.9672%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="61.7172%" y="949" width="0.2020%" height="15" fill="rgb(214,149,29)"/><text x="61.9672%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.20%)</title><rect x="61.7172%" y="933" width="0.2020%" height="15" fill="rgb(208,123,3)"/><text x="61.9672%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="61.8182%" y="917" width="0.1010%" height="15" fill="rgb(229,126,4)"/><text x="62.0682%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.30%)</title><rect x="61.7172%" y="1029" width="0.3030%" height="15" fill="rgb(222,92,36)"/><text x="61.9672%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="61.7172%" y="1013" width="0.3030%" height="15" fill="rgb(216,39,41)"/><text x="61.9672%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="61.7172%" y="997" width="0.3030%" height="15" fill="rgb(253,127,28)"/><text x="61.9672%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="61.7172%" y="981" width="0.3030%" height="15" fill="rgb(249,152,51)"/><text x="61.9672%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (3 samples, 0.30%)</title><rect x="61.7172%" y="965" width="0.3030%" height="15" fill="rgb(209,123,42)"/><text x="61.9672%" y="975.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="61.9192%" y="949" width="0.1010%" height="15" fill="rgb(241,118,22)"/><text x="62.1692%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="62.0202%" y="917" width="0.1010%" height="15" fill="rgb(208,25,7)"/><text x="62.2702%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="62.0202%" y="901" width="0.1010%" height="15" fill="rgb(243,144,39)"/><text x="62.2702%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="62.0202%" y="885" width="0.1010%" height="15" fill="rgb(250,50,5)"/><text x="62.2702%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="62.0202%" y="869" width="0.1010%" height="15" fill="rgb(207,67,11)"/><text x="62.2702%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="62.0202%" y="853" width="0.1010%" height="15" fill="rgb(245,204,40)"/><text x="62.2702%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="62.0202%" y="837" width="0.1010%" height="15" fill="rgb(238,228,24)"/><text x="62.2702%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="62.0202%" y="821" width="0.1010%" height="15" fill="rgb(217,116,22)"/><text x="62.2702%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="62.0202%" y="805" width="0.1010%" height="15" fill="rgb(234,98,12)"/><text x="62.2702%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="62.0202%" y="789" width="0.1010%" height="15" fill="rgb(242,170,50)"/><text x="62.2702%" y="799.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="62.0202%" y="773" width="0.1010%" height="15" fill="rgb(235,7,5)"/><text x="62.2702%" y="783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="62.0202%" y="757" width="0.1010%" height="15" fill="rgb(241,114,28)"/><text x="62.2702%" y="767.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="62.0202%" y="741" width="0.1010%" height="15" fill="rgb(246,112,42)"/><text x="62.2702%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="62.0202%" y="725" width="0.1010%" height="15" fill="rgb(248,228,14)"/><text x="62.2702%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="62.0202%" y="709" width="0.1010%" height="15" fill="rgb(208,133,18)"/><text x="62.2702%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="62.0202%" y="693" width="0.1010%" height="15" fill="rgb(207,35,49)"/><text x="62.2702%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="62.0202%" y="677" width="0.1010%" height="15" fill="rgb(205,68,36)"/><text x="62.2702%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="62.0202%" y="661" width="0.1010%" height="15" fill="rgb(245,62,40)"/><text x="62.2702%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="62.0202%" y="645" width="0.1010%" height="15" fill="rgb(228,27,24)"/><text x="62.2702%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="62.0202%" y="629" width="0.1010%" height="15" fill="rgb(253,19,12)"/><text x="62.2702%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="62.0202%" y="613" width="0.1010%" height="15" fill="rgb(232,28,20)"/><text x="62.2702%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="62.0202%" y="597" width="0.1010%" height="15" fill="rgb(218,35,51)"/><text x="62.2702%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="62.0202%" y="581" width="0.1010%" height="15" fill="rgb(212,90,40)"/><text x="62.2702%" y="591.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.30%)</title><rect x="62.0202%" y="1029" width="0.3030%" height="15" fill="rgb(220,172,12)"/><text x="62.2702%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.30%)</title><rect x="62.0202%" y="1013" width="0.3030%" height="15" fill="rgb(226,159,20)"/><text x="62.2702%" y="1023.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::_{{closure}} (3 samples, 0.30%)</title><rect x="62.0202%" y="997" width="0.3030%" height="15" fill="rgb(234,205,16)"/><text x="62.2702%" y="1007.50"></text></g><g><title>&lt;polar::types::GenericRule as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="62.0202%" y="981" width="0.3030%" height="15" fill="rgb(207,9,39)"/><text x="62.2702%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="62.0202%" y="965" width="0.3030%" height="15" fill="rgb(249,143,15)"/><text x="62.2702%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="62.0202%" y="949" width="0.3030%" height="15" fill="rgb(253,133,29)"/><text x="62.2702%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="62.0202%" y="933" width="0.3030%" height="15" fill="rgb(221,187,0)"/><text x="62.2702%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="62.1212%" y="917" width="0.2020%" height="15" fill="rgb(205,204,26)"/><text x="62.3712%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="62.1212%" y="901" width="0.2020%" height="15" fill="rgb(224,68,54)"/><text x="62.3712%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="62.1212%" y="885" width="0.2020%" height="15" fill="rgb(209,67,4)"/><text x="62.3712%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="62.1212%" y="869" width="0.2020%" height="15" fill="rgb(228,229,18)"/><text x="62.3712%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="62.1212%" y="853" width="0.2020%" height="15" fill="rgb(231,89,13)"/><text x="62.3712%" y="863.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="62.1212%" y="837" width="0.2020%" height="15" fill="rgb(210,182,18)"/><text x="62.3712%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="62.1212%" y="821" width="0.2020%" height="15" fill="rgb(240,105,2)"/><text x="62.3712%" y="831.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="62.1212%" y="805" width="0.2020%" height="15" fill="rgb(207,170,50)"/><text x="62.3712%" y="815.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query (8 samples, 0.81%)</title><rect x="61.6162%" y="1061" width="0.8081%" height="15" fill="rgb(232,133,24)"/><text x="61.8662%" y="1071.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query_for_predicate (7 samples, 0.71%)</title><rect x="61.7172%" y="1045" width="0.7071%" height="15" fill="rgb(235,166,27)"/><text x="61.9672%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.10%)</title><rect x="62.3232%" y="1029" width="0.1010%" height="15" fill="rgb(209,19,13)"/><text x="62.5732%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.10%)</title><rect x="62.3232%" y="1013" width="0.1010%" height="15" fill="rgb(226,79,39)"/><text x="62.5732%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (1 samples, 0.10%)</title><rect x="62.3232%" y="997" width="0.1010%" height="15" fill="rgb(222,163,10)"/><text x="62.5732%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="62.3232%" y="981" width="0.1010%" height="15" fill="rgb(214,44,19)"/><text x="62.5732%" y="991.50"></text></g><g><title>&lt;polar::types::Symbol as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="62.3232%" y="965" width="0.1010%" height="15" fill="rgb(210,217,13)"/><text x="62.5732%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="62.3232%" y="949" width="0.1010%" height="15" fill="rgb(237,61,54)"/><text x="62.5732%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.10%)</title><rect x="62.3232%" y="933" width="0.1010%" height="15" fill="rgb(226,184,24)"/><text x="62.5732%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="62.3232%" y="917" width="0.1010%" height="15" fill="rgb(223,226,4)"/><text x="62.5732%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="62.3232%" y="901" width="0.1010%" height="15" fill="rgb(210,26,41)"/><text x="62.5732%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="62.3232%" y="885" width="0.1010%" height="15" fill="rgb(220,221,6)"/><text x="62.5732%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.10%)</title><rect x="62.3232%" y="869" width="0.1010%" height="15" fill="rgb(225,89,49)"/><text x="62.5732%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="62.4242%" y="949" width="0.2020%" height="15" fill="rgb(218,70,45)"/><text x="62.6742%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="62.5253%" y="933" width="0.1010%" height="15" fill="rgb(238,166,21)"/><text x="62.7753%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="62.5253%" y="917" width="0.1010%" height="15" fill="rgb(224,141,44)"/><text x="62.7753%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="62.6263%" y="837" width="0.2020%" height="15" fill="rgb(230,12,49)"/><text x="62.8763%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="62.6263%" y="821" width="0.2020%" height="15" fill="rgb(212,174,12)"/><text x="62.8763%" y="831.50"></text></g><g><title>core::ptr::write (2 samples, 0.20%)</title><rect x="62.6263%" y="805" width="0.2020%" height="15" fill="rgb(246,67,9)"/><text x="62.8763%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="63.0303%" y="757" width="0.3030%" height="15" fill="rgb(239,35,23)"/><text x="63.2803%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="63.0303%" y="741" width="0.3030%" height="15" fill="rgb(211,167,0)"/><text x="63.2803%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="63.0303%" y="725" width="0.3030%" height="15" fill="rgb(225,119,45)"/><text x="63.2803%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="63.0303%" y="709" width="0.3030%" height="15" fill="rgb(210,162,6)"/><text x="63.2803%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="63.0303%" y="693" width="0.3030%" height="15" fill="rgb(208,118,35)"/><text x="63.2803%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="63.2323%" y="677" width="0.1010%" height="15" fill="rgb(239,4,53)"/><text x="63.4823%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="63.2323%" y="661" width="0.1010%" height="15" fill="rgb(213,130,21)"/><text x="63.4823%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="63.3333%" y="661" width="0.1010%" height="15" fill="rgb(235,148,0)"/><text x="63.5833%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="63.0303%" y="805" width="0.5051%" height="15" fill="rgb(244,224,18)"/><text x="63.2803%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="63.0303%" y="789" width="0.5051%" height="15" fill="rgb(211,214,4)"/><text x="63.2803%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="63.0303%" y="773" width="0.5051%" height="15" fill="rgb(206,119,25)"/><text x="63.2803%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="63.3333%" y="757" width="0.2020%" height="15" fill="rgb(243,93,47)"/><text x="63.5833%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="63.3333%" y="741" width="0.2020%" height="15" fill="rgb(224,194,6)"/><text x="63.5833%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="63.3333%" y="725" width="0.2020%" height="15" fill="rgb(243,229,6)"/><text x="63.5833%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="63.3333%" y="709" width="0.2020%" height="15" fill="rgb(207,23,50)"/><text x="63.5833%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="63.3333%" y="693" width="0.2020%" height="15" fill="rgb(253,192,32)"/><text x="63.5833%" y="703.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="63.3333%" y="677" width="0.2020%" height="15" fill="rgb(213,21,6)"/><text x="63.5833%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="63.4343%" y="661" width="0.1010%" height="15" fill="rgb(243,151,13)"/><text x="63.6843%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="63.4343%" y="645" width="0.1010%" height="15" fill="rgb(233,165,41)"/><text x="63.6843%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="63.6364%" y="725" width="0.2020%" height="15" fill="rgb(246,176,45)"/><text x="63.8864%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="63.6364%" y="709" width="0.2020%" height="15" fill="rgb(217,170,52)"/><text x="63.8864%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.20%)</title><rect x="63.6364%" y="693" width="0.2020%" height="15" fill="rgb(214,203,54)"/><text x="63.8864%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.20%)</title><rect x="63.6364%" y="677" width="0.2020%" height="15" fill="rgb(248,215,49)"/><text x="63.8864%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.20%)</title><rect x="63.6364%" y="661" width="0.2020%" height="15" fill="rgb(208,46,10)"/><text x="63.8864%" y="671.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="63.5354%" y="805" width="0.4040%" height="15" fill="rgb(254,5,31)"/><text x="63.7854%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="63.5354%" y="789" width="0.4040%" height="15" fill="rgb(222,104,33)"/><text x="63.7854%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="63.6364%" y="773" width="0.3030%" height="15" fill="rgb(248,49,16)"/><text x="63.8864%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="63.6364%" y="757" width="0.3030%" height="15" fill="rgb(232,198,41)"/><text x="63.8864%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="63.6364%" y="741" width="0.3030%" height="15" fill="rgb(214,125,3)"/><text x="63.8864%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="63.8384%" y="725" width="0.1010%" height="15" fill="rgb(229,220,28)"/><text x="64.0884%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="63.8384%" y="709" width="0.1010%" height="15" fill="rgb(222,64,37)"/><text x="64.0884%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="63.8384%" y="693" width="0.1010%" height="15" fill="rgb(249,184,13)"/><text x="64.0884%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="63.8384%" y="677" width="0.1010%" height="15" fill="rgb(252,176,6)"/><text x="64.0884%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="63.8384%" y="661" width="0.1010%" height="15" fill="rgb(228,153,7)"/><text x="64.0884%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="63.8384%" y="645" width="0.1010%" height="15" fill="rgb(242,193,5)"/><text x="64.0884%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="63.8384%" y="629" width="0.1010%" height="15" fill="rgb(232,140,9)"/><text x="64.0884%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (17 samples, 1.72%)</title><rect x="62.4242%" y="997" width="1.7172%" height="15" fill="rgb(213,222,16)"/><text x="62.6742%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (17 samples, 1.72%)</title><rect x="62.4242%" y="981" width="1.7172%" height="15" fill="rgb(222,75,50)"/><text x="62.6742%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 1.72%)</title><rect x="62.4242%" y="965" width="1.7172%" height="15" fill="rgb(205,180,2)"/><text x="62.6742%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 1.52%)</title><rect x="62.6263%" y="949" width="1.5152%" height="15" fill="rgb(216,34,7)"/><text x="62.8763%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.52%)</title><rect x="62.6263%" y="933" width="1.5152%" height="15" fill="rgb(253,16,32)"/><text x="62.8763%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.52%)</title><rect x="62.6263%" y="917" width="1.5152%" height="15" fill="rgb(208,97,28)"/><text x="62.8763%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 1.52%)</title><rect x="62.6263%" y="901" width="1.5152%" height="15" fill="rgb(225,92,11)"/><text x="62.8763%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 1.52%)</title><rect x="62.6263%" y="885" width="1.5152%" height="15" fill="rgb(243,38,12)"/><text x="62.8763%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (15 samples, 1.52%)</title><rect x="62.6263%" y="869" width="1.5152%" height="15" fill="rgb(208,139,16)"/><text x="62.8763%" y="879.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (15 samples, 1.52%)</title><rect x="62.6263%" y="853" width="1.5152%" height="15" fill="rgb(227,24,9)"/><text x="62.8763%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 1.31%)</title><rect x="62.8283%" y="837" width="1.3131%" height="15" fill="rgb(206,62,11)"/><text x="63.0783%" y="847.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (13 samples, 1.31%)</title><rect x="62.8283%" y="821" width="1.3131%" height="15" fill="rgb(228,134,27)"/><text x="63.0783%" y="831.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="63.9394%" y="805" width="0.2020%" height="15" fill="rgb(205,55,33)"/><text x="64.1894%" y="815.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.0404%" y="789" width="0.1010%" height="15" fill="rgb(243,75,43)"/><text x="64.2904%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 1.82%)</title><rect x="62.4242%" y="1045" width="1.8182%" height="15" fill="rgb(223,27,42)"/><text x="62.6742%" y="1055.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 1.82%)</title><rect x="62.4242%" y="1029" width="1.8182%" height="15" fill="rgb(232,189,33)"/><text x="62.6742%" y="1039.50">a..</text></g><g><title>alloc::slice::hack::to_vec (18 samples, 1.82%)</title><rect x="62.4242%" y="1013" width="1.8182%" height="15" fill="rgb(210,9,39)"/><text x="62.6742%" y="1023.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="64.1414%" y="997" width="0.1010%" height="15" fill="rgb(242,85,26)"/><text x="64.3914%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="64.1414%" y="981" width="0.1010%" height="15" fill="rgb(248,44,4)"/><text x="64.3914%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="64.1414%" y="965" width="0.1010%" height="15" fill="rgb(250,96,46)"/><text x="64.3914%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="64.1414%" y="949" width="0.1010%" height="15" fill="rgb(229,116,26)"/><text x="64.3914%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="64.1414%" y="933" width="0.1010%" height="15" fill="rgb(246,94,34)"/><text x="64.3914%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="64.1414%" y="917" width="0.1010%" height="15" fill="rgb(251,73,21)"/><text x="64.3914%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="64.1414%" y="901" width="0.1010%" height="15" fill="rgb(254,121,25)"/><text x="64.3914%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="64.1414%" y="885" width="0.1010%" height="15" fill="rgb(215,161,49)"/><text x="64.3914%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="64.3434%" y="1029" width="0.5051%" height="15" fill="rgb(221,43,13)"/><text x="64.5934%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="64.3434%" y="1013" width="0.5051%" height="15" fill="rgb(249,5,37)"/><text x="64.5934%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="64.3434%" y="997" width="0.5051%" height="15" fill="rgb(226,25,44)"/><text x="64.5934%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="64.3434%" y="981" width="0.5051%" height="15" fill="rgb(238,189,16)"/><text x="64.5934%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="64.3434%" y="965" width="0.5051%" height="15" fill="rgb(251,186,8)"/><text x="64.5934%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.51%)</title><rect x="64.3434%" y="949" width="0.5051%" height="15" fill="rgb(254,34,31)"/><text x="64.5934%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.51%)</title><rect x="64.3434%" y="933" width="0.5051%" height="15" fill="rgb(225,215,27)"/><text x="64.5934%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.51%)</title><rect x="64.3434%" y="917" width="0.5051%" height="15" fill="rgb(221,192,48)"/><text x="64.5934%" y="927.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.51%)</title><rect x="64.3434%" y="901" width="0.5051%" height="15" fill="rgb(219,137,20)"/><text x="64.5934%" y="911.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.51%)</title><rect x="64.3434%" y="885" width="0.5051%" height="15" fill="rgb(219,84,11)"/><text x="64.5934%" y="895.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="64.4444%" y="869" width="0.4040%" height="15" fill="rgb(224,10,23)"/><text x="64.6944%" y="879.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.8485%" y="1029" width="0.1010%" height="15" fill="rgb(248,22,39)"/><text x="65.0985%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.8485%" y="1013" width="0.1010%" height="15" fill="rgb(212,154,20)"/><text x="65.0985%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.8485%" y="997" width="0.1010%" height="15" fill="rgb(236,199,50)"/><text x="65.0985%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="64.8485%" y="981" width="0.1010%" height="15" fill="rgb(211,9,17)"/><text x="65.0985%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="64.8485%" y="965" width="0.1010%" height="15" fill="rgb(243,216,36)"/><text x="65.0985%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="64.8485%" y="949" width="0.1010%" height="15" fill="rgb(250,2,10)"/><text x="65.0985%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="64.8485%" y="933" width="0.1010%" height="15" fill="rgb(226,50,48)"/><text x="65.0985%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="64.8485%" y="917" width="0.1010%" height="15" fill="rgb(243,81,16)"/><text x="65.0985%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="64.8485%" y="901" width="0.1010%" height="15" fill="rgb(250,14,2)"/><text x="65.0985%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="64.8485%" y="885" width="0.1010%" height="15" fill="rgb(233,135,29)"/><text x="65.0985%" y="895.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (8 samples, 0.81%)</title><rect x="64.2424%" y="1045" width="0.8081%" height="15" fill="rgb(224,64,43)"/><text x="64.4924%" y="1055.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.9495%" y="1029" width="0.1010%" height="15" fill="rgb(238,84,13)"/><text x="65.1995%" y="1039.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.9495%" y="1013" width="0.1010%" height="15" fill="rgb(253,48,26)"/><text x="65.1995%" y="1023.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.9495%" y="997" width="0.1010%" height="15" fill="rgb(205,223,31)"/><text x="65.1995%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="64.9495%" y="981" width="0.1010%" height="15" fill="rgb(221,41,32)"/><text x="65.1995%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="64.9495%" y="965" width="0.1010%" height="15" fill="rgb(213,158,31)"/><text x="65.1995%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="64.9495%" y="949" width="0.1010%" height="15" fill="rgb(245,126,43)"/><text x="65.1995%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="64.9495%" y="933" width="0.1010%" height="15" fill="rgb(227,7,22)"/><text x="65.1995%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="64.9495%" y="917" width="0.1010%" height="15" fill="rgb(252,90,44)"/><text x="65.1995%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="64.9495%" y="901" width="0.1010%" height="15" fill="rgb(253,91,0)"/><text x="65.1995%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="64.9495%" y="885" width="0.1010%" height="15" fill="rgb(252,175,49)"/><text x="65.1995%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="64.9495%" y="869" width="0.1010%" height="15" fill="rgb(246,150,1)"/><text x="65.1995%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="64.9495%" y="853" width="0.1010%" height="15" fill="rgb(241,192,25)"/><text x="65.1995%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="64.9495%" y="837" width="0.1010%" height="15" fill="rgb(239,187,11)"/><text x="65.1995%" y="847.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="65.0505%" y="1045" width="0.2020%" height="15" fill="rgb(218,202,51)"/><text x="65.3005%" y="1055.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="65.1515%" y="1029" width="0.1010%" height="15" fill="rgb(225,176,8)"/><text x="65.4015%" y="1039.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="65.1515%" y="1013" width="0.1010%" height="15" fill="rgb(219,122,41)"/><text x="65.4015%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="65.1515%" y="997" width="0.1010%" height="15" fill="rgb(248,140,20)"/><text x="65.4015%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="65.1515%" y="981" width="0.1010%" height="15" fill="rgb(245,41,37)"/><text x="65.4015%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="65.1515%" y="965" width="0.1010%" height="15" fill="rgb(235,82,39)"/><text x="65.4015%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="65.1515%" y="949" width="0.1010%" height="15" fill="rgb(230,108,42)"/><text x="65.4015%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="65.1515%" y="933" width="0.1010%" height="15" fill="rgb(215,150,50)"/><text x="65.4015%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="65.1515%" y="917" width="0.1010%" height="15" fill="rgb(233,212,5)"/><text x="65.4015%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="65.1515%" y="901" width="0.1010%" height="15" fill="rgb(245,80,22)"/><text x="65.4015%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="65.1515%" y="885" width="0.1010%" height="15" fill="rgb(238,129,16)"/><text x="65.4015%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="65.1515%" y="869" width="0.1010%" height="15" fill="rgb(240,19,0)"/><text x="65.4015%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="65.1515%" y="853" width="0.1010%" height="15" fill="rgb(232,42,35)"/><text x="65.4015%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="65.1515%" y="837" width="0.1010%" height="15" fill="rgb(223,130,24)"/><text x="65.4015%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="65.1515%" y="821" width="0.1010%" height="15" fill="rgb(237,16,22)"/><text x="65.4015%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="65.1515%" y="805" width="0.1010%" height="15" fill="rgb(248,192,20)"/><text x="65.4015%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="65.1515%" y="789" width="0.1010%" height="15" fill="rgb(233,167,2)"/><text x="65.4015%" y="799.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="65.1515%" y="773" width="0.1010%" height="15" fill="rgb(252,71,44)"/><text x="65.4015%" y="783.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="65.1515%" y="757" width="0.1010%" height="15" fill="rgb(238,37,47)"/><text x="65.4015%" y="767.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="65.1515%" y="741" width="0.1010%" height="15" fill="rgb(214,202,54)"/><text x="65.4015%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="65.1515%" y="725" width="0.1010%" height="15" fill="rgb(254,165,40)"/><text x="65.4015%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="65.1515%" y="709" width="0.1010%" height="15" fill="rgb(246,173,38)"/><text x="65.4015%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="65.1515%" y="693" width="0.1010%" height="15" fill="rgb(215,3,27)"/><text x="65.4015%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="65.1515%" y="677" width="0.1010%" height="15" fill="rgb(239,169,51)"/><text x="65.4015%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="65.1515%" y="661" width="0.1010%" height="15" fill="rgb(212,5,25)"/><text x="65.4015%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="65.1515%" y="645" width="0.1010%" height="15" fill="rgb(243,45,17)"/><text x="65.4015%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="65.1515%" y="629" width="0.1010%" height="15" fill="rgb(242,97,9)"/><text x="65.4015%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="65.2525%" y="1045" width="0.1010%" height="15" fill="rgb(228,71,31)"/><text x="65.5025%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.10%)</title><rect x="65.3535%" y="1045" width="0.1010%" height="15" fill="rgb(252,184,16)"/><text x="65.6035%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="65.3535%" y="1029" width="0.1010%" height="15" fill="rgb(236,169,46)"/><text x="65.6035%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="65.3535%" y="1013" width="0.1010%" height="15" fill="rgb(207,17,47)"/><text x="65.6035%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="65.3535%" y="997" width="0.1010%" height="15" fill="rgb(206,201,28)"/><text x="65.6035%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="65.3535%" y="981" width="0.1010%" height="15" fill="rgb(224,184,23)"/><text x="65.6035%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="65.3535%" y="965" width="0.1010%" height="15" fill="rgb(208,139,48)"/><text x="65.6035%" y="975.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="65.3535%" y="949" width="0.1010%" height="15" fill="rgb(208,130,10)"/><text x="65.6035%" y="959.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="65.3535%" y="933" width="0.1010%" height="15" fill="rgb(211,213,45)"/><text x="65.6035%" y="943.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="65.3535%" y="917" width="0.1010%" height="15" fill="rgb(235,100,30)"/><text x="65.6035%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="65.3535%" y="901" width="0.1010%" height="15" fill="rgb(206,144,31)"/><text x="65.6035%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="65.4545%" y="965" width="0.1010%" height="15" fill="rgb(224,200,26)"/><text x="65.7045%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.4545%" y="949" width="0.1010%" height="15" fill="rgb(247,104,53)"/><text x="65.7045%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.4545%" y="933" width="0.1010%" height="15" fill="rgb(220,14,17)"/><text x="65.7045%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.4545%" y="917" width="0.1010%" height="15" fill="rgb(230,140,40)"/><text x="65.7045%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.4545%" y="901" width="0.1010%" height="15" fill="rgb(229,2,41)"/><text x="65.7045%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="65.4545%" y="1029" width="0.2020%" height="15" fill="rgb(232,89,16)"/><text x="65.7045%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="65.4545%" y="1013" width="0.2020%" height="15" fill="rgb(247,59,52)"/><text x="65.7045%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="65.4545%" y="997" width="0.2020%" height="15" fill="rgb(226,110,21)"/><text x="65.7045%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="65.4545%" y="981" width="0.2020%" height="15" fill="rgb(224,176,43)"/><text x="65.7045%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.5556%" y="965" width="0.1010%" height="15" fill="rgb(221,73,6)"/><text x="65.8056%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="65.5556%" y="949" width="0.1010%" height="15" fill="rgb(232,78,19)"/><text x="65.8056%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.5556%" y="933" width="0.1010%" height="15" fill="rgb(233,112,48)"/><text x="65.8056%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.5556%" y="917" width="0.1010%" height="15" fill="rgb(243,131,47)"/><text x="65.8056%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="65.5556%" y="901" width="0.1010%" height="15" fill="rgb(226,51,1)"/><text x="65.8056%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="65.6566%" y="1013" width="0.1010%" height="15" fill="rgb(247,58,7)"/><text x="65.9066%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="65.6566%" y="997" width="0.1010%" height="15" fill="rgb(209,7,32)"/><text x="65.9066%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="65.6566%" y="981" width="0.1010%" height="15" fill="rgb(209,39,41)"/><text x="65.9066%" y="991.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="65.6566%" y="965" width="0.1010%" height="15" fill="rgb(226,182,46)"/><text x="65.9066%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="65.6566%" y="949" width="0.1010%" height="15" fill="rgb(230,219,10)"/><text x="65.9066%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="65.7576%" y="949" width="0.1010%" height="15" fill="rgb(227,175,30)"/><text x="66.0076%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.7576%" y="933" width="0.1010%" height="15" fill="rgb(217,2,50)"/><text x="66.0076%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.7576%" y="917" width="0.1010%" height="15" fill="rgb(229,160,0)"/><text x="66.0076%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.7576%" y="901" width="0.1010%" height="15" fill="rgb(207,78,37)"/><text x="66.0076%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="65.8586%" y="933" width="0.1010%" height="15" fill="rgb(225,57,0)"/><text x="66.1086%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="65.8586%" y="917" width="0.1010%" height="15" fill="rgb(232,154,2)"/><text x="66.1086%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="65.8586%" y="901" width="0.1010%" height="15" fill="rgb(241,212,25)"/><text x="66.1086%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="65.8586%" y="885" width="0.1010%" height="15" fill="rgb(226,69,20)"/><text x="66.1086%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="65.7576%" y="1013" width="0.3030%" height="15" fill="rgb(247,184,54)"/><text x="66.0076%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="65.7576%" y="997" width="0.3030%" height="15" fill="rgb(210,145,0)"/><text x="66.0076%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="65.7576%" y="981" width="0.3030%" height="15" fill="rgb(253,82,12)"/><text x="66.0076%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="65.7576%" y="965" width="0.3030%" height="15" fill="rgb(245,42,11)"/><text x="66.0076%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="65.8586%" y="949" width="0.2020%" height="15" fill="rgb(219,147,32)"/><text x="66.1086%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.9596%" y="933" width="0.1010%" height="15" fill="rgb(246,12,7)"/><text x="66.2096%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="65.9596%" y="917" width="0.1010%" height="15" fill="rgb(243,50,9)"/><text x="66.2096%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="65.9596%" y="901" width="0.1010%" height="15" fill="rgb(219,149,6)"/><text x="66.2096%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="65.9596%" y="885" width="0.1010%" height="15" fill="rgb(241,51,42)"/><text x="66.2096%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="65.9596%" y="869" width="0.1010%" height="15" fill="rgb(226,128,27)"/><text x="66.2096%" y="879.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="65.9596%" y="853" width="0.1010%" height="15" fill="rgb(244,144,4)"/><text x="66.2096%" y="863.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="66.0606%" y="933" width="0.1010%" height="15" fill="rgb(221,4,13)"/><text x="66.3106%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="66.0606%" y="917" width="0.1010%" height="15" fill="rgb(208,170,28)"/><text x="66.3106%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="66.0606%" y="981" width="0.2020%" height="15" fill="rgb(226,131,13)"/><text x="66.3106%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="66.0606%" y="965" width="0.2020%" height="15" fill="rgb(215,72,41)"/><text x="66.3106%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="66.0606%" y="949" width="0.2020%" height="15" fill="rgb(243,108,20)"/><text x="66.3106%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="66.1616%" y="933" width="0.1010%" height="15" fill="rgb(230,189,17)"/><text x="66.4116%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.91%)</title><rect x="65.4545%" y="1045" width="0.9091%" height="15" fill="rgb(220,50,17)"/><text x="65.7045%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.71%)</title><rect x="65.6566%" y="1029" width="0.7071%" height="15" fill="rgb(248,152,48)"/><text x="65.9066%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="66.0606%" y="1013" width="0.3030%" height="15" fill="rgb(244,91,11)"/><text x="66.3106%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="66.0606%" y="997" width="0.3030%" height="15" fill="rgb(220,157,5)"/><text x="66.3106%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="66.2626%" y="981" width="0.1010%" height="15" fill="rgb(253,137,8)"/><text x="66.5126%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="66.2626%" y="965" width="0.1010%" height="15" fill="rgb(217,137,51)"/><text x="66.5126%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (1 samples, 0.10%)</title><rect x="66.3636%" y="1013" width="0.1010%" height="15" fill="rgb(218,209,53)"/><text x="66.6136%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="66.3636%" y="997" width="0.1010%" height="15" fill="rgb(249,137,25)"/><text x="66.6136%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="66.3636%" y="981" width="0.1010%" height="15" fill="rgb(239,155,26)"/><text x="66.6136%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="66.3636%" y="965" width="0.1010%" height="15" fill="rgb(227,85,46)"/><text x="66.6136%" y="975.50"></text></g><g><title>polar::vm::PolarVirtualMachine::choose (2 samples, 0.20%)</title><rect x="66.3636%" y="1045" width="0.2020%" height="15" fill="rgb(251,107,43)"/><text x="66.6136%" y="1055.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (2 samples, 0.20%)</title><rect x="66.3636%" y="1029" width="0.2020%" height="15" fill="rgb(234,170,33)"/><text x="66.6136%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (1 samples, 0.10%)</title><rect x="66.4646%" y="1013" width="0.1010%" height="15" fill="rgb(206,29,35)"/><text x="66.7146%" y="1023.50"></text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (42 samples, 4.24%)</title><rect x="62.4242%" y="1061" width="4.2424%" height="15" fill="rgb(227,138,25)"/><text x="62.6742%" y="1071.50">polar..</text></g><g><title>polar::vm::PolarVirtualMachine::rename_vars (1 samples, 0.10%)</title><rect x="66.5657%" y="1045" width="0.1010%" height="15" fill="rgb(249,131,35)"/><text x="66.8157%" y="1055.50"></text></g><g><title>polar::types::Rule::map (1 samples, 0.10%)</title><rect x="66.5657%" y="1029" width="0.1010%" height="15" fill="rgb(239,6,40)"/><text x="66.8157%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="66.5657%" y="1013" width="0.1010%" height="15" fill="rgb(246,136,47)"/><text x="66.8157%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="66.5657%" y="997" width="0.1010%" height="15" fill="rgb(253,58,26)"/><text x="66.8157%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="66.5657%" y="981" width="0.1010%" height="15" fill="rgb(237,141,10)"/><text x="66.8157%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="66.5657%" y="965" width="0.1010%" height="15" fill="rgb(234,156,12)"/><text x="66.8157%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="66.5657%" y="949" width="0.1010%" height="15" fill="rgb(243,224,36)"/><text x="66.8157%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="66.5657%" y="933" width="0.1010%" height="15" fill="rgb(205,229,51)"/><text x="66.8157%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="66.5657%" y="917" width="0.1010%" height="15" fill="rgb(223,189,4)"/><text x="66.8157%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="66.5657%" y="901" width="0.1010%" height="15" fill="rgb(249,167,54)"/><text x="66.8157%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="66.5657%" y="885" width="0.1010%" height="15" fill="rgb(218,34,28)"/><text x="66.8157%" y="895.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="66.5657%" y="869" width="0.1010%" height="15" fill="rgb(232,109,42)"/><text x="66.8157%" y="879.50"></text></g><g><title>polar::types::Rule::map::_{{closure}} (1 samples, 0.10%)</title><rect x="66.5657%" y="853" width="0.1010%" height="15" fill="rgb(248,214,46)"/><text x="66.8157%" y="863.50"></text></g><g><title>polar::types::Parameter::map (1 samples, 0.10%)</title><rect x="66.5657%" y="837" width="0.1010%" height="15" fill="rgb(244,216,40)"/><text x="66.8157%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="66.5657%" y="821" width="0.1010%" height="15" fill="rgb(231,226,31)"/><text x="66.8157%" y="831.50"></text></g><g><title>__GI_getenv (10 samples, 1.01%)</title><rect x="66.7677%" y="981" width="1.0101%" height="15" fill="rgb(238,38,43)"/><text x="67.0177%" y="991.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.20%)</title><rect x="67.5758%" y="965" width="0.2020%" height="15" fill="rgb(208,88,43)"/><text x="67.8258%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="67.7778%" y="981" width="0.1010%" height="15" fill="rgb(205,136,37)"/><text x="68.0278%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="67.7778%" y="965" width="0.1010%" height="15" fill="rgb(237,34,14)"/><text x="68.0278%" y="975.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.10%)</title><rect x="67.7778%" y="949" width="0.1010%" height="15" fill="rgb(236,193,44)"/><text x="68.0278%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="67.7778%" y="933" width="0.1010%" height="15" fill="rgb(231,48,10)"/><text x="68.0278%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="67.7778%" y="917" width="0.1010%" height="15" fill="rgb(213,141,34)"/><text x="68.0278%" y="927.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="67.7778%" y="901" width="0.1010%" height="15" fill="rgb(249,130,34)"/><text x="68.0278%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="67.7778%" y="885" width="0.1010%" height="15" fill="rgb(219,42,41)"/><text x="68.0278%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="68.0808%" y="949" width="0.1010%" height="15" fill="rgb(224,100,54)"/><text x="68.3308%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="68.0808%" y="933" width="0.1010%" height="15" fill="rgb(229,200,27)"/><text x="68.3308%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="68.0808%" y="917" width="0.1010%" height="15" fill="rgb(217,118,10)"/><text x="68.3308%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="68.0808%" y="901" width="0.1010%" height="15" fill="rgb(206,22,3)"/><text x="68.3308%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="68.0808%" y="885" width="0.1010%" height="15" fill="rgb(232,163,46)"/><text x="68.3308%" y="895.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (100 samples, 10.10%)</title><rect x="58.3838%" y="1541" width="10.1010%" height="15" fill="rgb(206,95,13)"/><text x="58.6338%" y="1551.50">&lt;criterion::rou..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (100 samples, 10.10%)</title><rect x="58.3838%" y="1525" width="10.1010%" height="15" fill="rgb(253,154,18)"/><text x="58.6338%" y="1535.50">core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (100 samples, 10.10%)</title><rect x="58.3838%" y="1509" width="10.1010%" height="15" fill="rgb(219,32,23)"/><text x="58.6338%" y="1519.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (100 samples, 10.10%)</title><rect x="58.3838%" y="1493" width="10.1010%" height="15" fill="rgb(230,191,45)"/><text x="58.6338%" y="1503.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (100 samples, 10.10%)</title><rect x="58.3838%" y="1477" width="10.1010%" height="15" fill="rgb(229,64,36)"/><text x="58.6338%" y="1487.50">&lt;alloc::vec::Ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (100 samples, 10.10%)</title><rect x="58.3838%" y="1461" width="10.1010%" height="15" fill="rgb(205,129,25)"/><text x="58.6338%" y="1471.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 10.10%)</title><rect x="58.3838%" y="1445" width="10.1010%" height="15" fill="rgb(254,112,7)"/><text x="58.6338%" y="1455.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (100 samples, 10.10%)</title><rect x="58.3838%" y="1429" width="10.1010%" height="15" fill="rgb(226,53,48)"/><text x="58.6338%" y="1439.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (100 samples, 10.10%)</title><rect x="58.3838%" y="1413" width="10.1010%" height="15" fill="rgb(214,153,38)"/><text x="58.6338%" y="1423.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1397" width="10.1010%" height="15" fill="rgb(243,101,7)"/><text x="58.6338%" y="1407.50">core::iter::tra..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1381" width="10.1010%" height="15" fill="rgb(240,140,22)"/><text x="58.6338%" y="1391.50">core::iter::ada..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1365" width="10.1010%" height="15" fill="rgb(235,114,2)"/><text x="58.6338%" y="1375.50">&lt;criterion::rou..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1349" width="10.1010%" height="15" fill="rgb(242,59,12)"/><text x="58.6338%" y="1359.50">criterion::benc..</text></g><g><title>bench::too_many_predicates::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1333" width="10.1010%" height="15" fill="rgb(252,134,9)"/><text x="58.6338%" y="1343.50">bench::too_many..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (100 samples, 10.10%)</title><rect x="58.3838%" y="1317" width="10.1010%" height="15" fill="rgb(236,4,44)"/><text x="58.6338%" y="1327.50">criterion::Benc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (100 samples, 10.10%)</title><rect x="58.3838%" y="1301" width="10.1010%" height="15" fill="rgb(254,172,41)"/><text x="58.6338%" y="1311.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (100 samples, 10.10%)</title><rect x="58.3838%" y="1285" width="10.1010%" height="15" fill="rgb(244,63,20)"/><text x="58.6338%" y="1295.50">&lt;alloc::vec::Ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (100 samples, 10.10%)</title><rect x="58.3838%" y="1269" width="10.1010%" height="15" fill="rgb(250,73,31)"/><text x="58.6338%" y="1279.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 10.10%)</title><rect x="58.3838%" y="1253" width="10.1010%" height="15" fill="rgb(241,38,36)"/><text x="58.6338%" y="1263.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (100 samples, 10.10%)</title><rect x="58.3838%" y="1237" width="10.1010%" height="15" fill="rgb(245,211,2)"/><text x="58.6338%" y="1247.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (100 samples, 10.10%)</title><rect x="58.3838%" y="1221" width="10.1010%" height="15" fill="rgb(206,120,28)"/><text x="58.6338%" y="1231.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1205" width="10.1010%" height="15" fill="rgb(211,59,34)"/><text x="58.6338%" y="1215.50">core::iter::tra..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1189" width="10.1010%" height="15" fill="rgb(233,168,5)"/><text x="58.6338%" y="1199.50">core::iter::ada..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (100 samples, 10.10%)</title><rect x="58.3838%" y="1173" width="10.1010%" height="15" fill="rgb(234,33,13)"/><text x="58.6338%" y="1183.50">core::ops::func..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (100 samples, 10.10%)</title><rect x="58.3838%" y="1157" width="10.1010%" height="15" fill="rgb(231,150,26)"/><text x="58.6338%" y="1167.50">bench::simple_q..</text></g><g><title>bench::Runner::run (100 samples, 10.10%)</title><rect x="58.3838%" y="1141" width="10.1010%" height="15" fill="rgb(217,191,4)"/><text x="58.6338%" y="1151.50">bench::Runner::..</text></g><g><title>bench::Runner::next (100 samples, 10.10%)</title><rect x="58.3838%" y="1125" width="10.1010%" height="15" fill="rgb(246,198,38)"/><text x="58.6338%" y="1135.50">bench::Runner::..</text></g><g><title>polar::polar::Polar::query (100 samples, 10.10%)</title><rect x="58.3838%" y="1109" width="10.1010%" height="15" fill="rgb(245,64,37)"/><text x="58.6338%" y="1119.50">polar::polar::P..</text></g><g><title>polar::vm::PolarVirtualMachine::run (100 samples, 10.10%)</title><rect x="58.3838%" y="1093" width="10.1010%" height="15" fill="rgb(250,30,36)"/><text x="58.6338%" y="1103.50">polar::vm::Pola..</text></g><g><title>polar::vm::PolarVirtualMachine::next (86 samples, 8.69%)</title><rect x="59.7980%" y="1077" width="8.6869%" height="15" fill="rgb(217,86,53)"/><text x="60.0480%" y="1087.50">polar::vm::P..</text></g><g><title>std::env::var (18 samples, 1.82%)</title><rect x="66.6667%" y="1061" width="1.8182%" height="15" fill="rgb(228,157,16)"/><text x="66.9167%" y="1071.50">s..</text></g><g><title>std::env::_var (18 samples, 1.82%)</title><rect x="66.6667%" y="1045" width="1.8182%" height="15" fill="rgb(217,59,31)"/><text x="66.9167%" y="1055.50">s..</text></g><g><title>std::env::var_os (18 samples, 1.82%)</title><rect x="66.6667%" y="1029" width="1.8182%" height="15" fill="rgb(237,138,41)"/><text x="66.9167%" y="1039.50">s..</text></g><g><title>std::env::_var_os (18 samples, 1.82%)</title><rect x="66.6667%" y="1013" width="1.8182%" height="15" fill="rgb(227,91,49)"/><text x="66.9167%" y="1023.50">s..</text></g><g><title>std::sys::unix::os::getenv (17 samples, 1.72%)</title><rect x="66.7677%" y="997" width="1.7172%" height="15" fill="rgb(247,21,44)"/><text x="67.0177%" y="1007.50"></text></g><g><title>std::ffi::c_str::CString::new (6 samples, 0.61%)</title><rect x="67.8788%" y="981" width="0.6061%" height="15" fill="rgb(219,210,51)"/><text x="68.1288%" y="991.50"></text></g><g><title>&lt;&amp;str as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (6 samples, 0.61%)</title><rect x="67.8788%" y="965" width="0.6061%" height="15" fill="rgb(209,140,6)"/><text x="68.1288%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="68.1818%" y="949" width="0.3030%" height="15" fill="rgb(221,188,24)"/><text x="68.4318%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="68.1818%" y="933" width="0.3030%" height="15" fill="rgb(232,154,20)"/><text x="68.4318%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.30%)</title><rect x="68.1818%" y="917" width="0.3030%" height="15" fill="rgb(244,137,50)"/><text x="68.4318%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.30%)</title><rect x="68.1818%" y="901" width="0.3030%" height="15" fill="rgb(225,185,43)"/><text x="68.4318%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.30%)</title><rect x="68.1818%" y="885" width="0.3030%" height="15" fill="rgb(213,205,38)"/><text x="68.4318%" y="895.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="68.1818%" y="869" width="0.3030%" height="15" fill="rgb(236,73,12)"/><text x="68.4318%" y="879.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="68.1818%" y="853" width="0.3030%" height="15" fill="rgb(235,219,13)"/><text x="68.4318%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="68.3838%" y="837" width="0.1010%" height="15" fill="rgb(218,59,36)"/><text x="68.6338%" y="847.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2 samples, 0.20%)</title><rect x="68.4848%" y="1253" width="0.2020%" height="15" fill="rgb(205,110,39)"/><text x="68.7348%" y="1263.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="68.4848%" y="1237" width="0.2020%" height="15" fill="rgb(218,206,42)"/><text x="68.7348%" y="1247.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="68.4848%" y="1221" width="0.2020%" height="15" fill="rgb(248,125,24)"/><text x="68.7348%" y="1231.50"></text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (2 samples, 0.20%)</title><rect x="68.4848%" y="1205" width="0.2020%" height="15" fill="rgb(242,28,27)"/><text x="68.7348%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="68.4848%" y="1189" width="0.2020%" height="15" fill="rgb(216,228,15)"/><text x="68.7348%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="68.4848%" y="1173" width="0.2020%" height="15" fill="rgb(235,116,46)"/><text x="68.7348%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="68.4848%" y="1157" width="0.2020%" height="15" fill="rgb(224,18,32)"/><text x="68.7348%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="68.4848%" y="1141" width="0.2020%" height="15" fill="rgb(252,5,12)"/><text x="68.7348%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="68.4848%" y="1125" width="0.2020%" height="15" fill="rgb(251,36,5)"/><text x="68.7348%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="68.4848%" y="1109" width="0.2020%" height="15" fill="rgb(217,53,14)"/><text x="68.7348%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="68.4848%" y="1093" width="0.2020%" height="15" fill="rgb(215,86,45)"/><text x="68.7348%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="68.4848%" y="1077" width="0.2020%" height="15" fill="rgb(242,169,11)"/><text x="68.7348%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="1061" width="0.2020%" height="15" fill="rgb(211,213,45)"/><text x="68.7348%" y="1071.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="1045" width="0.2020%" height="15" fill="rgb(205,88,11)"/><text x="68.7348%" y="1055.50"></text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="1029" width="0.2020%" height="15" fill="rgb(252,69,26)"/><text x="68.7348%" y="1039.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="68.4848%" y="1013" width="0.2020%" height="15" fill="rgb(246,123,37)"/><text x="68.7348%" y="1023.50"></text></g><g><title>polar::formatting::to_polar::format_args (2 samples, 0.20%)</title><rect x="68.4848%" y="997" width="0.2020%" height="15" fill="rgb(212,205,5)"/><text x="68.7348%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="68.4848%" y="981" width="0.2020%" height="15" fill="rgb(253,148,0)"/><text x="68.7348%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="68.4848%" y="965" width="0.2020%" height="15" fill="rgb(239,22,4)"/><text x="68.7348%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="68.4848%" y="949" width="0.2020%" height="15" fill="rgb(226,26,53)"/><text x="68.7348%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="68.4848%" y="933" width="0.2020%" height="15" fill="rgb(225,229,45)"/><text x="68.7348%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="68.4848%" y="917" width="0.2020%" height="15" fill="rgb(220,60,37)"/><text x="68.7348%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="68.4848%" y="901" width="0.2020%" height="15" fill="rgb(217,180,35)"/><text x="68.7348%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="68.4848%" y="885" width="0.2020%" height="15" fill="rgb(229,7,53)"/><text x="68.7348%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="68.4848%" y="869" width="0.2020%" height="15" fill="rgb(254,137,3)"/><text x="68.7348%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="853" width="0.2020%" height="15" fill="rgb(215,140,41)"/><text x="68.7348%" y="863.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="837" width="0.2020%" height="15" fill="rgb(250,80,15)"/><text x="68.7348%" y="847.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="821" width="0.2020%" height="15" fill="rgb(252,191,6)"/><text x="68.7348%" y="831.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (2 samples, 0.20%)</title><rect x="68.4848%" y="805" width="0.2020%" height="15" fill="rgb(246,217,18)"/><text x="68.7348%" y="815.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="68.4848%" y="789" width="0.2020%" height="15" fill="rgb(223,93,7)"/><text x="68.7348%" y="799.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="68.4848%" y="773" width="0.2020%" height="15" fill="rgb(225,55,52)"/><text x="68.7348%" y="783.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="68.4848%" y="757" width="0.2020%" height="15" fill="rgb(240,31,24)"/><text x="68.7348%" y="767.50"></text></g><g><title>polar::formatting::to_polar::format_args (2 samples, 0.20%)</title><rect x="68.4848%" y="741" width="0.2020%" height="15" fill="rgb(205,56,52)"/><text x="68.7348%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="68.4848%" y="725" width="0.2020%" height="15" fill="rgb(246,146,12)"/><text x="68.7348%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="68.4848%" y="709" width="0.2020%" height="15" fill="rgb(239,84,36)"/><text x="68.7348%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="68.4848%" y="693" width="0.2020%" height="15" fill="rgb(207,41,40)"/><text x="68.7348%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="68.4848%" y="677" width="0.2020%" height="15" fill="rgb(241,179,25)"/><text x="68.7348%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="68.4848%" y="661" width="0.2020%" height="15" fill="rgb(210,0,34)"/><text x="68.7348%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="68.4848%" y="645" width="0.2020%" height="15" fill="rgb(225,217,29)"/><text x="68.7348%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="68.4848%" y="629" width="0.2020%" height="15" fill="rgb(216,191,38)"/><text x="68.7348%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="68.4848%" y="613" width="0.2020%" height="15" fill="rgb(232,140,52)"/><text x="68.7348%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="597" width="0.2020%" height="15" fill="rgb(223,158,51)"/><text x="68.7348%" y="607.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="581" width="0.2020%" height="15" fill="rgb(235,29,51)"/><text x="68.7348%" y="591.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (2 samples, 0.20%)</title><rect x="68.4848%" y="565" width="0.2020%" height="15" fill="rgb(215,181,18)"/><text x="68.7348%" y="575.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (2 samples, 0.20%)</title><rect x="68.4848%" y="549" width="0.2020%" height="15" fill="rgb(227,125,34)"/><text x="68.7348%" y="559.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="68.4848%" y="533" width="0.2020%" height="15" fill="rgb(230,197,49)"/><text x="68.7348%" y="543.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="68.4848%" y="517" width="0.2020%" height="15" fill="rgb(239,141,16)"/><text x="68.7348%" y="527.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.20%)</title><rect x="68.4848%" y="501" width="0.2020%" height="15" fill="rgb(225,105,43)"/><text x="68.7348%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="68.4848%" y="485" width="0.2020%" height="15" fill="rgb(214,131,14)"/><text x="68.7348%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="68.4848%" y="469" width="0.2020%" height="15" fill="rgb(229,177,11)"/><text x="68.7348%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (2 samples, 0.20%)</title><rect x="68.4848%" y="453" width="0.2020%" height="15" fill="rgb(231,180,14)"/><text x="68.7348%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="68.5859%" y="437" width="0.1010%" height="15" fill="rgb(232,88,2)"/><text x="68.8359%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="68.5859%" y="421" width="0.1010%" height="15" fill="rgb(205,220,8)"/><text x="68.8359%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="68.5859%" y="405" width="0.1010%" height="15" fill="rgb(225,23,53)"/><text x="68.8359%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="68.5859%" y="389" width="0.1010%" height="15" fill="rgb(213,62,29)"/><text x="68.8359%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="68.5859%" y="373" width="0.1010%" height="15" fill="rgb(227,75,7)"/><text x="68.8359%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="68.5859%" y="357" width="0.1010%" height="15" fill="rgb(207,105,14)"/><text x="68.8359%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="68.5859%" y="341" width="0.1010%" height="15" fill="rgb(245,62,29)"/><text x="68.8359%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="68.5859%" y="325" width="0.1010%" height="15" fill="rgb(236,202,4)"/><text x="68.8359%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="68.5859%" y="309" width="0.1010%" height="15" fill="rgb(250,67,1)"/><text x="68.8359%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="68.5859%" y="293" width="0.1010%" height="15" fill="rgb(253,115,44)"/><text x="68.8359%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="68.5859%" y="277" width="0.1010%" height="15" fill="rgb(251,139,18)"/><text x="68.8359%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="68.5859%" y="261" width="0.1010%" height="15" fill="rgb(218,22,32)"/><text x="68.8359%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="68.5859%" y="245" width="0.1010%" height="15" fill="rgb(243,53,5)"/><text x="68.8359%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="68.7879%" y="1221" width="0.1010%" height="15" fill="rgb(227,56,16)"/><text x="69.0379%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="68.7879%" y="1205" width="0.1010%" height="15" fill="rgb(245,53,0)"/><text x="69.0379%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="68.7879%" y="1189" width="0.1010%" height="15" fill="rgb(216,170,35)"/><text x="69.0379%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="68.7879%" y="1173" width="0.1010%" height="15" fill="rgb(211,200,8)"/><text x="69.0379%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="68.7879%" y="1157" width="0.1010%" height="15" fill="rgb(228,204,44)"/><text x="69.0379%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (1 samples, 0.10%)</title><rect x="68.8889%" y="1205" width="0.1010%" height="15" fill="rgb(214,121,17)"/><text x="69.1389%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="68.8889%" y="1189" width="0.1010%" height="15" fill="rgb(233,64,38)"/><text x="69.1389%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="68.8889%" y="1173" width="0.1010%" height="15" fill="rgb(253,54,19)"/><text x="69.1389%" y="1183.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="68.8889%" y="1157" width="0.1010%" height="15" fill="rgb(253,94,18)"/><text x="69.1389%" y="1167.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (3 samples, 0.30%)</title><rect x="68.7879%" y="1237" width="0.3030%" height="15" fill="rgb(227,57,52)"/><text x="69.0379%" y="1247.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (2 samples, 0.20%)</title><rect x="68.8889%" y="1221" width="0.2020%" height="15" fill="rgb(230,228,50)"/><text x="69.1389%" y="1231.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (1 samples, 0.10%)</title><rect x="68.9899%" y="1205" width="0.1010%" height="15" fill="rgb(217,205,27)"/><text x="69.2399%" y="1215.50"></text></g><g><title>core::ptr::swap (1 samples, 0.10%)</title><rect x="68.9899%" y="1189" width="0.1010%" height="15" fill="rgb(252,71,50)"/><text x="69.2399%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="68.9899%" y="1173" width="0.1010%" height="15" fill="rgb(209,86,4)"/><text x="69.2399%" y="1183.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="68.9899%" y="1157" width="0.1010%" height="15" fill="rgb(229,94,0)"/><text x="69.2399%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="69.0909%" y="1221" width="0.1010%" height="15" fill="rgb(252,223,21)"/><text x="69.3409%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="69.0909%" y="1205" width="0.1010%" height="15" fill="rgb(230,210,4)"/><text x="69.3409%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="69.0909%" y="1189" width="0.1010%" height="15" fill="rgb(240,149,38)"/><text x="69.3409%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="69.0909%" y="1173" width="0.1010%" height="15" fill="rgb(254,105,20)"/><text x="69.3409%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="69.0909%" y="1157" width="0.1010%" height="15" fill="rgb(253,87,46)"/><text x="69.3409%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="69.0909%" y="1141" width="0.1010%" height="15" fill="rgb(253,116,33)"/><text x="69.3409%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="69.0909%" y="1125" width="0.1010%" height="15" fill="rgb(229,198,5)"/><text x="69.3409%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="69.0909%" y="1109" width="0.1010%" height="15" fill="rgb(242,38,37)"/><text x="69.3409%" y="1119.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="69.0909%" y="1093" width="0.1010%" height="15" fill="rgb(242,69,53)"/><text x="69.3409%" y="1103.50"></text></g><g><title>polar::vm::PolarVirtualMachine::is_more_specific (6 samples, 0.61%)</title><rect x="69.0909%" y="1237" width="0.6061%" height="15" fill="rgb(249,80,16)"/><text x="69.3409%" y="1247.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (5 samples, 0.51%)</title><rect x="69.1919%" y="1221" width="0.5051%" height="15" fill="rgb(206,128,11)"/><text x="69.4419%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (5 samples, 0.51%)</title><rect x="69.1919%" y="1205" width="0.5051%" height="15" fill="rgb(212,35,20)"/><text x="69.4419%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.51%)</title><rect x="69.1919%" y="1189" width="0.5051%" height="15" fill="rgb(236,79,13)"/><text x="69.4419%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (5 samples, 0.51%)</title><rect x="69.1919%" y="1173" width="0.5051%" height="15" fill="rgb(233,123,3)"/><text x="69.4419%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.51%)</title><rect x="69.1919%" y="1157" width="0.5051%" height="15" fill="rgb(214,93,52)"/><text x="69.4419%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.51%)</title><rect x="69.1919%" y="1141" width="0.5051%" height="15" fill="rgb(251,37,40)"/><text x="69.4419%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (5 samples, 0.51%)</title><rect x="69.1919%" y="1125" width="0.5051%" height="15" fill="rgb(227,80,54)"/><text x="69.4419%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (5 samples, 0.51%)</title><rect x="69.1919%" y="1109" width="0.5051%" height="15" fill="rgb(254,48,11)"/><text x="69.4419%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.51%)</title><rect x="69.1919%" y="1093" width="0.5051%" height="15" fill="rgb(235,193,26)"/><text x="69.4419%" y="1103.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.51%)</title><rect x="69.1919%" y="1077" width="0.5051%" height="15" fill="rgb(229,99,21)"/><text x="69.4419%" y="1087.50"></text></g><g><title>_int_realloc (5 samples, 0.51%)</title><rect x="69.1919%" y="1061" width="0.5051%" height="15" fill="rgb(211,140,41)"/><text x="69.4419%" y="1071.50"></text></g><g><title>_int_malloc (5 samples, 0.51%)</title><rect x="69.1919%" y="1045" width="0.5051%" height="15" fill="rgb(240,227,30)"/><text x="69.4419%" y="1055.50"></text></g><g><title>malloc_consolidate (4 samples, 0.40%)</title><rect x="69.2929%" y="1029" width="0.4040%" height="15" fill="rgb(215,224,45)"/><text x="69.5429%" y="1039.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="69.5960%" y="1013" width="0.1010%" height="15" fill="rgb(206,123,31)"/><text x="69.8460%" y="1023.50"></text></g><g><title>polar::vm::PolarVirtualMachine::is_subspecializer (1 samples, 0.10%)</title><rect x="69.6970%" y="1237" width="0.1010%" height="15" fill="rgb(210,138,16)"/><text x="69.9470%" y="1247.50"></text></g><g><title>polar::vm::PolarVirtualMachine::bind (1 samples, 0.10%)</title><rect x="69.6970%" y="1221" width="0.1010%" height="15" fill="rgb(228,57,28)"/><text x="69.9470%" y="1231.50"></text></g><g><title>std::env::var (1 samples, 0.10%)</title><rect x="69.6970%" y="1205" width="0.1010%" height="15" fill="rgb(242,170,10)"/><text x="69.9470%" y="1215.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query (2 samples, 0.20%)</title><rect x="69.7980%" y="1237" width="0.2020%" height="15" fill="rgb(228,214,39)"/><text x="70.0480%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.20%)</title><rect x="69.7980%" y="1221" width="0.2020%" height="15" fill="rgb(218,179,33)"/><text x="70.0480%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="69.7980%" y="1205" width="0.2020%" height="15" fill="rgb(235,193,39)"/><text x="70.0480%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="69.7980%" y="1189" width="0.2020%" height="15" fill="rgb(219,221,36)"/><text x="70.0480%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="69.7980%" y="1173" width="0.2020%" height="15" fill="rgb(248,218,19)"/><text x="70.0480%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (2 samples, 0.20%)</title><rect x="69.7980%" y="1157" width="0.2020%" height="15" fill="rgb(205,50,9)"/><text x="70.0480%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.20%)</title><rect x="69.7980%" y="1141" width="0.2020%" height="15" fill="rgb(238,81,28)"/><text x="70.0480%" y="1151.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.20%)</title><rect x="69.7980%" y="1125" width="0.2020%" height="15" fill="rgb(235,110,19)"/><text x="70.0480%" y="1135.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.20%)</title><rect x="69.7980%" y="1109" width="0.2020%" height="15" fill="rgb(214,7,14)"/><text x="70.0480%" y="1119.50"></text></g><g><title>_int_realloc (2 samples, 0.20%)</title><rect x="69.7980%" y="1093" width="0.2020%" height="15" fill="rgb(211,77,3)"/><text x="70.0480%" y="1103.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="69.7980%" y="1077" width="0.2020%" height="15" fill="rgb(229,5,9)"/><text x="70.0480%" y="1087.50"></text></g><g><title>malloc_consolidate (2 samples, 0.20%)</title><rect x="69.7980%" y="1061" width="0.2020%" height="15" fill="rgb(225,90,11)"/><text x="70.0480%" y="1071.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.0000%" y="981" width="0.1010%" height="15" fill="rgb(242,56,8)"/><text x="70.2500%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.0000%" y="965" width="0.1010%" height="15" fill="rgb(249,212,39)"/><text x="70.2500%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.0000%" y="949" width="0.1010%" height="15" fill="rgb(236,90,9)"/><text x="70.2500%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="70.0000%" y="933" width="0.1010%" height="15" fill="rgb(206,88,35)"/><text x="70.2500%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="70.0000%" y="917" width="0.1010%" height="15" fill="rgb(205,126,30)"/><text x="70.2500%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.0000%" y="901" width="0.1010%" height="15" fill="rgb(230,176,12)"/><text x="70.2500%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.0000%" y="885" width="0.1010%" height="15" fill="rgb(243,19,9)"/><text x="70.2500%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="70.0000%" y="869" width="0.1010%" height="15" fill="rgb(245,171,17)"/><text x="70.2500%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="70.0000%" y="853" width="0.1010%" height="15" fill="rgb(227,52,21)"/><text x="70.2500%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="70.0000%" y="837" width="0.1010%" height="15" fill="rgb(238,69,14)"/><text x="70.2500%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="70.0000%" y="821" width="0.1010%" height="15" fill="rgb(241,156,39)"/><text x="70.2500%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="70.0000%" y="805" width="0.1010%" height="15" fill="rgb(212,227,28)"/><text x="70.2500%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="70.0000%" y="789" width="0.1010%" height="15" fill="rgb(209,118,27)"/><text x="70.2500%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="70.0000%" y="1173" width="0.2020%" height="15" fill="rgb(226,102,5)"/><text x="70.2500%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="70.0000%" y="1157" width="0.2020%" height="15" fill="rgb(223,34,3)"/><text x="70.2500%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="70.0000%" y="1141" width="0.2020%" height="15" fill="rgb(221,81,38)"/><text x="70.2500%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="70.0000%" y="1125" width="0.2020%" height="15" fill="rgb(236,219,28)"/><text x="70.2500%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="70.0000%" y="1109" width="0.2020%" height="15" fill="rgb(213,200,14)"/><text x="70.2500%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="70.0000%" y="1093" width="0.2020%" height="15" fill="rgb(240,33,19)"/><text x="70.2500%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="70.0000%" y="1077" width="0.2020%" height="15" fill="rgb(233,113,27)"/><text x="70.2500%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="70.0000%" y="1061" width="0.2020%" height="15" fill="rgb(220,221,18)"/><text x="70.2500%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="70.0000%" y="1045" width="0.2020%" height="15" fill="rgb(238,92,8)"/><text x="70.2500%" y="1055.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="70.0000%" y="1029" width="0.2020%" height="15" fill="rgb(222,164,16)"/><text x="70.2500%" y="1039.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="70.0000%" y="1013" width="0.2020%" height="15" fill="rgb(241,119,3)"/><text x="70.2500%" y="1023.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="70.0000%" y="997" width="0.2020%" height="15" fill="rgb(241,44,8)"/><text x="70.2500%" y="1007.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.1010%" y="981" width="0.1010%" height="15" fill="rgb(230,36,40)"/><text x="70.3510%" y="991.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.1010%" y="965" width="0.1010%" height="15" fill="rgb(243,16,36)"/><text x="70.3510%" y="975.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.1010%" y="949" width="0.1010%" height="15" fill="rgb(231,4,26)"/><text x="70.3510%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.1010%" y="933" width="0.1010%" height="15" fill="rgb(240,9,31)"/><text x="70.3510%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="70.1010%" y="917" width="0.1010%" height="15" fill="rgb(207,173,15)"/><text x="70.3510%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="70.1010%" y="901" width="0.1010%" height="15" fill="rgb(224,192,53)"/><text x="70.3510%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.1010%" y="885" width="0.1010%" height="15" fill="rgb(223,67,28)"/><text x="70.3510%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.1010%" y="869" width="0.1010%" height="15" fill="rgb(211,20,47)"/><text x="70.3510%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="70.1010%" y="853" width="0.1010%" height="15" fill="rgb(240,228,2)"/><text x="70.3510%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="70.1010%" y="837" width="0.1010%" height="15" fill="rgb(248,151,12)"/><text x="70.3510%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="70.1010%" y="821" width="0.1010%" height="15" fill="rgb(244,8,39)"/><text x="70.3510%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="70.1010%" y="805" width="0.1010%" height="15" fill="rgb(222,26,8)"/><text x="70.3510%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="70.0000%" y="1221" width="0.3030%" height="15" fill="rgb(213,106,44)"/><text x="70.2500%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="70.0000%" y="1205" width="0.3030%" height="15" fill="rgb(214,129,20)"/><text x="70.2500%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="70.0000%" y="1189" width="0.3030%" height="15" fill="rgb(212,32,13)"/><text x="70.2500%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.2020%" y="1173" width="0.1010%" height="15" fill="rgb(208,168,33)"/><text x="70.4520%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.2020%" y="1157" width="0.1010%" height="15" fill="rgb(231,207,8)"/><text x="70.4520%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="70.2020%" y="1141" width="0.1010%" height="15" fill="rgb(235,219,23)"/><text x="70.4520%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="70.2020%" y="1125" width="0.1010%" height="15" fill="rgb(226,216,26)"/><text x="70.4520%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="70.2020%" y="1109" width="0.1010%" height="15" fill="rgb(239,137,16)"/><text x="70.4520%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="70.2020%" y="1093" width="0.1010%" height="15" fill="rgb(207,12,36)"/><text x="70.4520%" y="1103.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="70.2020%" y="1077" width="0.1010%" height="15" fill="rgb(210,214,24)"/><text x="70.4520%" y="1087.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="70.2020%" y="1061" width="0.1010%" height="15" fill="rgb(206,56,30)"/><text x="70.4520%" y="1071.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.3030%" y="1221" width="0.1010%" height="15" fill="rgb(228,143,26)"/><text x="70.5530%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.20%)</title><rect x="70.4040%" y="1221" width="0.2020%" height="15" fill="rgb(216,218,46)"/><text x="70.6540%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="70.4040%" y="1205" width="0.2020%" height="15" fill="rgb(206,6,19)"/><text x="70.6540%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="70.4040%" y="1189" width="0.2020%" height="15" fill="rgb(239,177,51)"/><text x="70.6540%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="70.4040%" y="1173" width="0.2020%" height="15" fill="rgb(216,55,25)"/><text x="70.6540%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (2 samples, 0.20%)</title><rect x="70.4040%" y="1157" width="0.2020%" height="15" fill="rgb(231,163,29)"/><text x="70.6540%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.20%)</title><rect x="70.4040%" y="1141" width="0.2020%" height="15" fill="rgb(232,149,50)"/><text x="70.6540%" y="1151.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.20%)</title><rect x="70.4040%" y="1125" width="0.2020%" height="15" fill="rgb(223,142,48)"/><text x="70.6540%" y="1135.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.20%)</title><rect x="70.4040%" y="1109" width="0.2020%" height="15" fill="rgb(245,83,23)"/><text x="70.6540%" y="1119.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="70.5051%" y="1093" width="0.1010%" height="15" fill="rgb(224,63,2)"/><text x="70.7551%" y="1103.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="70.5051%" y="1077" width="0.1010%" height="15" fill="rgb(218,65,53)"/><text x="70.7551%" y="1087.50"></text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (8 samples, 0.81%)</title><rect x="70.0000%" y="1237" width="0.8081%" height="15" fill="rgb(221,84,29)"/><text x="70.2500%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="70.6061%" y="1221" width="0.2020%" height="15" fill="rgb(234,0,32)"/><text x="70.8561%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1205" width="0.1010%" height="15" fill="rgb(206,20,16)"/><text x="70.9571%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1189" width="0.1010%" height="15" fill="rgb(244,172,18)"/><text x="70.9571%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1173" width="0.1010%" height="15" fill="rgb(254,133,1)"/><text x="70.9571%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="70.7071%" y="1157" width="0.1010%" height="15" fill="rgb(222,206,41)"/><text x="70.9571%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1141" width="0.1010%" height="15" fill="rgb(212,3,42)"/><text x="70.9571%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1125" width="0.1010%" height="15" fill="rgb(241,11,4)"/><text x="70.9571%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1109" width="0.1010%" height="15" fill="rgb(205,19,26)"/><text x="70.9571%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1093" width="0.1010%" height="15" fill="rgb(210,179,32)"/><text x="70.9571%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1077" width="0.1010%" height="15" fill="rgb(227,116,49)"/><text x="70.9571%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1061" width="0.1010%" height="15" fill="rgb(211,146,6)"/><text x="70.9571%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1045" width="0.1010%" height="15" fill="rgb(219,44,39)"/><text x="70.9571%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="70.7071%" y="1029" width="0.1010%" height="15" fill="rgb(234,128,11)"/><text x="70.9571%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="70.7071%" y="1013" width="0.1010%" height="15" fill="rgb(220,183,53)"/><text x="70.9571%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="70.7071%" y="997" width="0.1010%" height="15" fill="rgb(213,219,32)"/><text x="70.9571%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (24 samples, 2.42%)</title><rect x="68.4848%" y="1477" width="2.4242%" height="15" fill="rgb(232,156,16)"/><text x="68.7348%" y="1487.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 2.42%)</title><rect x="68.4848%" y="1461" width="2.4242%" height="15" fill="rgb(246,135,34)"/><text x="68.7348%" y="1471.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 2.42%)</title><rect x="68.4848%" y="1445" width="2.4242%" height="15" fill="rgb(241,99,0)"/><text x="68.7348%" y="1455.50">co..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 2.42%)</title><rect x="68.4848%" y="1429" width="2.4242%" height="15" fill="rgb(222,103,45)"/><text x="68.7348%" y="1439.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 2.42%)</title><rect x="68.4848%" y="1413" width="2.4242%" height="15" fill="rgb(212,57,4)"/><text x="68.7348%" y="1423.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 2.42%)</title><rect x="68.4848%" y="1397" width="2.4242%" height="15" fill="rgb(215,68,47)"/><text x="68.7348%" y="1407.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (24 samples, 2.42%)</title><rect x="68.4848%" y="1381" width="2.4242%" height="15" fill="rgb(230,84,2)"/><text x="68.7348%" y="1391.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (24 samples, 2.42%)</title><rect x="68.4848%" y="1365" width="2.4242%" height="15" fill="rgb(220,102,14)"/><text x="68.7348%" y="1375.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 2.42%)</title><rect x="68.4848%" y="1349" width="2.4242%" height="15" fill="rgb(240,10,32)"/><text x="68.7348%" y="1359.50">co..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (24 samples, 2.42%)</title><rect x="68.4848%" y="1333" width="2.4242%" height="15" fill="rgb(215,47,27)"/><text x="68.7348%" y="1343.50">be..</text></g><g><title>bench::Runner::run (24 samples, 2.42%)</title><rect x="68.4848%" y="1317" width="2.4242%" height="15" fill="rgb(233,188,43)"/><text x="68.7348%" y="1327.50">be..</text></g><g><title>bench::Runner::next (24 samples, 2.42%)</title><rect x="68.4848%" y="1301" width="2.4242%" height="15" fill="rgb(253,190,1)"/><text x="68.7348%" y="1311.50">be..</text></g><g><title>polar::polar::Polar::query (24 samples, 2.42%)</title><rect x="68.4848%" y="1285" width="2.4242%" height="15" fill="rgb(206,114,52)"/><text x="68.7348%" y="1295.50">po..</text></g><g><title>polar::vm::PolarVirtualMachine::run (24 samples, 2.42%)</title><rect x="68.4848%" y="1269" width="2.4242%" height="15" fill="rgb(233,120,37)"/><text x="68.7348%" y="1279.50">po..</text></g><g><title>polar::vm::PolarVirtualMachine::next (22 samples, 2.22%)</title><rect x="68.6869%" y="1253" width="2.2222%" height="15" fill="rgb(214,52,39)"/><text x="68.9369%" y="1263.50">p..</text></g><g><title>polar::vm::PolarVirtualMachine::unify (1 samples, 0.10%)</title><rect x="70.8081%" y="1237" width="0.1010%" height="15" fill="rgb(223,80,29)"/><text x="71.0581%" y="1247.50"></text></g><g><title>polar::vm::PolarVirtualMachine::push_goal (1 samples, 0.10%)</title><rect x="70.8081%" y="1221" width="0.1010%" height="15" fill="rgb(230,101,40)"/><text x="71.0581%" y="1231.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="70.8081%" y="1205" width="0.1010%" height="15" fill="rgb(219,211,8)"/><text x="71.0581%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="70.9091%" y="1365" width="0.1010%" height="15" fill="rgb(252,126,28)"/><text x="71.1591%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="70.9091%" y="1349" width="0.1010%" height="15" fill="rgb(215,56,38)"/><text x="71.1591%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="70.9091%" y="1333" width="0.1010%" height="15" fill="rgb(249,55,44)"/><text x="71.1591%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.9091%" y="1317" width="0.1010%" height="15" fill="rgb(220,221,32)"/><text x="71.1591%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="70.9091%" y="1301" width="0.1010%" height="15" fill="rgb(212,216,41)"/><text x="71.1591%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="70.9091%" y="1285" width="0.1010%" height="15" fill="rgb(228,213,43)"/><text x="71.1591%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="70.9091%" y="1269" width="0.1010%" height="15" fill="rgb(211,31,26)"/><text x="71.1591%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="70.9091%" y="1253" width="0.1010%" height="15" fill="rgb(229,202,19)"/><text x="71.1591%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="70.9091%" y="1237" width="0.1010%" height="15" fill="rgb(229,105,46)"/><text x="71.1591%" y="1247.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="70.9091%" y="1221" width="0.1010%" height="15" fill="rgb(235,108,1)"/><text x="71.1591%" y="1231.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="70.9091%" y="1205" width="0.1010%" height="15" fill="rgb(245,111,35)"/><text x="71.1591%" y="1215.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (2 samples, 0.20%)</title><rect x="70.9091%" y="1381" width="0.2020%" height="15" fill="rgb(219,185,31)"/><text x="71.1591%" y="1391.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (1 samples, 0.10%)</title><rect x="71.0101%" y="1365" width="0.1010%" height="15" fill="rgb(214,4,43)"/><text x="71.2601%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (1 samples, 0.10%)</title><rect x="71.0101%" y="1349" width="0.1010%" height="15" fill="rgb(235,227,40)"/><text x="71.2601%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="71.0101%" y="1333" width="0.1010%" height="15" fill="rgb(230,88,30)"/><text x="71.2601%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="71.0101%" y="1317" width="0.1010%" height="15" fill="rgb(216,217,1)"/><text x="71.2601%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="71.0101%" y="1301" width="0.1010%" height="15" fill="rgb(248,139,50)"/><text x="71.2601%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="71.0101%" y="1285" width="0.1010%" height="15" fill="rgb(233,1,21)"/><text x="71.2601%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="71.0101%" y="1269" width="0.1010%" height="15" fill="rgb(215,183,12)"/><text x="71.2601%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="71.0101%" y="1253" width="0.1010%" height="15" fill="rgb(229,104,42)"/><text x="71.2601%" y="1263.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="71.0101%" y="1237" width="0.1010%" height="15" fill="rgb(243,34,48)"/><text x="71.2601%" y="1247.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="71.0101%" y="1221" width="0.1010%" height="15" fill="rgb(239,11,44)"/><text x="71.2601%" y="1231.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="71.0101%" y="1205" width="0.1010%" height="15" fill="rgb(231,98,35)"/><text x="71.2601%" y="1215.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="71.0101%" y="1189" width="0.1010%" height="15" fill="rgb(233,28,25)"/><text x="71.2601%" y="1199.50"></text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (1 samples, 0.10%)</title><rect x="71.1111%" y="1381" width="0.1010%" height="15" fill="rgb(234,123,11)"/><text x="71.3611%" y="1391.50"></text></g><g><title>polar::vm::PolarVirtualMachine::choose (1 samples, 0.10%)</title><rect x="71.1111%" y="1365" width="0.1010%" height="15" fill="rgb(220,69,3)"/><text x="71.3611%" y="1375.50"></text></g><g><title>polar::vm::PolarVirtualMachine::push_choice (1 samples, 0.10%)</title><rect x="71.1111%" y="1349" width="0.1010%" height="15" fill="rgb(214,64,36)"/><text x="71.3611%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="71.1111%" y="1333" width="0.1010%" height="15" fill="rgb(211,138,32)"/><text x="71.3611%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="71.1111%" y="1317" width="0.1010%" height="15" fill="rgb(213,118,47)"/><text x="71.3611%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="71.1111%" y="1301" width="0.1010%" height="15" fill="rgb(243,124,49)"/><text x="71.3611%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="71.1111%" y="1285" width="0.1010%" height="15" fill="rgb(221,30,28)"/><text x="71.3611%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="71.1111%" y="1269" width="0.1010%" height="15" fill="rgb(246,37,13)"/><text x="71.3611%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="71.1111%" y="1253" width="0.1010%" height="15" fill="rgb(249,66,14)"/><text x="71.3611%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="71.1111%" y="1237" width="0.1010%" height="15" fill="rgb(213,166,5)"/><text x="71.3611%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="71.1111%" y="1221" width="0.1010%" height="15" fill="rgb(221,66,24)"/><text x="71.3611%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="71.1111%" y="1205" width="0.1010%" height="15" fill="rgb(210,132,17)"/><text x="71.3611%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="71.1111%" y="1189" width="0.1010%" height="15" fill="rgb(243,202,5)"/><text x="71.3611%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="71.1111%" y="1173" width="0.1010%" height="15" fill="rgb(233,70,48)"/><text x="71.3611%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="71.1111%" y="1157" width="0.1010%" height="15" fill="rgb(238,41,26)"/><text x="71.3611%" y="1167.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="71.1111%" y="1141" width="0.1010%" height="15" fill="rgb(241,19,31)"/><text x="71.3611%" y="1151.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="71.1111%" y="1125" width="0.1010%" height="15" fill="rgb(214,76,10)"/><text x="71.3611%" y="1135.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="71.1111%" y="1109" width="0.1010%" height="15" fill="rgb(254,202,22)"/><text x="71.3611%" y="1119.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="71.1111%" y="1093" width="0.1010%" height="15" fill="rgb(214,72,24)"/><text x="71.3611%" y="1103.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="71.1111%" y="1077" width="0.1010%" height="15" fill="rgb(221,92,46)"/><text x="71.3611%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="71.1111%" y="1061" width="0.1010%" height="15" fill="rgb(246,13,50)"/><text x="71.3611%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="71.1111%" y="1045" width="0.1010%" height="15" fill="rgb(240,165,38)"/><text x="71.3611%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="71.1111%" y="1029" width="0.1010%" height="15" fill="rgb(241,24,51)"/><text x="71.3611%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="71.1111%" y="1013" width="0.1010%" height="15" fill="rgb(227,51,44)"/><text x="71.3611%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="71.1111%" y="997" width="0.1010%" height="15" fill="rgb(231,121,3)"/><text x="71.3611%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="71.1111%" y="981" width="0.1010%" height="15" fill="rgb(245,3,41)"/><text x="71.3611%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="71.1111%" y="965" width="0.1010%" height="15" fill="rgb(214,13,26)"/><text x="71.3611%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="71.1111%" y="949" width="0.1010%" height="15" fill="rgb(252,75,11)"/><text x="71.3611%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="71.1111%" y="933" width="0.1010%" height="15" fill="rgb(218,226,17)"/><text x="71.3611%" y="943.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="71.1111%" y="917" width="0.1010%" height="15" fill="rgb(248,89,38)"/><text x="71.3611%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="71.1111%" y="901" width="0.1010%" height="15" fill="rgb(237,73,46)"/><text x="71.3611%" y="911.50"></text></g><g><title>criterion::analysis::common (128 samples, 12.93%)</title><rect x="58.3838%" y="1573" width="12.9293%" height="15" fill="rgb(242,78,33)"/><text x="58.6338%" y="1583.50">criterion::analysis..</text></g><g><title>criterion::routine::Routine::profile (128 samples, 12.93%)</title><rect x="58.3838%" y="1557" width="12.9293%" height="15" fill="rgb(235,60,3)"/><text x="58.6338%" y="1567.50">criterion::routine:..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (28 samples, 2.83%)</title><rect x="68.4848%" y="1541" width="2.8283%" height="15" fill="rgb(216,172,19)"/><text x="68.7348%" y="1551.50">&lt;c..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (28 samples, 2.83%)</title><rect x="68.4848%" y="1525" width="2.8283%" height="15" fill="rgb(227,6,42)"/><text x="68.7348%" y="1535.50">cr..</text></g><g><title>bench::too_many_predicates::_{{closure}} (28 samples, 2.83%)</title><rect x="68.4848%" y="1509" width="2.8283%" height="15" fill="rgb(223,207,42)"/><text x="68.7348%" y="1519.50">be..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (28 samples, 2.83%)</title><rect x="68.4848%" y="1493" width="2.8283%" height="15" fill="rgb(246,138,30)"/><text x="68.7348%" y="1503.50">cr..</text></g><g><title>bench::too_many_predicates::_{{closure}}::_{{closure}} (4 samples, 0.40%)</title><rect x="70.9091%" y="1477" width="0.4040%" height="15" fill="rgb(251,199,47)"/><text x="71.1591%" y="1487.50"></text></g><g><title>bench::Runner::run (4 samples, 0.40%)</title><rect x="70.9091%" y="1461" width="0.4040%" height="15" fill="rgb(228,218,44)"/><text x="71.1591%" y="1471.50"></text></g><g><title>bench::Runner::next (4 samples, 0.40%)</title><rect x="70.9091%" y="1445" width="0.4040%" height="15" fill="rgb(220,68,6)"/><text x="71.1591%" y="1455.50"></text></g><g><title>polar::polar::Polar::query (4 samples, 0.40%)</title><rect x="70.9091%" y="1429" width="0.4040%" height="15" fill="rgb(240,60,26)"/><text x="71.1591%" y="1439.50"></text></g><g><title>polar::vm::PolarVirtualMachine::run (4 samples, 0.40%)</title><rect x="70.9091%" y="1413" width="0.4040%" height="15" fill="rgb(211,200,19)"/><text x="71.1591%" y="1423.50"></text></g><g><title>polar::vm::PolarVirtualMachine::next (4 samples, 0.40%)</title><rect x="70.9091%" y="1397" width="0.4040%" height="15" fill="rgb(242,145,30)"/><text x="71.1591%" y="1407.50"></text></g><g><title>polar::vm::PolarVirtualMachine::unify (1 samples, 0.10%)</title><rect x="71.2121%" y="1381" width="0.1010%" height="15" fill="rgb(225,64,13)"/><text x="71.4621%" y="1391.50"></text></g><g><title>polar::vm::PolarVirtualMachine::unify::_{{closure}} (1 samples, 0.10%)</title><rect x="71.2121%" y="1365" width="0.1010%" height="15" fill="rgb(218,103,35)"/><text x="71.4621%" y="1375.50"></text></g><g><title>&lt;polar::types::Symbol as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="71.3131%" y="709" width="0.2020%" height="15" fill="rgb(216,93,46)"/><text x="71.5631%" y="719.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (2 samples, 0.20%)</title><rect x="71.3131%" y="693" width="0.2020%" height="15" fill="rgb(225,159,27)"/><text x="71.5631%" y="703.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (2 samples, 0.20%)</title><rect x="71.3131%" y="677" width="0.2020%" height="15" fill="rgb(225,204,11)"/><text x="71.5631%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="71.3131%" y="661" width="0.2020%" height="15" fill="rgb(205,56,4)"/><text x="71.5631%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="71.4141%" y="645" width="0.1010%" height="15" fill="rgb(206,6,35)"/><text x="71.6641%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="71.4141%" y="629" width="0.1010%" height="15" fill="rgb(247,73,52)"/><text x="71.6641%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="71.4141%" y="613" width="0.1010%" height="15" fill="rgb(246,97,4)"/><text x="71.6641%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="71.4141%" y="597" width="0.1010%" height="15" fill="rgb(212,37,15)"/><text x="71.6641%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="71.4141%" y="581" width="0.1010%" height="15" fill="rgb(208,130,40)"/><text x="71.6641%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="71.4141%" y="565" width="0.1010%" height="15" fill="rgb(236,55,29)"/><text x="71.6641%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="71.4141%" y="549" width="0.1010%" height="15" fill="rgb(209,156,45)"/><text x="71.6641%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="71.4141%" y="533" width="0.1010%" height="15" fill="rgb(249,107,4)"/><text x="71.6641%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="71.4141%" y="517" width="0.1010%" height="15" fill="rgb(227,7,13)"/><text x="71.6641%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="71.4141%" y="501" width="0.1010%" height="15" fill="rgb(250,129,14)"/><text x="71.6641%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.5152%" y="709" width="0.1010%" height="15" fill="rgb(229,92,13)"/><text x="71.7652%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.5152%" y="693" width="0.1010%" height="15" fill="rgb(245,98,39)"/><text x="71.7652%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.5152%" y="677" width="0.1010%" height="15" fill="rgb(234,135,48)"/><text x="71.7652%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="71.5152%" y="661" width="0.1010%" height="15" fill="rgb(230,98,28)"/><text x="71.7652%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="71.5152%" y="645" width="0.1010%" height="15" fill="rgb(223,121,0)"/><text x="71.7652%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="71.5152%" y="629" width="0.1010%" height="15" fill="rgb(234,173,33)"/><text x="71.7652%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="71.5152%" y="613" width="0.1010%" height="15" fill="rgb(245,47,8)"/><text x="71.7652%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.10%)</title><rect x="71.6162%" y="693" width="0.1010%" height="15" fill="rgb(205,17,20)"/><text x="71.8662%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="71.7172%" y="693" width="0.1010%" height="15" fill="rgb(232,151,16)"/><text x="71.9672%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="71.7172%" y="677" width="0.1010%" height="15" fill="rgb(208,30,32)"/><text x="71.9672%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="71.7172%" y="661" width="0.1010%" height="15" fill="rgb(254,26,3)"/><text x="71.9672%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="71.7172%" y="645" width="0.1010%" height="15" fill="rgb(240,177,30)"/><text x="71.9672%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="71.7172%" y="629" width="0.1010%" height="15" fill="rgb(248,76,44)"/><text x="71.9672%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="71.7172%" y="613" width="0.1010%" height="15" fill="rgb(241,186,54)"/><text x="71.9672%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="71.7172%" y="597" width="0.1010%" height="15" fill="rgb(249,171,29)"/><text x="71.9672%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="71.7172%" y="581" width="0.1010%" height="15" fill="rgb(237,151,44)"/><text x="71.9672%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="71.7172%" y="565" width="0.1010%" height="15" fill="rgb(228,174,30)"/><text x="71.9672%" y="575.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="71.7172%" y="549" width="0.1010%" height="15" fill="rgb(252,14,37)"/><text x="71.9672%" y="559.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (1 samples, 0.10%)</title><rect x="71.7172%" y="533" width="0.1010%" height="15" fill="rgb(207,111,40)"/><text x="71.9672%" y="543.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (1 samples, 0.10%)</title><rect x="71.7172%" y="517" width="0.1010%" height="15" fill="rgb(248,171,54)"/><text x="71.9672%" y="527.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="71.7172%" y="501" width="0.1010%" height="15" fill="rgb(211,127,2)"/><text x="71.9672%" y="511.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="71.7172%" y="485" width="0.1010%" height="15" fill="rgb(236,87,47)"/><text x="71.9672%" y="495.50"></text></g><g><title>polar::formatting::to_polar::format_args (6 samples, 0.61%)</title><rect x="71.3131%" y="965" width="0.6061%" height="15" fill="rgb(223,190,45)"/><text x="71.5631%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.61%)</title><rect x="71.3131%" y="949" width="0.6061%" height="15" fill="rgb(215,5,16)"/><text x="71.5631%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.61%)</title><rect x="71.3131%" y="933" width="0.6061%" height="15" fill="rgb(252,82,33)"/><text x="71.5631%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (6 samples, 0.61%)</title><rect x="71.3131%" y="917" width="0.6061%" height="15" fill="rgb(247,213,44)"/><text x="71.5631%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.61%)</title><rect x="71.3131%" y="901" width="0.6061%" height="15" fill="rgb(205,196,44)"/><text x="71.5631%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.61%)</title><rect x="71.3131%" y="885" width="0.6061%" height="15" fill="rgb(237,96,54)"/><text x="71.5631%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.61%)</title><rect x="71.3131%" y="869" width="0.6061%" height="15" fill="rgb(230,113,34)"/><text x="71.5631%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.61%)</title><rect x="71.3131%" y="853" width="0.6061%" height="15" fill="rgb(221,224,12)"/><text x="71.5631%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.61%)</title><rect x="71.3131%" y="837" width="0.6061%" height="15" fill="rgb(219,112,44)"/><text x="71.5631%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (6 samples, 0.61%)</title><rect x="71.3131%" y="821" width="0.6061%" height="15" fill="rgb(210,31,13)"/><text x="71.5631%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (6 samples, 0.61%)</title><rect x="71.3131%" y="805" width="0.6061%" height="15" fill="rgb(230,25,16)"/><text x="71.5631%" y="815.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (6 samples, 0.61%)</title><rect x="71.3131%" y="789" width="0.6061%" height="15" fill="rgb(246,108,53)"/><text x="71.5631%" y="799.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (6 samples, 0.61%)</title><rect x="71.3131%" y="773" width="0.6061%" height="15" fill="rgb(241,172,50)"/><text x="71.5631%" y="783.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (6 samples, 0.61%)</title><rect x="71.3131%" y="757" width="0.6061%" height="15" fill="rgb(235,141,10)"/><text x="71.5631%" y="767.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (6 samples, 0.61%)</title><rect x="71.3131%" y="741" width="0.6061%" height="15" fill="rgb(220,174,43)"/><text x="71.5631%" y="751.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (6 samples, 0.61%)</title><rect x="71.3131%" y="725" width="0.6061%" height="15" fill="rgb(215,181,40)"/><text x="71.5631%" y="735.50"></text></g><g><title>polar::formatting::to_polar::format_args (3 samples, 0.30%)</title><rect x="71.6162%" y="709" width="0.3030%" height="15" fill="rgb(230,97,2)"/><text x="71.8662%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.8182%" y="693" width="0.1010%" height="15" fill="rgb(211,25,27)"/><text x="72.0682%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="71.8182%" y="677" width="0.1010%" height="15" fill="rgb(230,87,26)"/><text x="72.0682%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.8182%" y="661" width="0.1010%" height="15" fill="rgb(227,160,17)"/><text x="72.0682%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.8182%" y="645" width="0.1010%" height="15" fill="rgb(244,85,34)"/><text x="72.0682%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.8182%" y="629" width="0.1010%" height="15" fill="rgb(207,70,0)"/><text x="72.0682%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="71.8182%" y="613" width="0.1010%" height="15" fill="rgb(223,129,7)"/><text x="72.0682%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="71.8182%" y="597" width="0.1010%" height="15" fill="rgb(246,105,7)"/><text x="72.0682%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="71.8182%" y="581" width="0.1010%" height="15" fill="rgb(215,154,42)"/><text x="72.0682%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="71.8182%" y="565" width="0.1010%" height="15" fill="rgb(220,215,30)"/><text x="72.0682%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="71.8182%" y="549" width="0.1010%" height="15" fill="rgb(228,81,51)"/><text x="72.0682%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.20%)</title><rect x="71.9192%" y="677" width="0.2020%" height="15" fill="rgb(247,71,54)"/><text x="72.1692%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="72.1212%" y="501" width="0.1010%" height="15" fill="rgb(234,176,34)"/><text x="72.3712%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="72.1212%" y="485" width="0.1010%" height="15" fill="rgb(241,103,54)"/><text x="72.3712%" y="495.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="72.1212%" y="469" width="0.1010%" height="15" fill="rgb(228,22,34)"/><text x="72.3712%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="72.1212%" y="645" width="0.2020%" height="15" fill="rgb(241,179,48)"/><text x="72.3712%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="72.1212%" y="629" width="0.2020%" height="15" fill="rgb(235,167,37)"/><text x="72.3712%" y="639.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.20%)</title><rect x="72.1212%" y="613" width="0.2020%" height="15" fill="rgb(213,109,30)"/><text x="72.3712%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="72.1212%" y="597" width="0.2020%" height="15" fill="rgb(222,172,16)"/><text x="72.3712%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="72.1212%" y="581" width="0.2020%" height="15" fill="rgb(233,192,5)"/><text x="72.3712%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="72.1212%" y="565" width="0.2020%" height="15" fill="rgb(247,189,41)"/><text x="72.3712%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="72.1212%" y="549" width="0.2020%" height="15" fill="rgb(218,134,47)"/><text x="72.3712%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="72.1212%" y="533" width="0.2020%" height="15" fill="rgb(216,29,3)"/><text x="72.3712%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (2 samples, 0.20%)</title><rect x="72.1212%" y="517" width="0.2020%" height="15" fill="rgb(246,140,12)"/><text x="72.3712%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="72.2222%" y="501" width="0.1010%" height="15" fill="rgb(230,136,11)"/><text x="72.4722%" y="511.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (11 samples, 1.11%)</title><rect x="71.3131%" y="981" width="1.1111%" height="15" fill="rgb(247,22,47)"/><text x="71.5631%" y="991.50"></text></g><g><title>polar::formatting::to_polar::format_params (5 samples, 0.51%)</title><rect x="71.9192%" y="965" width="0.5051%" height="15" fill="rgb(218,84,22)"/><text x="72.1692%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.51%)</title><rect x="71.9192%" y="949" width="0.5051%" height="15" fill="rgb(216,87,39)"/><text x="72.1692%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="71.9192%" y="933" width="0.5051%" height="15" fill="rgb(221,178,8)"/><text x="72.1692%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="71.9192%" y="917" width="0.5051%" height="15" fill="rgb(230,42,11)"/><text x="72.1692%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="71.9192%" y="901" width="0.5051%" height="15" fill="rgb(237,229,4)"/><text x="72.1692%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.51%)</title><rect x="71.9192%" y="885" width="0.5051%" height="15" fill="rgb(222,31,33)"/><text x="72.1692%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="71.9192%" y="869" width="0.5051%" height="15" fill="rgb(210,17,39)"/><text x="72.1692%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.51%)</title><rect x="71.9192%" y="853" width="0.5051%" height="15" fill="rgb(244,93,20)"/><text x="72.1692%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.51%)</title><rect x="71.9192%" y="837" width="0.5051%" height="15" fill="rgb(210,40,47)"/><text x="72.1692%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (5 samples, 0.51%)</title><rect x="71.9192%" y="821" width="0.5051%" height="15" fill="rgb(239,211,47)"/><text x="72.1692%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (5 samples, 0.51%)</title><rect x="71.9192%" y="805" width="0.5051%" height="15" fill="rgb(251,223,49)"/><text x="72.1692%" y="815.50"></text></g><g><title>polar::formatting::to_polar::format_params::_{{closure}} (5 samples, 0.51%)</title><rect x="71.9192%" y="789" width="0.5051%" height="15" fill="rgb(221,149,5)"/><text x="72.1692%" y="799.50"></text></g><g><title>&lt;polar::types::Parameter as polar::formatting::to_polar::ToPolarString&gt;::to_polar (5 samples, 0.51%)</title><rect x="71.9192%" y="773" width="0.5051%" height="15" fill="rgb(219,224,51)"/><text x="72.1692%" y="783.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (5 samples, 0.51%)</title><rect x="71.9192%" y="757" width="0.5051%" height="15" fill="rgb(223,7,8)"/><text x="72.1692%" y="767.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (5 samples, 0.51%)</title><rect x="71.9192%" y="741" width="0.5051%" height="15" fill="rgb(241,217,22)"/><text x="72.1692%" y="751.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.51%)</title><rect x="71.9192%" y="725" width="0.5051%" height="15" fill="rgb(248,209,0)"/><text x="72.1692%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.51%)</title><rect x="71.9192%" y="709" width="0.5051%" height="15" fill="rgb(217,205,4)"/><text x="72.1692%" y="719.50"></text></g><g><title>core::fmt::write (5 samples, 0.51%)</title><rect x="71.9192%" y="693" width="0.5051%" height="15" fill="rgb(228,124,39)"/><text x="72.1692%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (3 samples, 0.30%)</title><rect x="72.1212%" y="677" width="0.3030%" height="15" fill="rgb(250,116,42)"/><text x="72.3712%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.30%)</title><rect x="72.1212%" y="661" width="0.3030%" height="15" fill="rgb(223,202,9)"/><text x="72.3712%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="72.3232%" y="645" width="0.1010%" height="15" fill="rgb(242,222,40)"/><text x="72.5732%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.10%)</title><rect x="72.4242%" y="661" width="0.1010%" height="15" fill="rgb(229,99,46)"/><text x="72.6742%" y="671.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.10%)</title><rect x="72.4242%" y="645" width="0.1010%" height="15" fill="rgb(225,56,46)"/><text x="72.6742%" y="655.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.10%)</title><rect x="72.4242%" y="629" width="0.1010%" height="15" fill="rgb(227,94,5)"/><text x="72.6742%" y="639.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="72.4242%" y="981" width="0.2020%" height="15" fill="rgb(205,112,38)"/><text x="72.6742%" y="991.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="72.4242%" y="965" width="0.2020%" height="15" fill="rgb(231,133,46)"/><text x="72.6742%" y="975.50"></text></g><g><title>&lt;polar::types::Operation as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="72.4242%" y="949" width="0.2020%" height="15" fill="rgb(217,16,9)"/><text x="72.6742%" y="959.50"></text></g><g><title>polar::formatting::to_polar::format_args (2 samples, 0.20%)</title><rect x="72.4242%" y="933" width="0.2020%" height="15" fill="rgb(249,173,9)"/><text x="72.6742%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="72.4242%" y="917" width="0.2020%" height="15" fill="rgb(205,163,53)"/><text x="72.6742%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="72.4242%" y="901" width="0.2020%" height="15" fill="rgb(217,54,41)"/><text x="72.6742%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="72.4242%" y="885" width="0.2020%" height="15" fill="rgb(228,216,12)"/><text x="72.6742%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="72.4242%" y="869" width="0.2020%" height="15" fill="rgb(244,228,15)"/><text x="72.6742%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="72.4242%" y="853" width="0.2020%" height="15" fill="rgb(221,176,53)"/><text x="72.6742%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="72.4242%" y="837" width="0.2020%" height="15" fill="rgb(205,94,34)"/><text x="72.6742%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="72.4242%" y="821" width="0.2020%" height="15" fill="rgb(213,110,48)"/><text x="72.6742%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="72.4242%" y="805" width="0.2020%" height="15" fill="rgb(236,142,28)"/><text x="72.6742%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="72.4242%" y="789" width="0.2020%" height="15" fill="rgb(225,135,29)"/><text x="72.6742%" y="799.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="72.4242%" y="773" width="0.2020%" height="15" fill="rgb(252,45,31)"/><text x="72.6742%" y="783.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (2 samples, 0.20%)</title><rect x="72.4242%" y="757" width="0.2020%" height="15" fill="rgb(211,187,50)"/><text x="72.6742%" y="767.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (2 samples, 0.20%)</title><rect x="72.4242%" y="741" width="0.2020%" height="15" fill="rgb(229,109,7)"/><text x="72.6742%" y="751.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="72.4242%" y="725" width="0.2020%" height="15" fill="rgb(251,131,51)"/><text x="72.6742%" y="735.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="72.4242%" y="709" width="0.2020%" height="15" fill="rgb(251,180,35)"/><text x="72.6742%" y="719.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="72.4242%" y="693" width="0.2020%" height="15" fill="rgb(211,46,32)"/><text x="72.6742%" y="703.50"></text></g><g><title>polar::formatting::to_polar::format_args (2 samples, 0.20%)</title><rect x="72.4242%" y="677" width="0.2020%" height="15" fill="rgb(248,123,17)"/><text x="72.6742%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="72.5253%" y="661" width="0.1010%" height="15" fill="rgb(227,141,18)"/><text x="72.7753%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="72.5253%" y="645" width="0.1010%" height="15" fill="rgb(216,102,9)"/><text x="72.7753%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="72.5253%" y="629" width="0.1010%" height="15" fill="rgb(253,47,13)"/><text x="72.7753%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="72.5253%" y="613" width="0.1010%" height="15" fill="rgb(226,93,23)"/><text x="72.7753%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="72.5253%" y="597" width="0.1010%" height="15" fill="rgb(247,104,17)"/><text x="72.7753%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="72.5253%" y="581" width="0.1010%" height="15" fill="rgb(233,203,26)"/><text x="72.7753%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="72.5253%" y="565" width="0.1010%" height="15" fill="rgb(244,98,49)"/><text x="72.7753%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="72.5253%" y="549" width="0.1010%" height="15" fill="rgb(235,134,22)"/><text x="72.7753%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="72.5253%" y="533" width="0.1010%" height="15" fill="rgb(221,70,32)"/><text x="72.7753%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="72.5253%" y="517" width="0.1010%" height="15" fill="rgb(238,15,50)"/><text x="72.7753%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="72.7273%" y="421" width="0.1010%" height="15" fill="rgb(215,221,48)"/><text x="72.9773%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="72.7273%" y="405" width="0.1010%" height="15" fill="rgb(236,73,3)"/><text x="72.9773%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="72.7273%" y="389" width="0.1010%" height="15" fill="rgb(250,107,11)"/><text x="72.9773%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="72.7273%" y="373" width="0.1010%" height="15" fill="rgb(242,39,14)"/><text x="72.9773%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="72.7273%" y="357" width="0.1010%" height="15" fill="rgb(248,164,37)"/><text x="72.9773%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="72.8283%" y="325" width="0.1010%" height="15" fill="rgb(217,60,12)"/><text x="73.0783%" y="335.50"></text></g><g><title>&lt;polar::types::Symbol as polar::formatting::to_polar::ToPolarString&gt;::to_polar (4 samples, 0.40%)</title><rect x="72.6263%" y="533" width="0.4040%" height="15" fill="rgb(240,125,29)"/><text x="72.8763%" y="543.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (4 samples, 0.40%)</title><rect x="72.6263%" y="517" width="0.4040%" height="15" fill="rgb(208,207,28)"/><text x="72.8763%" y="527.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (4 samples, 0.40%)</title><rect x="72.6263%" y="501" width="0.4040%" height="15" fill="rgb(209,159,27)"/><text x="72.8763%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="72.6263%" y="485" width="0.4040%" height="15" fill="rgb(251,176,53)"/><text x="72.8763%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="72.7273%" y="469" width="0.3030%" height="15" fill="rgb(211,85,7)"/><text x="72.9773%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="72.7273%" y="453" width="0.3030%" height="15" fill="rgb(216,64,54)"/><text x="72.9773%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="72.7273%" y="437" width="0.3030%" height="15" fill="rgb(217,54,24)"/><text x="72.9773%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="72.8283%" y="421" width="0.2020%" height="15" fill="rgb(208,206,53)"/><text x="73.0783%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="72.8283%" y="405" width="0.2020%" height="15" fill="rgb(251,74,39)"/><text x="73.0783%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="72.8283%" y="389" width="0.2020%" height="15" fill="rgb(226,47,5)"/><text x="73.0783%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="72.8283%" y="373" width="0.2020%" height="15" fill="rgb(234,111,33)"/><text x="73.0783%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="72.8283%" y="357" width="0.2020%" height="15" fill="rgb(251,14,10)"/><text x="73.0783%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="72.8283%" y="341" width="0.2020%" height="15" fill="rgb(232,43,0)"/><text x="73.0783%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="72.9293%" y="325" width="0.1010%" height="15" fill="rgb(222,68,43)"/><text x="73.1793%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="72.9293%" y="309" width="0.1010%" height="15" fill="rgb(217,24,23)"/><text x="73.1793%" y="319.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.10%)</title><rect x="73.1313%" y="517" width="0.1010%" height="15" fill="rgb(229,209,14)"/><text x="73.3813%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.10%)</title><rect x="73.1313%" y="501" width="0.1010%" height="15" fill="rgb(250,149,48)"/><text x="73.3813%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.10%)</title><rect x="73.1313%" y="485" width="0.1010%" height="15" fill="rgb(210,120,37)"/><text x="73.3813%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="73.1313%" y="469" width="0.1010%" height="15" fill="rgb(210,21,8)"/><text x="73.3813%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="73.1313%" y="453" width="0.1010%" height="15" fill="rgb(243,145,7)"/><text x="73.3813%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="73.1313%" y="437" width="0.1010%" height="15" fill="rgb(238,178,32)"/><text x="73.3813%" y="447.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="73.1313%" y="421" width="0.1010%" height="15" fill="rgb(222,4,10)"/><text x="73.3813%" y="431.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="74.1414%" y="309" width="0.3030%" height="15" fill="rgb(239,7,37)"/><text x="74.3914%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="74.0404%" y="341" width="0.7071%" height="15" fill="rgb(215,31,37)"/><text x="74.2904%" y="351.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.61%)</title><rect x="74.1414%" y="325" width="0.6061%" height="15" fill="rgb(224,83,33)"/><text x="74.3914%" y="335.50"></text></g><g><title>__rdl_alloc (3 samples, 0.30%)</title><rect x="74.4444%" y="309" width="0.3030%" height="15" fill="rgb(239,55,3)"/><text x="74.6944%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.30%)</title><rect x="74.4444%" y="293" width="0.3030%" height="15" fill="rgb(247,92,11)"/><text x="74.6944%" y="303.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.51%)</title><rect x="75.0505%" y="309" width="0.5051%" height="15" fill="rgb(239,200,7)"/><text x="75.3005%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (17 samples, 1.72%)</title><rect x="74.0404%" y="405" width="1.7172%" height="15" fill="rgb(227,115,8)"/><text x="74.2904%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 1.72%)</title><rect x="74.0404%" y="389" width="1.7172%" height="15" fill="rgb(215,189,27)"/><text x="74.2904%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (17 samples, 1.72%)</title><rect x="74.0404%" y="373" width="1.7172%" height="15" fill="rgb(251,216,39)"/><text x="74.2904%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (17 samples, 1.72%)</title><rect x="74.0404%" y="357" width="1.7172%" height="15" fill="rgb(207,29,47)"/><text x="74.2904%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (10 samples, 1.01%)</title><rect x="74.7475%" y="341" width="1.0101%" height="15" fill="rgb(210,71,34)"/><text x="74.9975%" y="351.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.91%)</title><rect x="74.8485%" y="325" width="0.9091%" height="15" fill="rgb(253,217,51)"/><text x="75.0985%" y="335.50"></text></g><g><title>__rdl_realloc (2 samples, 0.20%)</title><rect x="75.5556%" y="309" width="0.2020%" height="15" fill="rgb(222,117,46)"/><text x="75.8056%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="75.6566%" y="293" width="0.1010%" height="15" fill="rgb(226,132,6)"/><text x="75.9066%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 2.53%)</title><rect x="73.7374%" y="485" width="2.5253%" height="15" fill="rgb(254,145,51)"/><text x="73.9874%" y="495.50">&lt;&amp;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (25 samples, 2.53%)</title><rect x="73.7374%" y="469" width="2.5253%" height="15" fill="rgb(231,199,27)"/><text x="73.9874%" y="479.50">&lt;a..</text></g><g><title>alloc::string::String::push_str (25 samples, 2.53%)</title><rect x="73.7374%" y="453" width="2.5253%" height="15" fill="rgb(245,158,14)"/><text x="73.9874%" y="463.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (25 samples, 2.53%)</title><rect x="73.7374%" y="437" width="2.5253%" height="15" fill="rgb(240,113,14)"/><text x="73.9874%" y="447.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 2.53%)</title><rect x="73.7374%" y="421" width="2.5253%" height="15" fill="rgb(210,20,13)"/><text x="73.9874%" y="431.50">&lt;a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.51%)</title><rect x="75.7576%" y="405" width="0.5051%" height="15" fill="rgb(241,144,13)"/><text x="76.0076%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.51%)</title><rect x="75.7576%" y="389" width="0.5051%" height="15" fill="rgb(235,43,34)"/><text x="76.0076%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned (5 samples, 0.51%)</title><rect x="75.7576%" y="373" width="0.5051%" height="15" fill="rgb(208,36,20)"/><text x="76.0076%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="76.2626%" y="485" width="0.1010%" height="15" fill="rgb(239,204,10)"/><text x="76.5126%" y="495.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="76.3636%" y="485" width="0.1010%" height="15" fill="rgb(217,84,43)"/><text x="76.6136%" y="495.50"></text></g><g><title>alloc::fmt::format (38 samples, 3.84%)</title><rect x="73.0303%" y="533" width="3.8384%" height="15" fill="rgb(241,170,50)"/><text x="73.2803%" y="543.50">allo..</text></g><g><title>core::fmt::Write::write_fmt (36 samples, 3.64%)</title><rect x="73.2323%" y="517" width="3.6364%" height="15" fill="rgb(226,205,29)"/><text x="73.4823%" y="527.50">core..</text></g><g><title>core::fmt::write (35 samples, 3.54%)</title><rect x="73.3333%" y="501" width="3.5354%" height="15" fill="rgb(233,113,1)"/><text x="73.5833%" y="511.50">cor..</text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.40%)</title><rect x="76.4646%" y="485" width="0.4040%" height="15" fill="rgb(253,98,13)"/><text x="76.7146%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="76.8687%" y="437" width="0.1010%" height="15" fill="rgb(211,115,12)"/><text x="77.1187%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.51%)</title><rect x="76.8687%" y="533" width="0.5051%" height="15" fill="rgb(208,12,16)"/><text x="77.1187%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.51%)</title><rect x="76.8687%" y="517" width="0.5051%" height="15" fill="rgb(237,193,54)"/><text x="77.1187%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.51%)</title><rect x="76.8687%" y="501" width="0.5051%" height="15" fill="rgb(243,22,42)"/><text x="77.1187%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.51%)</title><rect x="76.8687%" y="485" width="0.5051%" height="15" fill="rgb(233,151,36)"/><text x="77.1187%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (5 samples, 0.51%)</title><rect x="76.8687%" y="469" width="0.5051%" height="15" fill="rgb(237,57,45)"/><text x="77.1187%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.51%)</title><rect x="76.8687%" y="453" width="0.5051%" height="15" fill="rgb(221,88,17)"/><text x="77.1187%" y="463.50"></text></g><g><title>_int_free (4 samples, 0.40%)</title><rect x="76.9697%" y="437" width="0.4040%" height="15" fill="rgb(230,79,15)"/><text x="77.2197%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="77.7778%" y="469" width="0.1010%" height="15" fill="rgb(213,57,13)"/><text x="78.0278%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="77.7778%" y="453" width="0.1010%" height="15" fill="rgb(222,116,39)"/><text x="78.0278%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="77.7778%" y="437" width="0.1010%" height="15" fill="rgb(245,107,2)"/><text x="78.0278%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="77.7778%" y="421" width="0.1010%" height="15" fill="rgb(238,1,10)"/><text x="78.0278%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="77.7778%" y="405" width="0.1010%" height="15" fill="rgb(249,4,48)"/><text x="78.0278%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.10%)</title><rect x="77.7778%" y="389" width="0.1010%" height="15" fill="rgb(223,151,18)"/><text x="78.0278%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.10%)</title><rect x="77.7778%" y="373" width="0.1010%" height="15" fill="rgb(227,65,43)"/><text x="78.0278%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (7 samples, 0.71%)</title><rect x="77.6768%" y="517" width="0.7071%" height="15" fill="rgb(218,40,45)"/><text x="77.9268%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (7 samples, 0.71%)</title><rect x="77.6768%" y="501" width="0.7071%" height="15" fill="rgb(252,121,31)"/><text x="77.9268%" y="511.50"></text></g><g><title>alloc::str::join_generic_copy (7 samples, 0.71%)</title><rect x="77.6768%" y="485" width="0.7071%" height="15" fill="rgb(219,158,43)"/><text x="77.9268%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="77.8788%" y="469" width="0.5051%" height="15" fill="rgb(231,162,42)"/><text x="78.1288%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="77.8788%" y="453" width="0.5051%" height="15" fill="rgb(217,179,25)"/><text x="78.1288%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.51%)</title><rect x="77.8788%" y="437" width="0.5051%" height="15" fill="rgb(206,212,31)"/><text x="78.1288%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.51%)</title><rect x="77.8788%" y="421" width="0.5051%" height="15" fill="rgb(235,144,12)"/><text x="78.1288%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.51%)</title><rect x="77.8788%" y="405" width="0.5051%" height="15" fill="rgb(213,51,10)"/><text x="78.1288%" y="415.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.51%)</title><rect x="77.8788%" y="389" width="0.5051%" height="15" fill="rgb(231,145,14)"/><text x="78.1288%" y="399.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.51%)</title><rect x="77.8788%" y="373" width="0.5051%" height="15" fill="rgb(235,15,28)"/><text x="78.1288%" y="383.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="77.9798%" y="357" width="0.4040%" height="15" fill="rgb(237,206,10)"/><text x="78.2298%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="78.4848%" y="405" width="0.1010%" height="15" fill="rgb(236,227,27)"/><text x="78.7348%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.10%)</title><rect x="78.4848%" y="389" width="0.1010%" height="15" fill="rgb(246,83,35)"/><text x="78.7348%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.10%)</title><rect x="78.4848%" y="373" width="0.1010%" height="15" fill="rgb(220,136,24)"/><text x="78.7348%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (3 samples, 0.30%)</title><rect x="78.3838%" y="453" width="0.3030%" height="15" fill="rgb(217,3,25)"/><text x="78.6338%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.30%)</title><rect x="78.3838%" y="437" width="0.3030%" height="15" fill="rgb(239,24,14)"/><text x="78.6338%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.30%)</title><rect x="78.3838%" y="421" width="0.3030%" height="15" fill="rgb(244,16,53)"/><text x="78.6338%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="78.5859%" y="405" width="0.1010%" height="15" fill="rgb(208,175,44)"/><text x="78.8359%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="78.5859%" y="389" width="0.1010%" height="15" fill="rgb(252,18,48)"/><text x="78.8359%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="78.5859%" y="373" width="0.1010%" height="15" fill="rgb(234,199,32)"/><text x="78.8359%" y="383.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="78.5859%" y="357" width="0.1010%" height="15" fill="rgb(225,77,54)"/><text x="78.8359%" y="367.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (3 samples, 0.30%)</title><rect x="78.8889%" y="277" width="0.3030%" height="15" fill="rgb(225,42,25)"/><text x="79.1389%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.30%)</title><rect x="78.8889%" y="261" width="0.3030%" height="15" fill="rgb(242,227,46)"/><text x="79.1389%" y="271.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.30%)</title><rect x="78.8889%" y="245" width="0.3030%" height="15" fill="rgb(246,197,35)"/><text x="79.1389%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="78.8889%" y="229" width="0.3030%" height="15" fill="rgb(215,159,26)"/><text x="79.1389%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="78.8889%" y="213" width="0.3030%" height="15" fill="rgb(212,194,50)"/><text x="79.1389%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="78.8889%" y="197" width="0.3030%" height="15" fill="rgb(246,132,1)"/><text x="79.1389%" y="207.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.30%)</title><rect x="78.8889%" y="181" width="0.3030%" height="15" fill="rgb(217,71,7)"/><text x="79.1389%" y="191.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (7 samples, 0.71%)</title><rect x="78.6869%" y="325" width="0.7071%" height="15" fill="rgb(252,59,32)"/><text x="78.9369%" y="335.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (7 samples, 0.71%)</title><rect x="78.6869%" y="309" width="0.7071%" height="15" fill="rgb(253,204,25)"/><text x="78.9369%" y="319.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.51%)</title><rect x="78.8889%" y="293" width="0.5051%" height="15" fill="rgb(232,21,16)"/><text x="79.1389%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.20%)</title><rect x="79.1919%" y="277" width="0.2020%" height="15" fill="rgb(248,90,29)"/><text x="79.4419%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 1.11%)</title><rect x="78.3838%" y="517" width="1.1111%" height="15" fill="rgb(249,223,7)"/><text x="78.6338%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 1.11%)</title><rect x="78.3838%" y="501" width="1.1111%" height="15" fill="rgb(231,119,42)"/><text x="78.6338%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (11 samples, 1.11%)</title><rect x="78.3838%" y="485" width="1.1111%" height="15" fill="rgb(215,41,35)"/><text x="78.6338%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 1.11%)</title><rect x="78.3838%" y="469" width="1.1111%" height="15" fill="rgb(220,44,45)"/><text x="78.6338%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.81%)</title><rect x="78.6869%" y="453" width="0.8081%" height="15" fill="rgb(253,197,36)"/><text x="78.9369%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.81%)</title><rect x="78.6869%" y="437" width="0.8081%" height="15" fill="rgb(245,225,54)"/><text x="78.9369%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.81%)</title><rect x="78.6869%" y="421" width="0.8081%" height="15" fill="rgb(239,94,37)"/><text x="78.9369%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.81%)</title><rect x="78.6869%" y="405" width="0.8081%" height="15" fill="rgb(242,217,10)"/><text x="78.9369%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (8 samples, 0.81%)</title><rect x="78.6869%" y="389" width="0.8081%" height="15" fill="rgb(250,193,7)"/><text x="78.9369%" y="399.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (8 samples, 0.81%)</title><rect x="78.6869%" y="373" width="0.8081%" height="15" fill="rgb(230,104,19)"/><text x="78.9369%" y="383.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (8 samples, 0.81%)</title><rect x="78.6869%" y="357" width="0.8081%" height="15" fill="rgb(230,181,4)"/><text x="78.9369%" y="367.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (8 samples, 0.81%)</title><rect x="78.6869%" y="341" width="0.8081%" height="15" fill="rgb(216,219,49)"/><text x="78.9369%" y="351.50"></text></g><g><title>polar::formatting::to_polar::has_lower_pred (1 samples, 0.10%)</title><rect x="79.3939%" y="325" width="0.1010%" height="15" fill="rgb(254,144,0)"/><text x="79.6439%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="79.4949%" y="501" width="0.1010%" height="15" fill="rgb(205,209,38)"/><text x="79.7449%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="79.4949%" y="485" width="0.1010%" height="15" fill="rgb(240,21,42)"/><text x="79.7449%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="79.4949%" y="469" width="0.1010%" height="15" fill="rgb(241,132,3)"/><text x="79.7449%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="79.4949%" y="453" width="0.1010%" height="15" fill="rgb(225,14,2)"/><text x="79.7449%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="79.4949%" y="437" width="0.1010%" height="15" fill="rgb(210,141,35)"/><text x="79.7449%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="79.4949%" y="421" width="0.1010%" height="15" fill="rgb(251,14,44)"/><text x="79.7449%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="79.4949%" y="405" width="0.1010%" height="15" fill="rgb(247,48,18)"/><text x="79.7449%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="79.4949%" y="389" width="0.1010%" height="15" fill="rgb(225,0,40)"/><text x="79.7449%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="79.4949%" y="373" width="0.1010%" height="15" fill="rgb(221,31,33)"/><text x="79.7449%" y="383.50"></text></g><g><title>polar::formatting::to_polar::format_args (70 samples, 7.07%)</title><rect x="72.6263%" y="789" width="7.0707%" height="15" fill="rgb(237,42,40)"/><text x="72.8763%" y="799.50">polar::fo..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (70 samples, 7.07%)</title><rect x="72.6263%" y="773" width="7.0707%" height="15" fill="rgb(233,51,29)"/><text x="72.8763%" y="783.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (70 samples, 7.07%)</title><rect x="72.6263%" y="757" width="7.0707%" height="15" fill="rgb(226,58,20)"/><text x="72.8763%" y="767.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (70 samples, 7.07%)</title><rect x="72.6263%" y="741" width="7.0707%" height="15" fill="rgb(208,98,7)"/><text x="72.8763%" y="751.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (70 samples, 7.07%)</title><rect x="72.6263%" y="725" width="7.0707%" height="15" fill="rgb(228,143,44)"/><text x="72.8763%" y="735.50">&lt;alloc::v..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (70 samples, 7.07%)</title><rect x="72.6263%" y="709" width="7.0707%" height="15" fill="rgb(246,55,38)"/><text x="72.8763%" y="719.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 7.07%)</title><rect x="72.6263%" y="693" width="7.0707%" height="15" fill="rgb(247,87,16)"/><text x="72.8763%" y="703.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (70 samples, 7.07%)</title><rect x="72.6263%" y="677" width="7.0707%" height="15" fill="rgb(234,129,42)"/><text x="72.8763%" y="687.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (70 samples, 7.07%)</title><rect x="72.6263%" y="661" width="7.0707%" height="15" fill="rgb(220,82,16)"/><text x="72.8763%" y="671.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (70 samples, 7.07%)</title><rect x="72.6263%" y="645" width="7.0707%" height="15" fill="rgb(211,88,4)"/><text x="72.8763%" y="655.50">core::ite..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (70 samples, 7.07%)</title><rect x="72.6263%" y="629" width="7.0707%" height="15" fill="rgb(248,151,21)"/><text x="72.8763%" y="639.50">core::ite..</text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (70 samples, 7.07%)</title><rect x="72.6263%" y="613" width="7.0707%" height="15" fill="rgb(238,163,6)"/><text x="72.8763%" y="623.50">polar::fo..</text></g><g><title>polar::formatting::to_polar::to_polar_parens (70 samples, 7.07%)</title><rect x="72.6263%" y="597" width="7.0707%" height="15" fill="rgb(209,183,11)"/><text x="72.8763%" y="607.50">polar::fo..</text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (70 samples, 7.07%)</title><rect x="72.6263%" y="581" width="7.0707%" height="15" fill="rgb(219,37,20)"/><text x="72.8763%" y="591.50">&lt;polar::t..</text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (70 samples, 7.07%)</title><rect x="72.6263%" y="565" width="7.0707%" height="15" fill="rgb(210,158,4)"/><text x="72.8763%" y="575.50">&lt;polar::t..</text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (70 samples, 7.07%)</title><rect x="72.6263%" y="549" width="7.0707%" height="15" fill="rgb(221,167,53)"/><text x="72.8763%" y="559.50">&lt;polar::t..</text></g><g><title>polar::formatting::to_polar::format_args (23 samples, 2.32%)</title><rect x="77.3737%" y="533" width="2.3232%" height="15" fill="rgb(237,151,45)"/><text x="77.6237%" y="543.50">p..</text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="79.4949%" y="517" width="0.2020%" height="15" fill="rgb(231,39,3)"/><text x="79.7449%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="79.5960%" y="501" width="0.1010%" height="15" fill="rgb(212,167,28)"/><text x="79.8460%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="79.5960%" y="485" width="0.1010%" height="15" fill="rgb(232,178,8)"/><text x="79.8460%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="79.5960%" y="469" width="0.1010%" height="15" fill="rgb(225,151,20)"/><text x="79.8460%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="79.5960%" y="453" width="0.1010%" height="15" fill="rgb(238,3,37)"/><text x="79.8460%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="79.5960%" y="437" width="0.1010%" height="15" fill="rgb(251,147,42)"/><text x="79.8460%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="79.6970%" y="501" width="0.1010%" height="15" fill="rgb(208,173,10)"/><text x="79.9470%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.40%)</title><rect x="80.1010%" y="389" width="0.4040%" height="15" fill="rgb(246,225,4)"/><text x="80.3510%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.40%)</title><rect x="80.1010%" y="373" width="0.4040%" height="15" fill="rgb(248,102,6)"/><text x="80.3510%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.40%)</title><rect x="80.1010%" y="357" width="0.4040%" height="15" fill="rgb(232,6,21)"/><text x="80.3510%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (4 samples, 0.40%)</title><rect x="80.1010%" y="341" width="0.4040%" height="15" fill="rgb(221,179,22)"/><text x="80.3510%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.30%)</title><rect x="80.2020%" y="325" width="0.3030%" height="15" fill="rgb(252,50,20)"/><text x="80.4520%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="80.2020%" y="309" width="0.3030%" height="15" fill="rgb(222,56,38)"/><text x="80.4520%" y="319.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="80.3030%" y="293" width="0.2020%" height="15" fill="rgb(206,193,29)"/><text x="80.5530%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.81%)</title><rect x="80.0000%" y="469" width="0.8081%" height="15" fill="rgb(239,192,45)"/><text x="80.2500%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.71%)</title><rect x="80.1010%" y="453" width="0.7071%" height="15" fill="rgb(254,18,36)"/><text x="80.3510%" y="463.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.71%)</title><rect x="80.1010%" y="437" width="0.7071%" height="15" fill="rgb(221,127,11)"/><text x="80.3510%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.71%)</title><rect x="80.1010%" y="421" width="0.7071%" height="15" fill="rgb(234,146,35)"/><text x="80.3510%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.71%)</title><rect x="80.1010%" y="405" width="0.7071%" height="15" fill="rgb(254,201,37)"/><text x="80.3510%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.30%)</title><rect x="80.5051%" y="389" width="0.3030%" height="15" fill="rgb(211,202,23)"/><text x="80.7551%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.30%)</title><rect x="80.5051%" y="373" width="0.3030%" height="15" fill="rgb(237,91,2)"/><text x="80.7551%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.20%)</title><rect x="80.6061%" y="357" width="0.2020%" height="15" fill="rgb(226,228,36)"/><text x="80.8561%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (96 samples, 9.70%)</title><rect x="71.3131%" y="1269" width="9.6970%" height="15" fill="rgb(213,63,50)"/><text x="71.5631%" y="1279.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (96 samples, 9.70%)</title><rect x="71.3131%" y="1253" width="9.6970%" height="15" fill="rgb(235,194,19)"/><text x="71.5631%" y="1263.50">&lt;alloc::vec::V..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (96 samples, 9.70%)</title><rect x="71.3131%" y="1237" width="9.6970%" height="15" fill="rgb(207,204,18)"/><text x="71.5631%" y="1247.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (96 samples, 9.70%)</title><rect x="71.3131%" y="1221" width="9.6970%" height="15" fill="rgb(248,8,7)"/><text x="71.5631%" y="1231.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (96 samples, 9.70%)</title><rect x="71.3131%" y="1205" width="9.6970%" height="15" fill="rgb(223,145,47)"/><text x="71.5631%" y="1215.50">core::iter::tr..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (96 samples, 9.70%)</title><rect x="71.3131%" y="1189" width="9.6970%" height="15" fill="rgb(228,84,11)"/><text x="71.5631%" y="1199.50">core::iter::tr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (96 samples, 9.70%)</title><rect x="71.3131%" y="1173" width="9.6970%" height="15" fill="rgb(218,76,45)"/><text x="71.5631%" y="1183.50">core::iter::tr..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (96 samples, 9.70%)</title><rect x="71.3131%" y="1157" width="9.6970%" height="15" fill="rgb(223,80,15)"/><text x="71.5631%" y="1167.50">core::iter::ad..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (96 samples, 9.70%)</title><rect x="71.3131%" y="1141" width="9.6970%" height="15" fill="rgb(219,218,33)"/><text x="71.5631%" y="1151.50">core::ops::fun..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (96 samples, 9.70%)</title><rect x="71.3131%" y="1125" width="9.6970%" height="15" fill="rgb(208,51,11)"/><text x="71.5631%" y="1135.50">bench::simple_..</text></g><g><title>bench::Runner::run (96 samples, 9.70%)</title><rect x="71.3131%" y="1109" width="9.6970%" height="15" fill="rgb(229,165,39)"/><text x="71.5631%" y="1119.50">bench::Runner:..</text></g><g><title>bench::Runner::next (96 samples, 9.70%)</title><rect x="71.3131%" y="1093" width="9.6970%" height="15" fill="rgb(241,100,24)"/><text x="71.5631%" y="1103.50">bench::Runner:..</text></g><g><title>polar::polar::Polar::query (96 samples, 9.70%)</title><rect x="71.3131%" y="1077" width="9.6970%" height="15" fill="rgb(228,14,23)"/><text x="71.5631%" y="1087.50">polar::polar::..</text></g><g><title>polar::vm::PolarVirtualMachine::run (96 samples, 9.70%)</title><rect x="71.3131%" y="1061" width="9.6970%" height="15" fill="rgb(247,116,52)"/><text x="71.5631%" y="1071.50">polar::vm::Pol..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (96 samples, 9.70%)</title><rect x="71.3131%" y="1045" width="9.6970%" height="15" fill="rgb(216,149,33)"/><text x="71.5631%" y="1055.50">&lt;T as alloc::s..</text></g><g><title>core::fmt::Write::write_fmt (96 samples, 9.70%)</title><rect x="71.3131%" y="1029" width="9.6970%" height="15" fill="rgb(238,142,29)"/><text x="71.5631%" y="1039.50">core::fmt::Wri..</text></g><g><title>core::fmt::write (96 samples, 9.70%)</title><rect x="71.3131%" y="1013" width="9.6970%" height="15" fill="rgb(224,83,40)"/><text x="71.5631%" y="1023.50">core::fmt::wri..</text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (96 samples, 9.70%)</title><rect x="71.3131%" y="997" width="9.6970%" height="15" fill="rgb(234,165,11)"/><text x="71.5631%" y="1007.50">polar::formatt..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (83 samples, 8.38%)</title><rect x="72.6263%" y="981" width="8.3838%" height="15" fill="rgb(215,96,23)"/><text x="72.8763%" y="991.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (83 samples, 8.38%)</title><rect x="72.6263%" y="965" width="8.3838%" height="15" fill="rgb(233,179,26)"/><text x="72.8763%" y="975.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (83 samples, 8.38%)</title><rect x="72.6263%" y="949" width="8.3838%" height="15" fill="rgb(225,129,33)"/><text x="72.8763%" y="959.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (83 samples, 8.38%)</title><rect x="72.6263%" y="933" width="8.3838%" height="15" fill="rgb(237,49,13)"/><text x="72.8763%" y="943.50">&lt;alloc::vec:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (83 samples, 8.38%)</title><rect x="72.6263%" y="917" width="8.3838%" height="15" fill="rgb(211,3,31)"/><text x="72.8763%" y="927.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (83 samples, 8.38%)</title><rect x="72.6263%" y="901" width="8.3838%" height="15" fill="rgb(216,152,19)"/><text x="72.8763%" y="911.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (83 samples, 8.38%)</title><rect x="72.6263%" y="885" width="8.3838%" height="15" fill="rgb(251,121,35)"/><text x="72.8763%" y="895.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (83 samples, 8.38%)</title><rect x="72.6263%" y="869" width="8.3838%" height="15" fill="rgb(210,217,47)"/><text x="72.8763%" y="879.50">core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (83 samples, 8.38%)</title><rect x="72.6263%" y="853" width="8.3838%" height="15" fill="rgb(244,116,22)"/><text x="72.8763%" y="863.50">core::iter::..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (83 samples, 8.38%)</title><rect x="72.6263%" y="837" width="8.3838%" height="15" fill="rgb(228,17,21)"/><text x="72.8763%" y="847.50">core::iter::..</text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (83 samples, 8.38%)</title><rect x="72.6263%" y="821" width="8.3838%" height="15" fill="rgb(240,149,34)"/><text x="72.8763%" y="831.50">polar::forma..</text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (83 samples, 8.38%)</title><rect x="72.6263%" y="805" width="8.3838%" height="15" fill="rgb(208,125,47)"/><text x="72.8763%" y="815.50">&lt;polar::type..</text></g><g><title>polar::formatting::to_polar::format_params (13 samples, 1.31%)</title><rect x="79.6970%" y="789" width="1.3131%" height="15" fill="rgb(249,186,39)"/><text x="79.9470%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 1.31%)</title><rect x="79.6970%" y="773" width="1.3131%" height="15" fill="rgb(240,220,33)"/><text x="79.9470%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 1.31%)</title><rect x="79.6970%" y="757" width="1.3131%" height="15" fill="rgb(243,110,23)"/><text x="79.9470%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (13 samples, 1.31%)</title><rect x="79.6970%" y="741" width="1.3131%" height="15" fill="rgb(219,163,46)"/><text x="79.9470%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 1.31%)</title><rect x="79.6970%" y="725" width="1.3131%" height="15" fill="rgb(216,126,30)"/><text x="79.9470%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 1.31%)</title><rect x="79.6970%" y="709" width="1.3131%" height="15" fill="rgb(208,139,11)"/><text x="79.9470%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.31%)</title><rect x="79.6970%" y="693" width="1.3131%" height="15" fill="rgb(213,118,36)"/><text x="79.9470%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 1.31%)</title><rect x="79.6970%" y="677" width="1.3131%" height="15" fill="rgb(226,43,17)"/><text x="79.9470%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 1.31%)</title><rect x="79.6970%" y="661" width="1.3131%" height="15" fill="rgb(254,217,4)"/><text x="79.9470%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (13 samples, 1.31%)</title><rect x="79.6970%" y="645" width="1.3131%" height="15" fill="rgb(210,134,47)"/><text x="79.9470%" y="655.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (13 samples, 1.31%)</title><rect x="79.6970%" y="629" width="1.3131%" height="15" fill="rgb(237,24,49)"/><text x="79.9470%" y="639.50"></text></g><g><title>polar::formatting::to_polar::format_params::_{{closure}} (13 samples, 1.31%)</title><rect x="79.6970%" y="613" width="1.3131%" height="15" fill="rgb(251,39,46)"/><text x="79.9470%" y="623.50"></text></g><g><title>&lt;polar::types::Parameter as polar::formatting::to_polar::ToPolarString&gt;::to_polar (13 samples, 1.31%)</title><rect x="79.6970%" y="597" width="1.3131%" height="15" fill="rgb(251,220,3)"/><text x="79.9470%" y="607.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (13 samples, 1.31%)</title><rect x="79.6970%" y="581" width="1.3131%" height="15" fill="rgb(228,105,12)"/><text x="79.9470%" y="591.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (13 samples, 1.31%)</title><rect x="79.6970%" y="565" width="1.3131%" height="15" fill="rgb(215,196,1)"/><text x="79.9470%" y="575.50"></text></g><g><title>alloc::fmt::format (13 samples, 1.31%)</title><rect x="79.6970%" y="549" width="1.3131%" height="15" fill="rgb(214,33,39)"/><text x="79.9470%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (13 samples, 1.31%)</title><rect x="79.6970%" y="533" width="1.3131%" height="15" fill="rgb(220,19,52)"/><text x="79.9470%" y="543.50"></text></g><g><title>core::fmt::write (13 samples, 1.31%)</title><rect x="79.6970%" y="517" width="1.3131%" height="15" fill="rgb(221,78,38)"/><text x="79.9470%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (12 samples, 1.21%)</title><rect x="79.7980%" y="501" width="1.2121%" height="15" fill="rgb(253,30,16)"/><text x="80.0480%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (12 samples, 1.21%)</title><rect x="79.7980%" y="485" width="1.2121%" height="15" fill="rgb(242,65,0)"/><text x="80.0480%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.20%)</title><rect x="80.8081%" y="469" width="0.2020%" height="15" fill="rgb(235,201,12)"/><text x="81.0581%" y="479.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__reduce10 (1 samples, 0.10%)</title><rect x="81.0101%" y="933" width="0.1010%" height="15" fill="rgb(233,161,9)"/><text x="81.2601%" y="943.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__pop_Variant6 (1 samples, 0.10%)</title><rect x="81.0101%" y="917" width="0.1010%" height="15" fill="rgb(241,207,41)"/><text x="81.2601%" y="927.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__reduce12 (1 samples, 0.10%)</title><rect x="81.1111%" y="933" width="0.1010%" height="15" fill="rgb(212,69,46)"/><text x="81.3611%" y="943.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__pop_Variant6 (1 samples, 0.10%)</title><rect x="81.1111%" y="917" width="0.1010%" height="15" fill="rgb(239,69,45)"/><text x="81.3611%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::pop (1 samples, 0.10%)</title><rect x="81.1111%" y="901" width="0.1010%" height="15" fill="rgb(242,117,48)"/><text x="81.3611%" y="911.50"></text></g><g><title>core::ptr::read (1 samples, 0.10%)</title><rect x="81.1111%" y="885" width="0.1010%" height="15" fill="rgb(228,41,36)"/><text x="81.3611%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="81.1111%" y="869" width="0.1010%" height="15" fill="rgb(212,3,32)"/><text x="81.3611%" y="879.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__reduce34 (1 samples, 0.10%)</title><rect x="81.2121%" y="933" width="0.1010%" height="15" fill="rgb(233,41,49)"/><text x="81.4621%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.10%)</title><rect x="81.2121%" y="917" width="0.1010%" height="15" fill="rgb(252,170,49)"/><text x="81.4621%" y="927.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="81.2121%" y="901" width="0.1010%" height="15" fill="rgb(229,53,26)"/><text x="81.4621%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="81.2121%" y="885" width="0.1010%" height="15" fill="rgb(217,157,12)"/><text x="81.4621%" y="895.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__reduce60 (1 samples, 0.10%)</title><rect x="81.3131%" y="933" width="0.1010%" height="15" fill="rgb(227,17,9)"/><text x="81.5631%" y="943.50"></text></g><g><title>polar::parser::polar::__action87 (1 samples, 0.10%)</title><rect x="81.3131%" y="917" width="0.1010%" height="15" fill="rgb(218,84,12)"/><text x="81.5631%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="81.3131%" y="901" width="0.1010%" height="15" fill="rgb(212,79,24)"/><text x="81.5631%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="81.3131%" y="885" width="0.1010%" height="15" fill="rgb(217,222,37)"/><text x="81.5631%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="81.3131%" y="869" width="0.1010%" height="15" fill="rgb(246,208,8)"/><text x="81.5631%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="81.3131%" y="853" width="0.1010%" height="15" fill="rgb(244,133,10)"/><text x="81.5631%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="81.3131%" y="837" width="0.1010%" height="15" fill="rgb(209,219,41)"/><text x="81.5631%" y="847.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (101 samples, 10.20%)</title><rect x="71.3131%" y="1509" width="10.2020%" height="15" fill="rgb(253,175,45)"/><text x="71.5631%" y="1519.50">&lt;criterion::rou..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (101 samples, 10.20%)</title><rect x="71.3131%" y="1493" width="10.2020%" height="15" fill="rgb(235,100,37)"/><text x="71.5631%" y="1503.50">core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (101 samples, 10.20%)</title><rect x="71.3131%" y="1477" width="10.2020%" height="15" fill="rgb(225,87,19)"/><text x="71.5631%" y="1487.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (101 samples, 10.20%)</title><rect x="71.3131%" y="1461" width="10.2020%" height="15" fill="rgb(217,152,17)"/><text x="71.5631%" y="1471.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (101 samples, 10.20%)</title><rect x="71.3131%" y="1445" width="10.2020%" height="15" fill="rgb(235,72,13)"/><text x="71.5631%" y="1455.50">&lt;alloc::vec::Ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (101 samples, 10.20%)</title><rect x="71.3131%" y="1429" width="10.2020%" height="15" fill="rgb(233,140,18)"/><text x="71.5631%" y="1439.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (101 samples, 10.20%)</title><rect x="71.3131%" y="1413" width="10.2020%" height="15" fill="rgb(207,212,28)"/><text x="71.5631%" y="1423.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (101 samples, 10.20%)</title><rect x="71.3131%" y="1397" width="10.2020%" height="15" fill="rgb(220,130,25)"/><text x="71.5631%" y="1407.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (101 samples, 10.20%)</title><rect x="71.3131%" y="1381" width="10.2020%" height="15" fill="rgb(205,55,34)"/><text x="71.5631%" y="1391.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (101 samples, 10.20%)</title><rect x="71.3131%" y="1365" width="10.2020%" height="15" fill="rgb(237,54,35)"/><text x="71.5631%" y="1375.50">core::iter::tra..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (101 samples, 10.20%)</title><rect x="71.3131%" y="1349" width="10.2020%" height="15" fill="rgb(208,67,23)"/><text x="71.5631%" y="1359.50">core::iter::ada..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (101 samples, 10.20%)</title><rect x="71.3131%" y="1333" width="10.2020%" height="15" fill="rgb(206,207,50)"/><text x="71.5631%" y="1343.50">&lt;criterion::rou..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (101 samples, 10.20%)</title><rect x="71.3131%" y="1317" width="10.2020%" height="15" fill="rgb(213,211,42)"/><text x="71.5631%" y="1327.50">criterion::benc..</text></g><g><title>bench::too_many_predicates::_{{closure}} (101 samples, 10.20%)</title><rect x="71.3131%" y="1301" width="10.2020%" height="15" fill="rgb(252,197,50)"/><text x="71.5631%" y="1311.50">bench::too_many..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (101 samples, 10.20%)</title><rect x="71.3131%" y="1285" width="10.2020%" height="15" fill="rgb(251,211,41)"/><text x="71.5631%" y="1295.50">criterion::Benc..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.51%)</title><rect x="81.0101%" y="1269" width="0.5051%" height="15" fill="rgb(229,211,5)"/><text x="81.2601%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="81.0101%" y="1253" width="0.5051%" height="15" fill="rgb(239,36,31)"/><text x="81.2601%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.51%)</title><rect x="81.0101%" y="1237" width="0.5051%" height="15" fill="rgb(248,67,31)"/><text x="81.2601%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.51%)</title><rect x="81.0101%" y="1221" width="0.5051%" height="15" fill="rgb(249,55,44)"/><text x="81.2601%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.51%)</title><rect x="81.0101%" y="1205" width="0.5051%" height="15" fill="rgb(216,82,12)"/><text x="81.2601%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.51%)</title><rect x="81.0101%" y="1189" width="0.5051%" height="15" fill="rgb(242,174,1)"/><text x="81.2601%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.51%)</title><rect x="81.0101%" y="1173" width="0.5051%" height="15" fill="rgb(208,120,29)"/><text x="81.2601%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.51%)</title><rect x="81.0101%" y="1157" width="0.5051%" height="15" fill="rgb(221,105,43)"/><text x="81.2601%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (5 samples, 0.51%)</title><rect x="81.0101%" y="1141" width="0.5051%" height="15" fill="rgb(234,124,22)"/><text x="81.2601%" y="1151.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (5 samples, 0.51%)</title><rect x="81.0101%" y="1125" width="0.5051%" height="15" fill="rgb(212,23,30)"/><text x="81.2601%" y="1135.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched::_{{closure}} (5 samples, 0.51%)</title><rect x="81.0101%" y="1109" width="0.5051%" height="15" fill="rgb(219,122,53)"/><text x="81.2601%" y="1119.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.51%)</title><rect x="81.0101%" y="1093" width="0.5051%" height="15" fill="rgb(248,84,24)"/><text x="81.2601%" y="1103.50"></text></g><g><title>bench::too_many_predicates::make_runner (5 samples, 0.51%)</title><rect x="81.0101%" y="1077" width="0.5051%" height="15" fill="rgb(245,115,18)"/><text x="81.2601%" y="1087.50"></text></g><g><title>polar::polar::Polar::load_str (5 samples, 0.51%)</title><rect x="81.0101%" y="1061" width="0.5051%" height="15" fill="rgb(227,176,51)"/><text x="81.2601%" y="1071.50"></text></g><g><title>polar::polar::Polar::new_load (5 samples, 0.51%)</title><rect x="81.0101%" y="1045" width="0.5051%" height="15" fill="rgb(229,63,42)"/><text x="81.2601%" y="1055.50"></text></g><g><title>polar::parser::parse_lines (5 samples, 0.51%)</title><rect x="81.0101%" y="1029" width="0.5051%" height="15" fill="rgb(247,202,24)"/><text x="81.2601%" y="1039.50"></text></g><g><title>polar::parser::polar::__parse__Lines::LinesParser::parse (5 samples, 0.51%)</title><rect x="81.0101%" y="1013" width="0.5051%" height="15" fill="rgb(244,173,20)"/><text x="81.2601%" y="1023.50"></text></g><g><title>lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (5 samples, 0.51%)</title><rect x="81.0101%" y="997" width="0.5051%" height="15" fill="rgb(242,81,47)"/><text x="81.2601%" y="1007.50"></text></g><g><title>lalrpop_util::state_machine::Parser&lt;D,I&gt;::parse (5 samples, 0.51%)</title><rect x="81.0101%" y="981" width="0.5051%" height="15" fill="rgb(231,185,54)"/><text x="81.2601%" y="991.50"></text></g><g><title>&lt;polar::parser::polar::__parse__Lines::__StateMachine as lalrpop_util::state_machine::ParserDefinition&gt;::reduce (5 samples, 0.51%)</title><rect x="81.0101%" y="965" width="0.5051%" height="15" fill="rgb(243,55,32)"/><text x="81.2601%" y="975.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__reduce (5 samples, 0.51%)</title><rect x="81.0101%" y="949" width="0.5051%" height="15" fill="rgb(208,167,19)"/><text x="81.2601%" y="959.50"></text></g><g><title>polar::parser::polar::__parse__Lines::__reduce64 (1 samples, 0.10%)</title><rect x="81.4141%" y="933" width="0.1010%" height="15" fill="rgb(231,72,35)"/><text x="81.6641%" y="943.50"></text></g><g><title>polar::parser::polar::__action42 (1 samples, 0.10%)</title><rect x="81.4141%" y="917" width="0.1010%" height="15" fill="rgb(250,173,51)"/><text x="81.6641%" y="927.50"></text></g><g><title>polar::formatting::to_polar::format_args (1 samples, 0.10%)</title><rect x="81.5152%" y="1141" width="0.1010%" height="15" fill="rgb(209,5,22)"/><text x="81.7652%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="81.5152%" y="1125" width="0.1010%" height="15" fill="rgb(250,174,19)"/><text x="81.7652%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="81.5152%" y="1109" width="0.1010%" height="15" fill="rgb(217,3,49)"/><text x="81.7652%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="81.5152%" y="1093" width="0.1010%" height="15" fill="rgb(218,225,5)"/><text x="81.7652%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="81.5152%" y="1077" width="0.1010%" height="15" fill="rgb(236,89,11)"/><text x="81.7652%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="81.5152%" y="1061" width="0.1010%" height="15" fill="rgb(206,33,28)"/><text x="81.7652%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="81.5152%" y="1045" width="0.1010%" height="15" fill="rgb(241,56,42)"/><text x="81.7652%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="81.5152%" y="1029" width="0.1010%" height="15" fill="rgb(222,44,11)"/><text x="81.7652%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="81.5152%" y="1013" width="0.1010%" height="15" fill="rgb(234,111,20)"/><text x="81.7652%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="81.5152%" y="997" width="0.1010%" height="15" fill="rgb(237,77,6)"/><text x="81.7652%" y="1007.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="81.5152%" y="981" width="0.1010%" height="15" fill="rgb(235,111,23)"/><text x="81.7652%" y="991.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (1 samples, 0.10%)</title><rect x="81.5152%" y="965" width="0.1010%" height="15" fill="rgb(251,135,29)"/><text x="81.7652%" y="975.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (1 samples, 0.10%)</title><rect x="81.5152%" y="949" width="0.1010%" height="15" fill="rgb(217,57,1)"/><text x="81.7652%" y="959.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="81.5152%" y="933" width="0.1010%" height="15" fill="rgb(249,119,31)"/><text x="81.7652%" y="943.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="81.5152%" y="917" width="0.1010%" height="15" fill="rgb(233,164,33)"/><text x="81.7652%" y="927.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="81.5152%" y="901" width="0.1010%" height="15" fill="rgb(250,217,43)"/><text x="81.7652%" y="911.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="81.5152%" y="885" width="0.1010%" height="15" fill="rgb(232,154,50)"/><text x="81.7652%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="81.5152%" y="869" width="0.1010%" height="15" fill="rgb(227,190,8)"/><text x="81.7652%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="81.5152%" y="853" width="0.1010%" height="15" fill="rgb(209,217,32)"/><text x="81.7652%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="81.5152%" y="837" width="0.1010%" height="15" fill="rgb(243,203,50)"/><text x="81.7652%" y="847.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="81.5152%" y="1157" width="0.2020%" height="15" fill="rgb(232,152,27)"/><text x="81.7652%" y="1167.50"></text></g><g><title>polar::formatting::to_polar::format_params (1 samples, 0.10%)</title><rect x="81.6162%" y="1141" width="0.1010%" height="15" fill="rgb(240,34,29)"/><text x="81.8662%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="81.6162%" y="1125" width="0.1010%" height="15" fill="rgb(215,185,52)"/><text x="81.8662%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="81.6162%" y="1109" width="0.1010%" height="15" fill="rgb(240,89,49)"/><text x="81.8662%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="81.6162%" y="1093" width="0.1010%" height="15" fill="rgb(225,12,52)"/><text x="81.8662%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="81.6162%" y="1077" width="0.1010%" height="15" fill="rgb(239,128,45)"/><text x="81.8662%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="81.6162%" y="1061" width="0.1010%" height="15" fill="rgb(211,78,47)"/><text x="81.8662%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="81.6162%" y="1045" width="0.1010%" height="15" fill="rgb(232,31,21)"/><text x="81.8662%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="81.6162%" y="1029" width="0.1010%" height="15" fill="rgb(222,168,14)"/><text x="81.8662%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="81.6162%" y="1013" width="0.1010%" height="15" fill="rgb(209,128,24)"/><text x="81.8662%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="81.6162%" y="997" width="0.1010%" height="15" fill="rgb(249,35,13)"/><text x="81.8662%" y="1007.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="81.6162%" y="981" width="0.1010%" height="15" fill="rgb(218,7,2)"/><text x="81.8662%" y="991.50"></text></g><g><title>polar::formatting::to_polar::format_params::_{{closure}} (1 samples, 0.10%)</title><rect x="81.6162%" y="965" width="0.1010%" height="15" fill="rgb(238,107,27)"/><text x="81.8662%" y="975.50"></text></g><g><title>&lt;polar::types::Parameter as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="81.6162%" y="949" width="0.1010%" height="15" fill="rgb(217,88,38)"/><text x="81.8662%" y="959.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="81.6162%" y="933" width="0.1010%" height="15" fill="rgb(230,207,0)"/><text x="81.8662%" y="943.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="81.6162%" y="917" width="0.1010%" height="15" fill="rgb(249,64,54)"/><text x="81.8662%" y="927.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="81.6162%" y="901" width="0.1010%" height="15" fill="rgb(231,7,11)"/><text x="81.8662%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="81.6162%" y="885" width="0.1010%" height="15" fill="rgb(205,149,21)"/><text x="81.8662%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="81.6162%" y="869" width="0.1010%" height="15" fill="rgb(215,126,34)"/><text x="81.8662%" y="879.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.10%)</title><rect x="81.6162%" y="853" width="0.1010%" height="15" fill="rgb(241,132,45)"/><text x="81.8662%" y="863.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="81.6162%" y="837" width="0.1010%" height="15" fill="rgb(252,69,32)"/><text x="81.8662%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.10%)</title><rect x="81.6162%" y="821" width="0.1010%" height="15" fill="rgb(232,204,19)"/><text x="81.8662%" y="831.50"></text></g><g><title>&lt;polar::types::Symbol as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="81.7172%" y="709" width="0.2020%" height="15" fill="rgb(249,15,47)"/><text x="81.9672%" y="719.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (2 samples, 0.20%)</title><rect x="81.7172%" y="693" width="0.2020%" height="15" fill="rgb(209,227,23)"/><text x="81.9672%" y="703.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (2 samples, 0.20%)</title><rect x="81.7172%" y="677" width="0.2020%" height="15" fill="rgb(248,92,24)"/><text x="81.9672%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="81.7172%" y="661" width="0.2020%" height="15" fill="rgb(247,59,2)"/><text x="81.9672%" y="671.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.40%)</title><rect x="81.9192%" y="709" width="0.4040%" height="15" fill="rgb(221,30,5)"/><text x="82.1692%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.40%)</title><rect x="81.9192%" y="693" width="0.4040%" height="15" fill="rgb(208,108,53)"/><text x="82.1692%" y="703.50"></text></g><g><title>core::fmt::write (3 samples, 0.30%)</title><rect x="82.0202%" y="677" width="0.3030%" height="15" fill="rgb(211,183,26)"/><text x="82.2702%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.30%)</title><rect x="82.0202%" y="661" width="0.3030%" height="15" fill="rgb(232,132,4)"/><text x="82.2702%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="82.2222%" y="645" width="0.1010%" height="15" fill="rgb(253,128,37)"/><text x="82.4722%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="82.2222%" y="629" width="0.1010%" height="15" fill="rgb(221,58,24)"/><text x="82.4722%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="82.2222%" y="613" width="0.1010%" height="15" fill="rgb(230,54,45)"/><text x="82.4722%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="82.2222%" y="597" width="0.1010%" height="15" fill="rgb(254,21,18)"/><text x="82.4722%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="82.2222%" y="581" width="0.1010%" height="15" fill="rgb(221,108,0)"/><text x="82.4722%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="82.2222%" y="565" width="0.1010%" height="15" fill="rgb(206,95,1)"/><text x="82.4722%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="82.2222%" y="549" width="0.1010%" height="15" fill="rgb(237,52,5)"/><text x="82.4722%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="82.2222%" y="533" width="0.1010%" height="15" fill="rgb(218,150,34)"/><text x="82.4722%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="82.2222%" y="517" width="0.1010%" height="15" fill="rgb(235,194,28)"/><text x="82.4722%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="82.2222%" y="501" width="0.1010%" height="15" fill="rgb(245,92,18)"/><text x="82.4722%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="82.2222%" y="485" width="0.1010%" height="15" fill="rgb(253,203,53)"/><text x="82.4722%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="82.3232%" y="709" width="0.2020%" height="15" fill="rgb(249,185,47)"/><text x="82.5732%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="82.3232%" y="693" width="0.2020%" height="15" fill="rgb(252,194,52)"/><text x="82.5732%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="82.3232%" y="677" width="0.2020%" height="15" fill="rgb(210,53,36)"/><text x="82.5732%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="82.3232%" y="661" width="0.2020%" height="15" fill="rgb(237,37,25)"/><text x="82.5732%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="82.3232%" y="645" width="0.2020%" height="15" fill="rgb(242,116,27)"/><text x="82.5732%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="82.3232%" y="629" width="0.2020%" height="15" fill="rgb(213,185,26)"/><text x="82.5732%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="82.3232%" y="613" width="0.2020%" height="15" fill="rgb(225,204,8)"/><text x="82.5732%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.10%)</title><rect x="82.5253%" y="693" width="0.1010%" height="15" fill="rgb(254,111,37)"/><text x="82.7753%" y="703.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.10%)</title><rect x="82.5253%" y="677" width="0.1010%" height="15" fill="rgb(242,35,9)"/><text x="82.7753%" y="687.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.10%)</title><rect x="82.5253%" y="661" width="0.1010%" height="15" fill="rgb(232,138,49)"/><text x="82.7753%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="82.6263%" y="629" width="0.1010%" height="15" fill="rgb(247,56,4)"/><text x="82.8763%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="82.6263%" y="613" width="0.1010%" height="15" fill="rgb(226,179,17)"/><text x="82.8763%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="82.6263%" y="597" width="0.1010%" height="15" fill="rgb(216,163,45)"/><text x="82.8763%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="82.6263%" y="581" width="0.1010%" height="15" fill="rgb(211,157,3)"/><text x="82.8763%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="82.6263%" y="565" width="0.1010%" height="15" fill="rgb(234,44,20)"/><text x="82.8763%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="82.6263%" y="549" width="0.1010%" height="15" fill="rgb(254,138,23)"/><text x="82.8763%" y="559.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="82.6263%" y="533" width="0.1010%" height="15" fill="rgb(206,119,39)"/><text x="82.8763%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.30%)</title><rect x="82.6263%" y="693" width="0.3030%" height="15" fill="rgb(231,105,52)"/><text x="82.8763%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="82.6263%" y="677" width="0.3030%" height="15" fill="rgb(250,20,5)"/><text x="82.8763%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="82.6263%" y="661" width="0.3030%" height="15" fill="rgb(215,198,30)"/><text x="82.8763%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="82.6263%" y="645" width="0.3030%" height="15" fill="rgb(246,142,8)"/><text x="82.8763%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="82.7273%" y="629" width="0.2020%" height="15" fill="rgb(243,26,38)"/><text x="82.9773%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="82.7273%" y="613" width="0.2020%" height="15" fill="rgb(205,133,28)"/><text x="82.9773%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="82.7273%" y="597" width="0.2020%" height="15" fill="rgb(212,34,0)"/><text x="82.9773%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="82.7273%" y="581" width="0.2020%" height="15" fill="rgb(251,226,22)"/><text x="82.9773%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="82.7273%" y="565" width="0.2020%" height="15" fill="rgb(252,119,9)"/><text x="82.9773%" y="575.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="82.7273%" y="549" width="0.2020%" height="15" fill="rgb(213,150,50)"/><text x="82.9773%" y="559.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (2 samples, 0.20%)</title><rect x="82.7273%" y="533" width="0.2020%" height="15" fill="rgb(212,24,39)"/><text x="82.9773%" y="543.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (2 samples, 0.20%)</title><rect x="82.7273%" y="517" width="0.2020%" height="15" fill="rgb(213,46,39)"/><text x="82.9773%" y="527.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (2 samples, 0.20%)</title><rect x="82.7273%" y="501" width="0.2020%" height="15" fill="rgb(239,106,12)"/><text x="82.9773%" y="511.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (1 samples, 0.10%)</title><rect x="82.8283%" y="485" width="0.1010%" height="15" fill="rgb(249,229,21)"/><text x="83.0783%" y="495.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="82.8283%" y="469" width="0.1010%" height="15" fill="rgb(212,158,3)"/><text x="83.0783%" y="479.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="82.8283%" y="453" width="0.1010%" height="15" fill="rgb(253,26,48)"/><text x="83.0783%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="82.9293%" y="677" width="0.1010%" height="15" fill="rgb(238,178,20)"/><text x="83.1793%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="82.9293%" y="661" width="0.1010%" height="15" fill="rgb(208,86,15)"/><text x="83.1793%" y="671.50"></text></g><g><title>polar::formatting::to_polar::format_args (14 samples, 1.41%)</title><rect x="81.7172%" y="965" width="1.4141%" height="15" fill="rgb(239,42,53)"/><text x="81.9672%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 1.41%)</title><rect x="81.7172%" y="949" width="1.4141%" height="15" fill="rgb(245,226,8)"/><text x="81.9672%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 1.41%)</title><rect x="81.7172%" y="933" width="1.4141%" height="15" fill="rgb(216,176,32)"/><text x="81.9672%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (14 samples, 1.41%)</title><rect x="81.7172%" y="917" width="1.4141%" height="15" fill="rgb(231,186,21)"/><text x="81.9672%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 1.41%)</title><rect x="81.7172%" y="901" width="1.4141%" height="15" fill="rgb(205,95,49)"/><text x="81.9672%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 1.41%)</title><rect x="81.7172%" y="885" width="1.4141%" height="15" fill="rgb(217,145,8)"/><text x="81.9672%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.41%)</title><rect x="81.7172%" y="869" width="1.4141%" height="15" fill="rgb(239,144,48)"/><text x="81.9672%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 1.41%)</title><rect x="81.7172%" y="853" width="1.4141%" height="15" fill="rgb(214,189,23)"/><text x="81.9672%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 1.41%)</title><rect x="81.7172%" y="837" width="1.4141%" height="15" fill="rgb(229,157,17)"/><text x="81.9672%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (14 samples, 1.41%)</title><rect x="81.7172%" y="821" width="1.4141%" height="15" fill="rgb(230,5,48)"/><text x="81.9672%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (14 samples, 1.41%)</title><rect x="81.7172%" y="805" width="1.4141%" height="15" fill="rgb(224,156,48)"/><text x="81.9672%" y="815.50"></text></g><g><title>polar::formatting::to_polar::format_args::_{{closure}} (14 samples, 1.41%)</title><rect x="81.7172%" y="789" width="1.4141%" height="15" fill="rgb(223,14,29)"/><text x="81.9672%" y="799.50"></text></g><g><title>polar::formatting::to_polar::to_polar_parens (14 samples, 1.41%)</title><rect x="81.7172%" y="773" width="1.4141%" height="15" fill="rgb(229,96,36)"/><text x="81.9672%" y="783.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (14 samples, 1.41%)</title><rect x="81.7172%" y="757" width="1.4141%" height="15" fill="rgb(231,102,53)"/><text x="81.9672%" y="767.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (14 samples, 1.41%)</title><rect x="81.7172%" y="741" width="1.4141%" height="15" fill="rgb(210,77,38)"/><text x="81.9672%" y="751.50"></text></g><g><title>&lt;polar::types::Predicate as polar::formatting::to_polar::ToPolarString&gt;::to_polar (14 samples, 1.41%)</title><rect x="81.7172%" y="725" width="1.4141%" height="15" fill="rgb(235,131,6)"/><text x="81.9672%" y="735.50"></text></g><g><title>polar::formatting::to_polar::format_args (6 samples, 0.61%)</title><rect x="82.5253%" y="709" width="0.6061%" height="15" fill="rgb(252,55,38)"/><text x="82.7753%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="82.9293%" y="693" width="0.2020%" height="15" fill="rgb(246,38,14)"/><text x="83.1793%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="83.0303%" y="677" width="0.1010%" height="15" fill="rgb(242,27,5)"/><text x="83.2803%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="83.0303%" y="661" width="0.1010%" height="15" fill="rgb(228,65,35)"/><text x="83.2803%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="83.0303%" y="645" width="0.1010%" height="15" fill="rgb(245,93,11)"/><text x="83.2803%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="83.0303%" y="629" width="0.1010%" height="15" fill="rgb(213,1,31)"/><text x="83.2803%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="83.0303%" y="613" width="0.1010%" height="15" fill="rgb(237,205,14)"/><text x="83.2803%" y="623.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.10%)</title><rect x="83.2323%" y="677" width="0.1010%" height="15" fill="rgb(232,118,45)"/><text x="83.4823%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.10%)</title><rect x="83.2323%" y="661" width="0.1010%" height="15" fill="rgb(218,5,6)"/><text x="83.4823%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="83.2323%" y="645" width="0.1010%" height="15" fill="rgb(251,87,51)"/><text x="83.4823%" y="655.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (120 samples, 12.12%)</title><rect x="71.3131%" y="1573" width="12.1212%" height="15" fill="rgb(207,225,20)"/><text x="71.5631%" y="1583.50">criterion::benchma..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (120 samples, 12.12%)</title><rect x="71.3131%" y="1557" width="12.1212%" height="15" fill="rgb(222,78,54)"/><text x="71.5631%" y="1567.50">criterion::benchma..</text></g><g><title>criterion::analysis::common (120 samples, 12.12%)</title><rect x="71.3131%" y="1541" width="12.1212%" height="15" fill="rgb(232,85,16)"/><text x="71.5631%" y="1551.50">criterion::analysi..</text></g><g><title>criterion::routine::Routine::profile (120 samples, 12.12%)</title><rect x="71.3131%" y="1525" width="12.1212%" height="15" fill="rgb(244,25,33)"/><text x="71.5631%" y="1535.50">criterion::routine..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (19 samples, 1.92%)</title><rect x="81.5152%" y="1509" width="1.9192%" height="15" fill="rgb(233,24,36)"/><text x="81.7652%" y="1519.50">&lt;..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (19 samples, 1.92%)</title><rect x="81.5152%" y="1493" width="1.9192%" height="15" fill="rgb(253,49,54)"/><text x="81.7652%" y="1503.50">c..</text></g><g><title>bench::too_many_predicates::_{{closure}} (19 samples, 1.92%)</title><rect x="81.5152%" y="1477" width="1.9192%" height="15" fill="rgb(245,12,22)"/><text x="81.7652%" y="1487.50">b..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (19 samples, 1.92%)</title><rect x="81.5152%" y="1461" width="1.9192%" height="15" fill="rgb(253,141,28)"/><text x="81.7652%" y="1471.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (19 samples, 1.92%)</title><rect x="81.5152%" y="1445" width="1.9192%" height="15" fill="rgb(225,207,27)"/><text x="81.7652%" y="1455.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 1.92%)</title><rect x="81.5152%" y="1429" width="1.9192%" height="15" fill="rgb(220,84,2)"/><text x="81.7652%" y="1439.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 1.92%)</title><rect x="81.5152%" y="1413" width="1.9192%" height="15" fill="rgb(224,37,37)"/><text x="81.7652%" y="1423.50">c..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.92%)</title><rect x="81.5152%" y="1397" width="1.9192%" height="15" fill="rgb(220,143,18)"/><text x="81.7652%" y="1407.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (19 samples, 1.92%)</title><rect x="81.5152%" y="1381" width="1.9192%" height="15" fill="rgb(210,88,33)"/><text x="81.7652%" y="1391.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 1.92%)</title><rect x="81.5152%" y="1365" width="1.9192%" height="15" fill="rgb(219,87,51)"/><text x="81.7652%" y="1375.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (19 samples, 1.92%)</title><rect x="81.5152%" y="1349" width="1.9192%" height="15" fill="rgb(211,7,35)"/><text x="81.7652%" y="1359.50">c..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (19 samples, 1.92%)</title><rect x="81.5152%" y="1333" width="1.9192%" height="15" fill="rgb(232,77,2)"/><text x="81.7652%" y="1343.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 1.92%)</title><rect x="81.5152%" y="1317" width="1.9192%" height="15" fill="rgb(249,94,25)"/><text x="81.7652%" y="1327.50">c..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (19 samples, 1.92%)</title><rect x="81.5152%" y="1301" width="1.9192%" height="15" fill="rgb(215,112,2)"/><text x="81.7652%" y="1311.50">b..</text></g><g><title>bench::Runner::run (19 samples, 1.92%)</title><rect x="81.5152%" y="1285" width="1.9192%" height="15" fill="rgb(226,115,48)"/><text x="81.7652%" y="1295.50">b..</text></g><g><title>bench::Runner::next (19 samples, 1.92%)</title><rect x="81.5152%" y="1269" width="1.9192%" height="15" fill="rgb(249,196,10)"/><text x="81.7652%" y="1279.50">b..</text></g><g><title>polar::polar::Polar::query (19 samples, 1.92%)</title><rect x="81.5152%" y="1253" width="1.9192%" height="15" fill="rgb(237,109,14)"/><text x="81.7652%" y="1263.50">p..</text></g><g><title>polar::vm::PolarVirtualMachine::run (19 samples, 1.92%)</title><rect x="81.5152%" y="1237" width="1.9192%" height="15" fill="rgb(217,103,53)"/><text x="81.7652%" y="1247.50">p..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (19 samples, 1.92%)</title><rect x="81.5152%" y="1221" width="1.9192%" height="15" fill="rgb(244,137,9)"/><text x="81.7652%" y="1231.50">&lt;..</text></g><g><title>core::fmt::Write::write_fmt (19 samples, 1.92%)</title><rect x="81.5152%" y="1205" width="1.9192%" height="15" fill="rgb(227,201,3)"/><text x="81.7652%" y="1215.50">c..</text></g><g><title>core::fmt::write (19 samples, 1.92%)</title><rect x="81.5152%" y="1189" width="1.9192%" height="15" fill="rgb(243,94,6)"/><text x="81.7652%" y="1199.50">c..</text></g><g><title>polar::formatting::display::&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt (19 samples, 1.92%)</title><rect x="81.5152%" y="1173" width="1.9192%" height="15" fill="rgb(235,118,5)"/><text x="81.7652%" y="1183.50">p..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 1.72%)</title><rect x="81.7172%" y="1157" width="1.7172%" height="15" fill="rgb(247,10,30)"/><text x="81.9672%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 1.72%)</title><rect x="81.7172%" y="1141" width="1.7172%" height="15" fill="rgb(205,26,28)"/><text x="81.9672%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (17 samples, 1.72%)</title><rect x="81.7172%" y="1125" width="1.7172%" height="15" fill="rgb(206,99,35)"/><text x="81.9672%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 1.72%)</title><rect x="81.7172%" y="1109" width="1.7172%" height="15" fill="rgb(238,130,40)"/><text x="81.9672%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 1.72%)</title><rect x="81.7172%" y="1093" width="1.7172%" height="15" fill="rgb(224,126,31)"/><text x="81.9672%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.72%)</title><rect x="81.7172%" y="1077" width="1.7172%" height="15" fill="rgb(254,105,17)"/><text x="81.9672%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 1.72%)</title><rect x="81.7172%" y="1061" width="1.7172%" height="15" fill="rgb(216,87,36)"/><text x="81.9672%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 1.72%)</title><rect x="81.7172%" y="1045" width="1.7172%" height="15" fill="rgb(240,21,12)"/><text x="81.9672%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (17 samples, 1.72%)</title><rect x="81.7172%" y="1029" width="1.7172%" height="15" fill="rgb(245,192,34)"/><text x="81.9672%" y="1039.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (17 samples, 1.72%)</title><rect x="81.7172%" y="1013" width="1.7172%" height="15" fill="rgb(226,100,49)"/><text x="81.9672%" y="1023.50"></text></g><g><title>polar::formatting::display::_&lt;impl core::fmt::Display for polar::vm::Goal&gt;::fmt::_{{closure}} (17 samples, 1.72%)</title><rect x="81.7172%" y="997" width="1.7172%" height="15" fill="rgb(245,188,27)"/><text x="81.9672%" y="1007.50"></text></g><g><title>&lt;polar::types::Rule as polar::formatting::to_polar::ToPolarString&gt;::to_polar (17 samples, 1.72%)</title><rect x="81.7172%" y="981" width="1.7172%" height="15" fill="rgb(212,170,8)"/><text x="81.9672%" y="991.50"></text></g><g><title>polar::formatting::to_polar::format_params (3 samples, 0.30%)</title><rect x="83.1313%" y="965" width="0.3030%" height="15" fill="rgb(217,113,29)"/><text x="83.3813%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.30%)</title><rect x="83.1313%" y="949" width="0.3030%" height="15" fill="rgb(237,30,3)"/><text x="83.3813%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="83.1313%" y="933" width="0.3030%" height="15" fill="rgb(227,19,28)"/><text x="83.3813%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.30%)</title><rect x="83.1313%" y="917" width="0.3030%" height="15" fill="rgb(239,172,45)"/><text x="83.3813%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="83.1313%" y="901" width="0.3030%" height="15" fill="rgb(254,55,39)"/><text x="83.3813%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="83.1313%" y="885" width="0.3030%" height="15" fill="rgb(249,208,12)"/><text x="83.3813%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="83.1313%" y="869" width="0.3030%" height="15" fill="rgb(240,52,13)"/><text x="83.3813%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="83.1313%" y="853" width="0.3030%" height="15" fill="rgb(252,149,13)"/><text x="83.3813%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="83.1313%" y="837" width="0.3030%" height="15" fill="rgb(232,81,48)"/><text x="83.3813%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="83.1313%" y="821" width="0.3030%" height="15" fill="rgb(222,144,2)"/><text x="83.3813%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="83.1313%" y="805" width="0.3030%" height="15" fill="rgb(216,81,32)"/><text x="83.3813%" y="815.50"></text></g><g><title>polar::formatting::to_polar::format_params::_{{closure}} (3 samples, 0.30%)</title><rect x="83.1313%" y="789" width="0.3030%" height="15" fill="rgb(244,78,51)"/><text x="83.3813%" y="799.50"></text></g><g><title>&lt;polar::types::Parameter as polar::formatting::to_polar::ToPolarString&gt;::to_polar (3 samples, 0.30%)</title><rect x="83.1313%" y="773" width="0.3030%" height="15" fill="rgb(217,66,21)"/><text x="83.3813%" y="783.50"></text></g><g><title>&lt;polar::types::Term as polar::formatting::to_polar::ToPolarString&gt;::to_polar (3 samples, 0.30%)</title><rect x="83.1313%" y="757" width="0.3030%" height="15" fill="rgb(247,101,42)"/><text x="83.3813%" y="767.50"></text></g><g><title>&lt;polar::types::Value as polar::formatting::to_polar::ToPolarString&gt;::to_polar (3 samples, 0.30%)</title><rect x="83.1313%" y="741" width="0.3030%" height="15" fill="rgb(227,81,39)"/><text x="83.3813%" y="751.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.30%)</title><rect x="83.1313%" y="725" width="0.3030%" height="15" fill="rgb(220,223,44)"/><text x="83.3813%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.30%)</title><rect x="83.1313%" y="709" width="0.3030%" height="15" fill="rgb(205,218,2)"/><text x="83.3813%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.30%)</title><rect x="83.1313%" y="693" width="0.3030%" height="15" fill="rgb(212,207,28)"/><text x="83.3813%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.10%)</title><rect x="83.3333%" y="677" width="0.1010%" height="15" fill="rgb(224,12,41)"/><text x="83.5833%" y="687.50"></text></g><g><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.10%)</title><rect x="83.3333%" y="661" width="0.1010%" height="15" fill="rgb(216,118,12)"/><text x="83.5833%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="83.4343%" y="917" width="0.3030%" height="15" fill="rgb(252,97,46)"/><text x="83.6843%" y="927.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="83.5354%" y="901" width="0.2020%" height="15" fill="rgb(244,206,19)"/><text x="83.7854%" y="911.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="83.7374%" y="917" width="0.1010%" height="15" fill="rgb(231,84,31)"/><text x="83.9874%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.51%)</title><rect x="83.4343%" y="1061" width="0.5051%" height="15" fill="rgb(244,133,0)"/><text x="83.6843%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.51%)</title><rect x="83.4343%" y="1045" width="0.5051%" height="15" fill="rgb(223,15,50)"/><text x="83.6843%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.51%)</title><rect x="83.4343%" y="1029" width="0.5051%" height="15" fill="rgb(250,118,49)"/><text x="83.6843%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="83.4343%" y="1013" width="0.5051%" height="15" fill="rgb(248,25,38)"/><text x="83.6843%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="83.4343%" y="997" width="0.5051%" height="15" fill="rgb(215,70,14)"/><text x="83.6843%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.51%)</title><rect x="83.4343%" y="981" width="0.5051%" height="15" fill="rgb(215,28,15)"/><text x="83.6843%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.51%)</title><rect x="83.4343%" y="965" width="0.5051%" height="15" fill="rgb(243,6,28)"/><text x="83.6843%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.51%)</title><rect x="83.4343%" y="949" width="0.5051%" height="15" fill="rgb(222,130,1)"/><text x="83.6843%" y="959.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.51%)</title><rect x="83.4343%" y="933" width="0.5051%" height="15" fill="rgb(236,166,44)"/><text x="83.6843%" y="943.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="83.8384%" y="917" width="0.1010%" height="15" fill="rgb(221,108,14)"/><text x="84.0884%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="84.0404%" y="1013" width="0.1010%" height="15" fill="rgb(252,3,45)"/><text x="84.2904%" y="1023.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="84.7475%" y="997" width="0.1010%" height="15" fill="rgb(237,68,30)"/><text x="84.9975%" y="1007.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="84.8485%" y="997" width="0.1010%" height="15" fill="rgb(211,79,22)"/><text x="85.0985%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="84.9495%" y="997" width="0.1010%" height="15" fill="rgb(252,185,21)"/><text x="85.1995%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="85.1515%" y="917" width="0.2020%" height="15" fill="rgb(225,189,26)"/><text x="85.4015%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="85.1515%" y="901" width="0.2020%" height="15" fill="rgb(241,30,40)"/><text x="85.4015%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="85.1515%" y="885" width="0.2020%" height="15" fill="rgb(235,215,44)"/><text x="85.4015%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="85.1515%" y="869" width="0.2020%" height="15" fill="rgb(205,8,29)"/><text x="85.4015%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="85.3535%" y="901" width="0.2020%" height="15" fill="rgb(241,137,42)"/><text x="85.6035%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="85.3535%" y="885" width="0.2020%" height="15" fill="rgb(237,155,2)"/><text x="85.6035%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="85.3535%" y="869" width="0.2020%" height="15" fill="rgb(245,29,42)"/><text x="85.6035%" y="879.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="85.3535%" y="853" width="0.2020%" height="15" fill="rgb(234,101,35)"/><text x="85.6035%" y="863.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="85.5556%" y="853" width="0.2020%" height="15" fill="rgb(228,64,37)"/><text x="85.8056%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="85.9596%" y="805" width="0.1010%" height="15" fill="rgb(217,214,36)"/><text x="86.2096%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="85.9596%" y="789" width="0.1010%" height="15" fill="rgb(243,70,3)"/><text x="86.2096%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="85.9596%" y="773" width="0.1010%" height="15" fill="rgb(253,158,52)"/><text x="86.2096%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="85.9596%" y="757" width="0.1010%" height="15" fill="rgb(234,111,54)"/><text x="86.2096%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.81%)</title><rect x="85.5556%" y="901" width="0.8081%" height="15" fill="rgb(217,70,32)"/><text x="85.8056%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.81%)</title><rect x="85.5556%" y="885" width="0.8081%" height="15" fill="rgb(234,18,33)"/><text x="85.8056%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.81%)</title><rect x="85.5556%" y="869" width="0.8081%" height="15" fill="rgb(234,12,49)"/><text x="85.8056%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.61%)</title><rect x="85.7576%" y="853" width="0.6061%" height="15" fill="rgb(236,10,21)"/><text x="86.0076%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="85.9596%" y="837" width="0.4040%" height="15" fill="rgb(248,182,45)"/><text x="86.2096%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="85.9596%" y="821" width="0.4040%" height="15" fill="rgb(217,95,36)"/><text x="86.2096%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="86.0606%" y="805" width="0.3030%" height="15" fill="rgb(212,110,31)"/><text x="86.3106%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="86.0606%" y="789" width="0.3030%" height="15" fill="rgb(206,32,53)"/><text x="86.3106%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="86.0606%" y="773" width="0.3030%" height="15" fill="rgb(246,141,37)"/><text x="86.3106%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="86.0606%" y="757" width="0.3030%" height="15" fill="rgb(219,16,7)"/><text x="86.3106%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="86.1616%" y="741" width="0.2020%" height="15" fill="rgb(230,205,45)"/><text x="86.4116%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="86.1616%" y="725" width="0.2020%" height="15" fill="rgb(231,43,49)"/><text x="86.4116%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.20%)</title><rect x="86.1616%" y="709" width="0.2020%" height="15" fill="rgb(212,106,34)"/><text x="86.4116%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="86.3636%" y="853" width="0.1010%" height="15" fill="rgb(206,83,17)"/><text x="86.6136%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="86.3636%" y="837" width="0.1010%" height="15" fill="rgb(244,154,49)"/><text x="86.6136%" y="847.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="86.3636%" y="821" width="0.1010%" height="15" fill="rgb(244,149,49)"/><text x="86.6136%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.41%)</title><rect x="85.1515%" y="981" width="1.4141%" height="15" fill="rgb(227,134,18)"/><text x="85.4015%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 1.41%)</title><rect x="85.1515%" y="965" width="1.4141%" height="15" fill="rgb(237,116,36)"/><text x="85.4015%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 1.41%)</title><rect x="85.1515%" y="949" width="1.4141%" height="15" fill="rgb(205,129,40)"/><text x="85.4015%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 1.41%)</title><rect x="85.1515%" y="933" width="1.4141%" height="15" fill="rgb(236,178,4)"/><text x="85.4015%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 1.21%)</title><rect x="85.3535%" y="917" width="1.2121%" height="15" fill="rgb(251,76,53)"/><text x="85.6035%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="86.3636%" y="901" width="0.2020%" height="15" fill="rgb(242,92,40)"/><text x="86.6136%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="86.3636%" y="885" width="0.2020%" height="15" fill="rgb(209,45,30)"/><text x="86.6136%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="86.3636%" y="869" width="0.2020%" height="15" fill="rgb(218,157,36)"/><text x="86.6136%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="86.4646%" y="853" width="0.1010%" height="15" fill="rgb(222,186,16)"/><text x="86.7146%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="86.5657%" y="965" width="0.1010%" height="15" fill="rgb(254,72,35)"/><text x="86.8157%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="86.5657%" y="949" width="0.1010%" height="15" fill="rgb(224,25,35)"/><text x="86.8157%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="87.4747%" y="869" width="0.1010%" height="15" fill="rgb(206,135,52)"/><text x="87.7247%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="87.4747%" y="853" width="0.1010%" height="15" fill="rgb(229,174,47)"/><text x="87.7247%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="87.4747%" y="837" width="0.1010%" height="15" fill="rgb(242,184,21)"/><text x="87.7247%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="87.4747%" y="821" width="0.1010%" height="15" fill="rgb(213,22,45)"/><text x="87.7247%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.11%)</title><rect x="86.6667%" y="965" width="1.1111%" height="15" fill="rgb(237,81,54)"/><text x="86.9167%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.11%)</title><rect x="86.6667%" y="949" width="1.1111%" height="15" fill="rgb(248,177,18)"/><text x="86.9167%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.11%)</title><rect x="86.6667%" y="933" width="1.1111%" height="15" fill="rgb(254,31,16)"/><text x="86.9167%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.11%)</title><rect x="86.6667%" y="917" width="1.1111%" height="15" fill="rgb(235,20,31)"/><text x="86.9167%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="87.4747%" y="901" width="0.3030%" height="15" fill="rgb(240,56,43)"/><text x="87.7247%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="87.4747%" y="885" width="0.3030%" height="15" fill="rgb(237,197,51)"/><text x="87.7247%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="87.5758%" y="869" width="0.2020%" height="15" fill="rgb(241,162,44)"/><text x="87.8258%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="87.5758%" y="853" width="0.2020%" height="15" fill="rgb(224,23,20)"/><text x="87.8258%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="87.5758%" y="837" width="0.2020%" height="15" fill="rgb(250,109,34)"/><text x="87.8258%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="87.5758%" y="821" width="0.2020%" height="15" fill="rgb(214,175,50)"/><text x="87.8258%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="87.5758%" y="805" width="0.2020%" height="15" fill="rgb(213,182,5)"/><text x="87.8258%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="87.5758%" y="789" width="0.2020%" height="15" fill="rgb(209,199,19)"/><text x="87.8258%" y="799.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="87.5758%" y="773" width="0.2020%" height="15" fill="rgb(236,224,42)"/><text x="87.8258%" y="783.50"></text></g><g><title>_int_free (3 samples, 0.30%)</title><rect x="87.8788%" y="901" width="0.3030%" height="15" fill="rgb(246,226,29)"/><text x="88.1288%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.81%)</title><rect x="87.7778%" y="949" width="0.8081%" height="15" fill="rgb(227,223,11)"/><text x="88.0278%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.81%)</title><rect x="87.7778%" y="933" width="0.8081%" height="15" fill="rgb(219,7,51)"/><text x="88.0278%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.71%)</title><rect x="87.8788%" y="917" width="0.7071%" height="15" fill="rgb(245,167,10)"/><text x="88.1288%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="88.1818%" y="901" width="0.4040%" height="15" fill="rgb(237,224,16)"/><text x="88.4318%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="88.3838%" y="885" width="0.2020%" height="15" fill="rgb(226,132,13)"/><text x="88.6338%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="88.3838%" y="869" width="0.2020%" height="15" fill="rgb(214,140,3)"/><text x="88.6338%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="88.3838%" y="853" width="0.2020%" height="15" fill="rgb(221,177,4)"/><text x="88.6338%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="88.3838%" y="837" width="0.2020%" height="15" fill="rgb(238,139,3)"/><text x="88.6338%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="88.3838%" y="821" width="0.2020%" height="15" fill="rgb(216,17,39)"/><text x="88.6338%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="88.4848%" y="805" width="0.1010%" height="15" fill="rgb(238,120,9)"/><text x="88.7348%" y="815.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="88.6869%" y="869" width="0.1010%" height="15" fill="rgb(244,92,53)"/><text x="88.9369%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="88.6869%" y="853" width="0.1010%" height="15" fill="rgb(224,148,33)"/><text x="88.9369%" y="863.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="88.7879%" y="869" width="0.1010%" height="15" fill="rgb(243,6,36)"/><text x="89.0379%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.40%)</title><rect x="88.5859%" y="917" width="0.4040%" height="15" fill="rgb(230,102,11)"/><text x="88.8359%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.30%)</title><rect x="88.6869%" y="901" width="0.3030%" height="15" fill="rgb(234,148,36)"/><text x="88.9369%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.30%)</title><rect x="88.6869%" y="885" width="0.3030%" height="15" fill="rgb(251,153,25)"/><text x="88.9369%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="88.8889%" y="869" width="0.1010%" height="15" fill="rgb(215,129,8)"/><text x="89.1389%" y="879.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="88.9899%" y="853" width="0.1010%" height="15" fill="rgb(224,128,35)"/><text x="89.2399%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 5.15%)</title><rect x="84.0404%" y="1045" width="5.1515%" height="15" fill="rgb(237,56,52)"/><text x="84.2904%" y="1055.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place (51 samples, 5.15%)</title><rect x="84.0404%" y="1029" width="5.1515%" height="15" fill="rgb(234,213,19)"/><text x="84.2904%" y="1039.50">core::..</text></g><g><title>core::ptr::drop_in_place (50 samples, 5.05%)</title><rect x="84.1414%" y="1013" width="5.0505%" height="15" fill="rgb(252,82,23)"/><text x="84.3914%" y="1023.50">core::..</text></g><g><title>core::ptr::drop_in_place (41 samples, 4.14%)</title><rect x="85.0505%" y="997" width="4.1414%" height="15" fill="rgb(254,201,21)"/><text x="85.3005%" y="1007.50">core:..</text></g><g><title>core::ptr::drop_in_place (26 samples, 2.63%)</title><rect x="86.5657%" y="981" width="2.6263%" height="15" fill="rgb(250,186,11)"/><text x="86.8157%" y="991.50">co..</text></g><g><title>core::ptr::drop_in_place (14 samples, 1.41%)</title><rect x="87.7778%" y="965" width="1.4141%" height="15" fill="rgb(211,174,5)"/><text x="88.0278%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.61%)</title><rect x="88.5859%" y="949" width="0.6061%" height="15" fill="rgb(214,121,10)"/><text x="88.8359%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.61%)</title><rect x="88.5859%" y="933" width="0.6061%" height="15" fill="rgb(241,66,2)"/><text x="88.8359%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="88.9899%" y="917" width="0.2020%" height="15" fill="rgb(220,167,19)"/><text x="89.2399%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="88.9899%" y="901" width="0.2020%" height="15" fill="rgb(231,54,50)"/><text x="89.2399%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.20%)</title><rect x="88.9899%" y="885" width="0.2020%" height="15" fill="rgb(239,217,53)"/><text x="89.2399%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="88.9899%" y="869" width="0.2020%" height="15" fill="rgb(248,8,0)"/><text x="89.2399%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="89.0909%" y="853" width="0.1010%" height="15" fill="rgb(229,118,37)"/><text x="89.3409%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (53 samples, 5.35%)</title><rect x="83.9394%" y="1061" width="5.3535%" height="15" fill="rgb(253,223,43)"/><text x="84.1894%" y="1071.50">core::p..</text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="89.1919%" y="1045" width="0.1010%" height="15" fill="rgb(211,77,36)"/><text x="89.4419%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="89.1919%" y="1029" width="0.1010%" height="15" fill="rgb(219,3,53)"/><text x="89.4419%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="89.1919%" y="1013" width="0.1010%" height="15" fill="rgb(244,45,42)"/><text x="89.4419%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="89.1919%" y="997" width="0.1010%" height="15" fill="rgb(225,95,27)"/><text x="89.4419%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="89.1919%" y="981" width="0.1010%" height="15" fill="rgb(207,74,8)"/><text x="89.4419%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="89.2929%" y="1013" width="0.1010%" height="15" fill="rgb(243,63,36)"/><text x="89.5429%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="89.2929%" y="997" width="0.1010%" height="15" fill="rgb(211,180,12)"/><text x="89.5429%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="89.2929%" y="981" width="0.1010%" height="15" fill="rgb(254,166,49)"/><text x="89.5429%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="89.2929%" y="965" width="0.1010%" height="15" fill="rgb(205,19,0)"/><text x="89.5429%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="89.2929%" y="949" width="0.1010%" height="15" fill="rgb(224,172,32)"/><text x="89.5429%" y="959.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="89.2929%" y="933" width="0.1010%" height="15" fill="rgb(254,136,30)"/><text x="89.5429%" y="943.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="89.2929%" y="917" width="0.1010%" height="15" fill="rgb(246,19,35)"/><text x="89.5429%" y="927.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="89.2929%" y="901" width="0.1010%" height="15" fill="rgb(219,24,36)"/><text x="89.5429%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="89.2929%" y="885" width="0.1010%" height="15" fill="rgb(251,55,1)"/><text x="89.5429%" y="895.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (2 samples, 0.20%)</title><rect x="89.2929%" y="1061" width="0.2020%" height="15" fill="rgb(218,117,39)"/><text x="89.5429%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (2 samples, 0.20%)</title><rect x="89.2929%" y="1045" width="0.2020%" height="15" fill="rgb(248,169,11)"/><text x="89.5429%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.20%)</title><rect x="89.2929%" y="1029" width="0.2020%" height="15" fill="rgb(244,40,44)"/><text x="89.5429%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="89.3939%" y="1013" width="0.1010%" height="15" fill="rgb(234,62,37)"/><text x="89.6439%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.10%)</title><rect x="89.3939%" y="997" width="0.1010%" height="15" fill="rgb(207,117,42)"/><text x="89.6439%" y="1007.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (61 samples, 6.16%)</title><rect x="83.4343%" y="1077" width="6.1616%" height="15" fill="rgb(213,43,2)"/><text x="83.6843%" y="1087.50">polar::v..</text></g><g><title>std::env::var (1 samples, 0.10%)</title><rect x="89.4949%" y="1061" width="0.1010%" height="15" fill="rgb(244,202,51)"/><text x="89.7449%" y="1071.50"></text></g><g><title>polar::types::KnowledgeBase::gensym (1 samples, 0.10%)</title><rect x="89.5960%" y="1061" width="0.1010%" height="15" fill="rgb(253,174,46)"/><text x="89.8460%" y="1071.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="89.5960%" y="1045" width="0.1010%" height="15" fill="rgb(251,23,1)"/><text x="89.8460%" y="1055.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="89.5960%" y="1029" width="0.1010%" height="15" fill="rgb(253,26,1)"/><text x="89.8460%" y="1039.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="89.5960%" y="1013" width="0.1010%" height="15" fill="rgb(216,89,31)"/><text x="89.8460%" y="1023.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="89.5960%" y="997" width="0.1010%" height="15" fill="rgb(209,109,5)"/><text x="89.8460%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="89.5960%" y="981" width="0.1010%" height="15" fill="rgb(229,63,13)"/><text x="89.8460%" y="991.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.10%)</title><rect x="89.5960%" y="965" width="0.1010%" height="15" fill="rgb(238,137,54)"/><text x="89.8460%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="89.5960%" y="949" width="0.1010%" height="15" fill="rgb(228,1,9)"/><text x="89.8460%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="89.5960%" y="933" width="0.1010%" height="15" fill="rgb(249,120,48)"/><text x="89.8460%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="89.5960%" y="917" width="0.1010%" height="15" fill="rgb(209,72,36)"/><text x="89.8460%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="89.5960%" y="901" width="0.1010%" height="15" fill="rgb(247,98,49)"/><text x="89.8460%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="89.5960%" y="885" width="0.1010%" height="15" fill="rgb(233,75,36)"/><text x="89.8460%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="89.5960%" y="869" width="0.1010%" height="15" fill="rgb(225,14,24)"/><text x="89.8460%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.10%)</title><rect x="89.5960%" y="853" width="0.1010%" height="15" fill="rgb(237,193,20)"/><text x="89.8460%" y="863.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.10%)</title><rect x="89.5960%" y="837" width="0.1010%" height="15" fill="rgb(239,122,19)"/><text x="89.8460%" y="847.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.10%)</title><rect x="89.5960%" y="821" width="0.1010%" height="15" fill="rgb(231,220,10)"/><text x="89.8460%" y="831.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="89.5960%" y="805" width="0.1010%" height="15" fill="rgb(220,66,15)"/><text x="89.8460%" y="815.50"></text></g><g><title>polar::vm::PolarVirtualMachine::is_more_specific (4 samples, 0.40%)</title><rect x="89.5960%" y="1077" width="0.4040%" height="15" fill="rgb(215,171,52)"/><text x="89.8460%" y="1087.50"></text></g><g><title>polar::vm::PolarVirtualMachine::bind (3 samples, 0.30%)</title><rect x="89.6970%" y="1061" width="0.3030%" height="15" fill="rgb(241,169,50)"/><text x="89.9470%" y="1071.50"></text></g><g><title>std::env::var (3 samples, 0.30%)</title><rect x="89.6970%" y="1045" width="0.3030%" height="15" fill="rgb(236,189,0)"/><text x="89.9470%" y="1055.50"></text></g><g><title>std::env::_var (3 samples, 0.30%)</title><rect x="89.6970%" y="1029" width="0.3030%" height="15" fill="rgb(217,147,20)"/><text x="89.9470%" y="1039.50"></text></g><g><title>std::env::var_os (3 samples, 0.30%)</title><rect x="89.6970%" y="1013" width="0.3030%" height="15" fill="rgb(206,188,39)"/><text x="89.9470%" y="1023.50"></text></g><g><title>std::env::_var_os (3 samples, 0.30%)</title><rect x="89.6970%" y="997" width="0.3030%" height="15" fill="rgb(227,118,25)"/><text x="89.9470%" y="1007.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.30%)</title><rect x="89.6970%" y="981" width="0.3030%" height="15" fill="rgb(248,171,40)"/><text x="89.9470%" y="991.50"></text></g><g><title>__GI_getenv (3 samples, 0.30%)</title><rect x="89.6970%" y="965" width="0.3030%" height="15" fill="rgb(251,90,54)"/><text x="89.9470%" y="975.50"></text></g><g><title>__GI_getenv (2 samples, 0.20%)</title><rect x="90.0000%" y="965" width="0.2020%" height="15" fill="rgb(234,11,46)"/><text x="90.2500%" y="975.50"></text></g><g><title>polar::vm::PolarVirtualMachine::is_subspecializer (3 samples, 0.30%)</title><rect x="90.0000%" y="1077" width="0.3030%" height="15" fill="rgb(229,134,13)"/><text x="90.2500%" y="1087.50"></text></g><g><title>polar::vm::PolarVirtualMachine::bind (3 samples, 0.30%)</title><rect x="90.0000%" y="1061" width="0.3030%" height="15" fill="rgb(223,129,3)"/><text x="90.2500%" y="1071.50"></text></g><g><title>std::env::var (3 samples, 0.30%)</title><rect x="90.0000%" y="1045" width="0.3030%" height="15" fill="rgb(221,124,13)"/><text x="90.2500%" y="1055.50"></text></g><g><title>std::env::_var (3 samples, 0.30%)</title><rect x="90.0000%" y="1029" width="0.3030%" height="15" fill="rgb(234,3,18)"/><text x="90.2500%" y="1039.50"></text></g><g><title>std::env::var_os (3 samples, 0.30%)</title><rect x="90.0000%" y="1013" width="0.3030%" height="15" fill="rgb(249,199,20)"/><text x="90.2500%" y="1023.50"></text></g><g><title>std::env::_var_os (3 samples, 0.30%)</title><rect x="90.0000%" y="997" width="0.3030%" height="15" fill="rgb(224,134,6)"/><text x="90.2500%" y="1007.50"></text></g><g><title>std::sys::unix::os::getenv (3 samples, 0.30%)</title><rect x="90.0000%" y="981" width="0.3030%" height="15" fill="rgb(254,83,26)"/><text x="90.2500%" y="991.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 0.10%)</title><rect x="90.2020%" y="965" width="0.1010%" height="15" fill="rgb(217,88,9)"/><text x="90.4520%" y="975.50"></text></g><g><title>&lt;&amp;str as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.10%)</title><rect x="90.2020%" y="949" width="0.1010%" height="15" fill="rgb(225,73,2)"/><text x="90.4520%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="90.3030%" y="741" width="0.1010%" height="15" fill="rgb(226,44,39)"/><text x="90.5530%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="90.3030%" y="725" width="0.1010%" height="15" fill="rgb(228,53,17)"/><text x="90.5530%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="90.3030%" y="709" width="0.1010%" height="15" fill="rgb(212,27,27)"/><text x="90.5530%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="90.3030%" y="693" width="0.1010%" height="15" fill="rgb(241,50,6)"/><text x="90.5530%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="90.3030%" y="677" width="0.1010%" height="15" fill="rgb(225,28,51)"/><text x="90.5530%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="90.3030%" y="661" width="0.1010%" height="15" fill="rgb(215,33,16)"/><text x="90.5530%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="90.3030%" y="645" width="0.1010%" height="15" fill="rgb(243,40,39)"/><text x="90.5530%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="90.3030%" y="629" width="0.1010%" height="15" fill="rgb(225,11,42)"/><text x="90.5530%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="90.3030%" y="613" width="0.1010%" height="15" fill="rgb(241,220,38)"/><text x="90.5530%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="90.3030%" y="597" width="0.1010%" height="15" fill="rgb(244,52,35)"/><text x="90.5530%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="90.3030%" y="581" width="0.1010%" height="15" fill="rgb(246,42,46)"/><text x="90.5530%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="90.3030%" y="565" width="0.1010%" height="15" fill="rgb(205,184,13)"/><text x="90.5530%" y="575.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="90.3030%" y="549" width="0.1010%" height="15" fill="rgb(209,48,36)"/><text x="90.5530%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="90.3030%" y="533" width="0.1010%" height="15" fill="rgb(244,34,51)"/><text x="90.5530%" y="543.50"></text></g><g><title>&lt;polar::types::Parameter as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="90.3030%" y="517" width="0.1010%" height="15" fill="rgb(221,107,33)"/><text x="90.5530%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="90.3030%" y="501" width="0.1010%" height="15" fill="rgb(224,203,12)"/><text x="90.5530%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="90.4040%" y="645" width="0.1010%" height="15" fill="rgb(230,215,18)"/><text x="90.6540%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="90.4040%" y="629" width="0.1010%" height="15" fill="rgb(206,185,35)"/><text x="90.6540%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="90.4040%" y="613" width="0.1010%" height="15" fill="rgb(228,140,34)"/><text x="90.6540%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="90.4040%" y="597" width="0.1010%" height="15" fill="rgb(208,93,13)"/><text x="90.6540%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="90.4040%" y="581" width="0.1010%" height="15" fill="rgb(221,193,39)"/><text x="90.6540%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="90.4040%" y="565" width="0.1010%" height="15" fill="rgb(241,132,34)"/><text x="90.6540%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="90.4040%" y="549" width="0.1010%" height="15" fill="rgb(221,141,10)"/><text x="90.6540%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="90.4040%" y="533" width="0.1010%" height="15" fill="rgb(226,90,31)"/><text x="90.6540%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="90.4040%" y="517" width="0.1010%" height="15" fill="rgb(243,75,5)"/><text x="90.6540%" y="527.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="90.4040%" y="501" width="0.1010%" height="15" fill="rgb(227,156,21)"/><text x="90.6540%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="90.4040%" y="485" width="0.1010%" height="15" fill="rgb(250,195,8)"/><text x="90.6540%" y="495.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="90.4040%" y="469" width="0.1010%" height="15" fill="rgb(220,134,5)"/><text x="90.6540%" y="479.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="90.4040%" y="453" width="0.1010%" height="15" fill="rgb(246,106,34)"/><text x="90.6540%" y="463.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="90.4040%" y="437" width="0.1010%" height="15" fill="rgb(205,1,4)"/><text x="90.6540%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="90.4040%" y="421" width="0.1010%" height="15" fill="rgb(224,151,29)"/><text x="90.6540%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="90.4040%" y="405" width="0.1010%" height="15" fill="rgb(251,196,0)"/><text x="90.6540%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="90.4040%" y="389" width="0.1010%" height="15" fill="rgb(212,127,0)"/><text x="90.6540%" y="399.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query (3 samples, 0.30%)</title><rect x="90.3030%" y="1077" width="0.3030%" height="15" fill="rgb(236,71,53)"/><text x="90.5530%" y="1087.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query_for_predicate (3 samples, 0.30%)</title><rect x="90.3030%" y="1061" width="0.3030%" height="15" fill="rgb(227,99,0)"/><text x="90.5530%" y="1071.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.30%)</title><rect x="90.3030%" y="1045" width="0.3030%" height="15" fill="rgb(239,89,21)"/><text x="90.5530%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.30%)</title><rect x="90.3030%" y="1029" width="0.3030%" height="15" fill="rgb(243,122,19)"/><text x="90.5530%" y="1039.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::_{{closure}} (3 samples, 0.30%)</title><rect x="90.3030%" y="1013" width="0.3030%" height="15" fill="rgb(229,192,45)"/><text x="90.5530%" y="1023.50"></text></g><g><title>&lt;polar::types::GenericRule as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="90.3030%" y="997" width="0.3030%" height="15" fill="rgb(235,165,35)"/><text x="90.5530%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="90.3030%" y="981" width="0.3030%" height="15" fill="rgb(253,202,0)"/><text x="90.5530%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="90.3030%" y="965" width="0.3030%" height="15" fill="rgb(235,51,20)"/><text x="90.5530%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="90.3030%" y="949" width="0.3030%" height="15" fill="rgb(218,95,46)"/><text x="90.5530%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="90.3030%" y="933" width="0.3030%" height="15" fill="rgb(212,81,10)"/><text x="90.5530%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="90.3030%" y="917" width="0.3030%" height="15" fill="rgb(240,59,0)"/><text x="90.5530%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="90.3030%" y="901" width="0.3030%" height="15" fill="rgb(212,191,42)"/><text x="90.5530%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="90.3030%" y="885" width="0.3030%" height="15" fill="rgb(233,140,3)"/><text x="90.5530%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="90.3030%" y="869" width="0.3030%" height="15" fill="rgb(215,69,23)"/><text x="90.5530%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="90.3030%" y="853" width="0.3030%" height="15" fill="rgb(240,202,20)"/><text x="90.5530%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="90.3030%" y="837" width="0.3030%" height="15" fill="rgb(209,146,50)"/><text x="90.5530%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="90.3030%" y="821" width="0.3030%" height="15" fill="rgb(253,102,54)"/><text x="90.5530%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="90.3030%" y="805" width="0.3030%" height="15" fill="rgb(250,173,47)"/><text x="90.5530%" y="815.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="90.3030%" y="789" width="0.3030%" height="15" fill="rgb(232,142,7)"/><text x="90.5530%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="90.3030%" y="773" width="0.3030%" height="15" fill="rgb(230,157,47)"/><text x="90.5530%" y="783.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="90.3030%" y="757" width="0.3030%" height="15" fill="rgb(214,177,35)"/><text x="90.5530%" y="767.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="90.4040%" y="741" width="0.2020%" height="15" fill="rgb(234,119,46)"/><text x="90.6540%" y="751.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="90.4040%" y="725" width="0.2020%" height="15" fill="rgb(241,180,50)"/><text x="90.6540%" y="735.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="90.4040%" y="709" width="0.2020%" height="15" fill="rgb(221,54,25)"/><text x="90.6540%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="90.4040%" y="693" width="0.2020%" height="15" fill="rgb(209,157,44)"/><text x="90.6540%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="90.4040%" y="677" width="0.2020%" height="15" fill="rgb(246,115,41)"/><text x="90.6540%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="90.4040%" y="661" width="0.2020%" height="15" fill="rgb(229,86,1)"/><text x="90.6540%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="90.5051%" y="645" width="0.1010%" height="15" fill="rgb(240,108,53)"/><text x="90.7551%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="90.5051%" y="629" width="0.1010%" height="15" fill="rgb(227,134,2)"/><text x="90.7551%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="90.5051%" y="613" width="0.1010%" height="15" fill="rgb(213,129,25)"/><text x="90.7551%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="90.5051%" y="597" width="0.1010%" height="15" fill="rgb(226,35,21)"/><text x="90.7551%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="90.5051%" y="581" width="0.1010%" height="15" fill="rgb(208,129,26)"/><text x="90.7551%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="90.5051%" y="565" width="0.1010%" height="15" fill="rgb(224,83,6)"/><text x="90.7551%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="90.5051%" y="549" width="0.1010%" height="15" fill="rgb(227,52,39)"/><text x="90.7551%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="90.5051%" y="533" width="0.1010%" height="15" fill="rgb(241,30,17)"/><text x="90.7551%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="90.6061%" y="613" width="0.2020%" height="15" fill="rgb(246,186,42)"/><text x="90.8561%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="90.6061%" y="597" width="0.2020%" height="15" fill="rgb(221,169,15)"/><text x="90.8561%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.20%)</title><rect x="90.6061%" y="581" width="0.2020%" height="15" fill="rgb(235,108,21)"/><text x="90.8561%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.61%)</title><rect x="90.6061%" y="773" width="0.6061%" height="15" fill="rgb(219,148,30)"/><text x="90.8561%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (6 samples, 0.61%)</title><rect x="90.6061%" y="757" width="0.6061%" height="15" fill="rgb(220,109,5)"/><text x="90.8561%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.61%)</title><rect x="90.6061%" y="741" width="0.6061%" height="15" fill="rgb(213,203,48)"/><text x="90.8561%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.61%)</title><rect x="90.6061%" y="725" width="0.6061%" height="15" fill="rgb(244,71,33)"/><text x="90.8561%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.61%)</title><rect x="90.6061%" y="709" width="0.6061%" height="15" fill="rgb(209,23,2)"/><text x="90.8561%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.61%)</title><rect x="90.6061%" y="693" width="0.6061%" height="15" fill="rgb(219,97,7)"/><text x="90.8561%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.61%)</title><rect x="90.6061%" y="677" width="0.6061%" height="15" fill="rgb(216,161,23)"/><text x="90.8561%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.61%)</title><rect x="90.6061%" y="661" width="0.6061%" height="15" fill="rgb(207,45,42)"/><text x="90.8561%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (6 samples, 0.61%)</title><rect x="90.6061%" y="645" width="0.6061%" height="15" fill="rgb(241,61,4)"/><text x="90.8561%" y="655.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (6 samples, 0.61%)</title><rect x="90.6061%" y="629" width="0.6061%" height="15" fill="rgb(236,170,1)"/><text x="90.8561%" y="639.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.40%)</title><rect x="90.8081%" y="613" width="0.4040%" height="15" fill="rgb(239,72,5)"/><text x="91.0581%" y="623.50"></text></g><g><title>&lt;polar::types::Parameter as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="90.8081%" y="597" width="0.4040%" height="15" fill="rgb(214,13,50)"/><text x="91.0581%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="90.9091%" y="581" width="0.3030%" height="15" fill="rgb(224,88,9)"/><text x="91.1591%" y="591.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="91.1111%" y="565" width="0.1010%" height="15" fill="rgb(238,192,34)"/><text x="91.3611%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.91%)</title><rect x="90.6061%" y="821" width="0.9091%" height="15" fill="rgb(217,203,50)"/><text x="90.8561%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.91%)</title><rect x="90.6061%" y="805" width="0.9091%" height="15" fill="rgb(241,123,32)"/><text x="90.8561%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.91%)</title><rect x="90.6061%" y="789" width="0.9091%" height="15" fill="rgb(248,151,39)"/><text x="90.8561%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="91.2121%" y="773" width="0.3030%" height="15" fill="rgb(208,89,6)"/><text x="91.4621%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.30%)</title><rect x="91.2121%" y="757" width="0.3030%" height="15" fill="rgb(254,43,26)"/><text x="91.4621%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.30%)</title><rect x="91.2121%" y="741" width="0.3030%" height="15" fill="rgb(216,158,13)"/><text x="91.4621%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.30%)</title><rect x="91.2121%" y="725" width="0.3030%" height="15" fill="rgb(212,47,37)"/><text x="91.4621%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.30%)</title><rect x="91.2121%" y="709" width="0.3030%" height="15" fill="rgb(254,16,10)"/><text x="91.4621%" y="719.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="91.2121%" y="693" width="0.3030%" height="15" fill="rgb(223,228,16)"/><text x="91.4621%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="91.2121%" y="677" width="0.3030%" height="15" fill="rgb(249,108,50)"/><text x="91.4621%" y="687.50"></text></g><g><title>_int_malloc (3 samples, 0.30%)</title><rect x="91.2121%" y="661" width="0.3030%" height="15" fill="rgb(208,220,5)"/><text x="91.4621%" y="671.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="91.5152%" y="821" width="0.2020%" height="15" fill="rgb(217,89,48)"/><text x="91.7652%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="91.5152%" y="805" width="0.2020%" height="15" fill="rgb(212,113,41)"/><text x="91.7652%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="91.5152%" y="789" width="0.2020%" height="15" fill="rgb(231,127,5)"/><text x="91.7652%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="91.5152%" y="773" width="0.2020%" height="15" fill="rgb(217,141,17)"/><text x="91.7652%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="91.5152%" y="757" width="0.2020%" height="15" fill="rgb(245,125,54)"/><text x="91.7652%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="91.5152%" y="741" width="0.2020%" height="15" fill="rgb(248,125,3)"/><text x="91.7652%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="91.5152%" y="725" width="0.2020%" height="15" fill="rgb(236,119,51)"/><text x="91.7652%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="91.5152%" y="709" width="0.2020%" height="15" fill="rgb(239,99,8)"/><text x="91.7652%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="91.5152%" y="693" width="0.2020%" height="15" fill="rgb(224,228,4)"/><text x="91.7652%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="91.5152%" y="677" width="0.2020%" height="15" fill="rgb(220,131,45)"/><text x="91.7652%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="91.5152%" y="661" width="0.2020%" height="15" fill="rgb(215,62,5)"/><text x="91.7652%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="91.5152%" y="645" width="0.2020%" height="15" fill="rgb(253,12,24)"/><text x="91.7652%" y="655.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="91.5152%" y="629" width="0.2020%" height="15" fill="rgb(248,120,50)"/><text x="91.7652%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="91.7172%" y="565" width="0.1010%" height="15" fill="rgb(245,194,10)"/><text x="91.9672%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="91.7172%" y="549" width="0.1010%" height="15" fill="rgb(241,149,38)"/><text x="91.9672%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="91.7172%" y="533" width="0.1010%" height="15" fill="rgb(219,215,7)"/><text x="91.9672%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="92.4242%" y="357" width="0.3030%" height="15" fill="rgb(208,120,31)"/><text x="92.6742%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 1.11%)</title><rect x="91.7172%" y="725" width="1.1111%" height="15" fill="rgb(244,30,8)"/><text x="91.9672%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (11 samples, 1.11%)</title><rect x="91.7172%" y="709" width="1.1111%" height="15" fill="rgb(238,35,44)"/><text x="91.9672%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 1.11%)</title><rect x="91.7172%" y="693" width="1.1111%" height="15" fill="rgb(243,218,37)"/><text x="91.9672%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 1.11%)</title><rect x="91.7172%" y="677" width="1.1111%" height="15" fill="rgb(218,169,10)"/><text x="91.9672%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 1.11%)</title><rect x="91.7172%" y="661" width="1.1111%" height="15" fill="rgb(221,144,10)"/><text x="91.9672%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 1.11%)</title><rect x="91.7172%" y="645" width="1.1111%" height="15" fill="rgb(226,41,38)"/><text x="91.9672%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 1.11%)</title><rect x="91.7172%" y="629" width="1.1111%" height="15" fill="rgb(228,3,1)"/><text x="91.9672%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 1.11%)</title><rect x="91.7172%" y="613" width="1.1111%" height="15" fill="rgb(209,129,12)"/><text x="91.9672%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (11 samples, 1.11%)</title><rect x="91.7172%" y="597" width="1.1111%" height="15" fill="rgb(213,136,33)"/><text x="91.9672%" y="607.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (11 samples, 1.11%)</title><rect x="91.7172%" y="581" width="1.1111%" height="15" fill="rgb(209,181,29)"/><text x="91.9672%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 1.01%)</title><rect x="91.8182%" y="565" width="1.0101%" height="15" fill="rgb(234,173,18)"/><text x="92.0682%" y="575.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (10 samples, 1.01%)</title><rect x="91.8182%" y="549" width="1.0101%" height="15" fill="rgb(227,73,47)"/><text x="92.0682%" y="559.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="92.2222%" y="533" width="0.6061%" height="15" fill="rgb(234,9,34)"/><text x="92.4722%" y="543.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="92.2222%" y="517" width="0.6061%" height="15" fill="rgb(235,172,15)"/><text x="92.4722%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="92.2222%" y="501" width="0.6061%" height="15" fill="rgb(245,61,2)"/><text x="92.4722%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.61%)</title><rect x="92.2222%" y="485" width="0.6061%" height="15" fill="rgb(238,39,47)"/><text x="92.4722%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.61%)</title><rect x="92.2222%" y="469" width="0.6061%" height="15" fill="rgb(234,37,24)"/><text x="92.4722%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="92.4242%" y="453" width="0.4040%" height="15" fill="rgb(248,223,24)"/><text x="92.6742%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="92.4242%" y="437" width="0.4040%" height="15" fill="rgb(223,12,15)"/><text x="92.6742%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="92.4242%" y="421" width="0.4040%" height="15" fill="rgb(249,6,3)"/><text x="92.6742%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="92.4242%" y="405" width="0.4040%" height="15" fill="rgb(237,105,33)"/><text x="92.6742%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="92.4242%" y="389" width="0.4040%" height="15" fill="rgb(252,208,35)"/><text x="92.6742%" y="399.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="92.4242%" y="373" width="0.4040%" height="15" fill="rgb(215,181,35)"/><text x="92.6742%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="92.7273%" y="357" width="0.1010%" height="15" fill="rgb(246,212,3)"/><text x="92.9773%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 2.93%)</title><rect x="90.6061%" y="1061" width="2.9293%" height="15" fill="rgb(247,156,24)"/><text x="90.8561%" y="1071.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 2.93%)</title><rect x="90.6061%" y="1045" width="2.9293%" height="15" fill="rgb(248,9,31)"/><text x="90.8561%" y="1055.50">al..</text></g><g><title>alloc::slice::hack::to_vec (29 samples, 2.93%)</title><rect x="90.6061%" y="1029" width="2.9293%" height="15" fill="rgb(234,26,45)"/><text x="90.8561%" y="1039.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (29 samples, 2.93%)</title><rect x="90.6061%" y="1013" width="2.9293%" height="15" fill="rgb(249,11,32)"/><text x="90.8561%" y="1023.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (29 samples, 2.93%)</title><rect x="90.6061%" y="997" width="2.9293%" height="15" fill="rgb(249,162,33)"/><text x="90.8561%" y="1007.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 2.93%)</title><rect x="90.6061%" y="981" width="2.9293%" height="15" fill="rgb(232,4,32)"/><text x="90.8561%" y="991.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (29 samples, 2.93%)</title><rect x="90.6061%" y="965" width="2.9293%" height="15" fill="rgb(212,5,45)"/><text x="90.8561%" y="975.50">co..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.93%)</title><rect x="90.6061%" y="949" width="2.9293%" height="15" fill="rgb(227,95,13)"/><text x="90.8561%" y="959.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.93%)</title><rect x="90.6061%" y="933" width="2.9293%" height="15" fill="rgb(223,205,10)"/><text x="90.8561%" y="943.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (29 samples, 2.93%)</title><rect x="90.6061%" y="917" width="2.9293%" height="15" fill="rgb(222,178,8)"/><text x="90.8561%" y="927.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 2.93%)</title><rect x="90.6061%" y="901" width="2.9293%" height="15" fill="rgb(216,13,22)"/><text x="90.8561%" y="911.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (29 samples, 2.93%)</title><rect x="90.6061%" y="885" width="2.9293%" height="15" fill="rgb(240,167,12)"/><text x="90.8561%" y="895.50">co..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (29 samples, 2.93%)</title><rect x="90.6061%" y="869" width="2.9293%" height="15" fill="rgb(235,68,35)"/><text x="90.8561%" y="879.50">co..</text></g><g><title>core::ops::function::FnMut::call_mut (29 samples, 2.93%)</title><rect x="90.6061%" y="853" width="2.9293%" height="15" fill="rgb(253,40,27)"/><text x="90.8561%" y="863.50">co..</text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (29 samples, 2.93%)</title><rect x="90.6061%" y="837" width="2.9293%" height="15" fill="rgb(214,19,28)"/><text x="90.8561%" y="847.50">&lt;p..</text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (18 samples, 1.82%)</title><rect x="91.7172%" y="821" width="1.8182%" height="15" fill="rgb(210,167,45)"/><text x="91.9672%" y="831.50">&lt;..</text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (18 samples, 1.82%)</title><rect x="91.7172%" y="805" width="1.8182%" height="15" fill="rgb(232,97,40)"/><text x="91.9672%" y="815.50">&lt;..</text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (18 samples, 1.82%)</title><rect x="91.7172%" y="789" width="1.8182%" height="15" fill="rgb(250,35,23)"/><text x="91.9672%" y="799.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 1.82%)</title><rect x="91.7172%" y="773" width="1.8182%" height="15" fill="rgb(248,47,53)"/><text x="91.9672%" y="783.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 1.82%)</title><rect x="91.7172%" y="757" width="1.8182%" height="15" fill="rgb(226,58,50)"/><text x="91.9672%" y="767.50">a..</text></g><g><title>alloc::slice::hack::to_vec (18 samples, 1.82%)</title><rect x="91.7172%" y="741" width="1.8182%" height="15" fill="rgb(217,105,26)"/><text x="91.9672%" y="751.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="92.8283%" y="725" width="0.7071%" height="15" fill="rgb(208,64,1)"/><text x="93.0783%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.71%)</title><rect x="92.8283%" y="709" width="0.7071%" height="15" fill="rgb(214,80,1)"/><text x="93.0783%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.71%)</title><rect x="92.8283%" y="693" width="0.7071%" height="15" fill="rgb(206,175,26)"/><text x="93.0783%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.71%)</title><rect x="92.8283%" y="677" width="0.7071%" height="15" fill="rgb(235,156,37)"/><text x="93.0783%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.71%)</title><rect x="92.8283%" y="661" width="0.7071%" height="15" fill="rgb(213,100,9)"/><text x="93.0783%" y="671.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.71%)</title><rect x="92.8283%" y="645" width="0.7071%" height="15" fill="rgb(241,15,13)"/><text x="93.0783%" y="655.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.71%)</title><rect x="92.8283%" y="629" width="0.7071%" height="15" fill="rgb(205,97,43)"/><text x="93.0783%" y="639.50"></text></g><g><title>_int_malloc (7 samples, 0.71%)</title><rect x="92.8283%" y="613" width="0.7071%" height="15" fill="rgb(216,106,32)"/><text x="93.0783%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="93.7374%" y="549" width="0.1010%" height="15" fill="rgb(226,200,8)"/><text x="93.9874%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="93.7374%" y="533" width="0.1010%" height="15" fill="rgb(244,54,29)"/><text x="93.9874%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="93.7374%" y="517" width="0.1010%" height="15" fill="rgb(252,169,12)"/><text x="93.9874%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="93.7374%" y="501" width="0.1010%" height="15" fill="rgb(231,199,11)"/><text x="93.9874%" y="511.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="1061" width="0.4040%" height="15" fill="rgb(233,191,18)"/><text x="93.7854%" y="1071.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="1045" width="0.4040%" height="15" fill="rgb(215,83,47)"/><text x="93.7854%" y="1055.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="1029" width="0.4040%" height="15" fill="rgb(251,67,19)"/><text x="93.7854%" y="1039.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="1013" width="0.4040%" height="15" fill="rgb(240,7,20)"/><text x="93.7854%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="997" width="0.4040%" height="15" fill="rgb(210,150,26)"/><text x="93.7854%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="93.5354%" y="981" width="0.4040%" height="15" fill="rgb(228,75,42)"/><text x="93.7854%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="93.5354%" y="965" width="0.4040%" height="15" fill="rgb(237,134,48)"/><text x="93.7854%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="93.5354%" y="949" width="0.4040%" height="15" fill="rgb(205,80,50)"/><text x="93.7854%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="93.5354%" y="933" width="0.4040%" height="15" fill="rgb(217,74,48)"/><text x="93.7854%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="93.5354%" y="917" width="0.4040%" height="15" fill="rgb(205,82,50)"/><text x="93.7854%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="93.5354%" y="901" width="0.4040%" height="15" fill="rgb(228,1,33)"/><text x="93.7854%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="93.5354%" y="885" width="0.4040%" height="15" fill="rgb(214,50,23)"/><text x="93.7854%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="93.5354%" y="869" width="0.4040%" height="15" fill="rgb(210,62,9)"/><text x="93.7854%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="93.5354%" y="853" width="0.4040%" height="15" fill="rgb(210,104,37)"/><text x="93.7854%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="93.5354%" y="837" width="0.4040%" height="15" fill="rgb(232,104,43)"/><text x="93.7854%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="93.5354%" y="821" width="0.4040%" height="15" fill="rgb(244,52,6)"/><text x="93.7854%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="93.5354%" y="805" width="0.4040%" height="15" fill="rgb(211,174,52)"/><text x="93.7854%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.40%)</title><rect x="93.5354%" y="789" width="0.4040%" height="15" fill="rgb(229,48,4)"/><text x="93.7854%" y="799.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="773" width="0.4040%" height="15" fill="rgb(205,155,16)"/><text x="93.7854%" y="783.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="757" width="0.4040%" height="15" fill="rgb(211,141,53)"/><text x="93.7854%" y="767.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="741" width="0.4040%" height="15" fill="rgb(240,148,11)"/><text x="93.7854%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="93.5354%" y="725" width="0.4040%" height="15" fill="rgb(214,45,23)"/><text x="93.7854%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.40%)</title><rect x="93.5354%" y="709" width="0.4040%" height="15" fill="rgb(248,74,26)"/><text x="93.7854%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.40%)</title><rect x="93.5354%" y="693" width="0.4040%" height="15" fill="rgb(218,121,16)"/><text x="93.7854%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="93.5354%" y="677" width="0.4040%" height="15" fill="rgb(218,10,47)"/><text x="93.7854%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="93.5354%" y="661" width="0.4040%" height="15" fill="rgb(227,99,14)"/><text x="93.7854%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="93.5354%" y="645" width="0.4040%" height="15" fill="rgb(229,83,46)"/><text x="93.7854%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="93.5354%" y="629" width="0.4040%" height="15" fill="rgb(228,25,1)"/><text x="93.7854%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="93.5354%" y="613" width="0.4040%" height="15" fill="rgb(252,190,15)"/><text x="93.7854%" y="623.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="93.5354%" y="597" width="0.4040%" height="15" fill="rgb(213,103,51)"/><text x="93.7854%" y="607.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.40%)</title><rect x="93.5354%" y="581" width="0.4040%" height="15" fill="rgb(220,38,44)"/><text x="93.7854%" y="591.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="93.5354%" y="565" width="0.4040%" height="15" fill="rgb(210,45,26)"/><text x="93.7854%" y="575.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.10%)</title><rect x="93.8384%" y="549" width="0.1010%" height="15" fill="rgb(205,95,48)"/><text x="94.0884%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="93.9394%" y="869" width="0.1010%" height="15" fill="rgb(225,179,37)"/><text x="94.1894%" y="879.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (2 samples, 0.20%)</title><rect x="93.9394%" y="1045" width="0.2020%" height="15" fill="rgb(230,209,3)"/><text x="94.1894%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (2 samples, 0.20%)</title><rect x="93.9394%" y="1029" width="0.2020%" height="15" fill="rgb(248,12,46)"/><text x="94.1894%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.20%)</title><rect x="93.9394%" y="1013" width="0.2020%" height="15" fill="rgb(234,18,0)"/><text x="94.1894%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.20%)</title><rect x="93.9394%" y="997" width="0.2020%" height="15" fill="rgb(238,197,14)"/><text x="94.1894%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="93.9394%" y="981" width="0.2020%" height="15" fill="rgb(251,162,48)"/><text x="94.1894%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.20%)</title><rect x="93.9394%" y="965" width="0.2020%" height="15" fill="rgb(237,73,42)"/><text x="94.1894%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (2 samples, 0.20%)</title><rect x="93.9394%" y="949" width="0.2020%" height="15" fill="rgb(211,108,8)"/><text x="94.1894%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.20%)</title><rect x="93.9394%" y="933" width="0.2020%" height="15" fill="rgb(213,45,22)"/><text x="94.1894%" y="943.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.20%)</title><rect x="93.9394%" y="917" width="0.2020%" height="15" fill="rgb(252,154,5)"/><text x="94.1894%" y="927.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.20%)</title><rect x="93.9394%" y="901" width="0.2020%" height="15" fill="rgb(221,79,52)"/><text x="94.1894%" y="911.50"></text></g><g><title>_int_realloc (2 samples, 0.20%)</title><rect x="93.9394%" y="885" width="0.2020%" height="15" fill="rgb(229,220,36)"/><text x="94.1894%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="94.0404%" y="869" width="0.1010%" height="15" fill="rgb(211,17,16)"/><text x="94.2904%" y="879.50"></text></g><g><title>alloc::vec::SetLenOnDrop::increment_len (1 samples, 0.10%)</title><rect x="94.1414%" y="789" width="0.1010%" height="15" fill="rgb(222,55,31)"/><text x="94.3914%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="94.1414%" y="821" width="0.2020%" height="15" fill="rgb(221,221,31)"/><text x="94.3914%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (2 samples, 0.20%)</title><rect x="94.1414%" y="805" width="0.2020%" height="15" fill="rgb(227,168,26)"/><text x="94.3914%" y="815.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="94.2424%" y="789" width="0.1010%" height="15" fill="rgb(224,139,9)"/><text x="94.4924%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="94.1414%" y="981" width="0.4040%" height="15" fill="rgb(254,172,0)"/><text x="94.3914%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="94.1414%" y="965" width="0.4040%" height="15" fill="rgb(235,203,1)"/><text x="94.3914%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="94.1414%" y="949" width="0.4040%" height="15" fill="rgb(216,205,24)"/><text x="94.3914%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="94.1414%" y="933" width="0.4040%" height="15" fill="rgb(233,24,6)"/><text x="94.3914%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="94.1414%" y="917" width="0.4040%" height="15" fill="rgb(244,110,9)"/><text x="94.3914%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="94.1414%" y="901" width="0.4040%" height="15" fill="rgb(239,222,42)"/><text x="94.3914%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="94.1414%" y="885" width="0.4040%" height="15" fill="rgb(218,145,13)"/><text x="94.3914%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="94.1414%" y="869" width="0.4040%" height="15" fill="rgb(207,69,11)"/><text x="94.3914%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="94.1414%" y="853" width="0.4040%" height="15" fill="rgb(220,223,22)"/><text x="94.3914%" y="863.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="94.1414%" y="837" width="0.4040%" height="15" fill="rgb(245,102,5)"/><text x="94.3914%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="94.3434%" y="821" width="0.2020%" height="15" fill="rgb(211,148,2)"/><text x="94.5934%" y="831.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="94.4444%" y="805" width="0.1010%" height="15" fill="rgb(241,13,44)"/><text x="94.6944%" y="815.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="94.4444%" y="789" width="0.1010%" height="15" fill="rgb(219,137,21)"/><text x="94.6944%" y="799.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="94.4444%" y="773" width="0.1010%" height="15" fill="rgb(242,206,5)"/><text x="94.6944%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="94.4444%" y="757" width="0.1010%" height="15" fill="rgb(217,114,22)"/><text x="94.6944%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="94.4444%" y="741" width="0.1010%" height="15" fill="rgb(253,206,42)"/><text x="94.6944%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="94.4444%" y="725" width="0.1010%" height="15" fill="rgb(236,102,18)"/><text x="94.6944%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="94.4444%" y="709" width="0.1010%" height="15" fill="rgb(208,59,49)"/><text x="94.6944%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="94.4444%" y="693" width="0.1010%" height="15" fill="rgb(215,194,28)"/><text x="94.6944%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="94.4444%" y="677" width="0.1010%" height="15" fill="rgb(243,207,11)"/><text x="94.6944%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="94.4444%" y="661" width="0.1010%" height="15" fill="rgb(254,179,35)"/><text x="94.6944%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="94.4444%" y="645" width="0.1010%" height="15" fill="rgb(235,97,3)"/><text x="94.6944%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="94.4444%" y="629" width="0.1010%" height="15" fill="rgb(215,155,33)"/><text x="94.6944%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="94.4444%" y="613" width="0.1010%" height="15" fill="rgb(223,128,12)"/><text x="94.6944%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="94.4444%" y="597" width="0.1010%" height="15" fill="rgb(208,157,18)"/><text x="94.6944%" y="607.50"></text></g><g><title>polar::vm::PolarVirtualMachine::choose (11 samples, 1.11%)</title><rect x="93.9394%" y="1061" width="1.1111%" height="15" fill="rgb(249,70,54)"/><text x="94.1894%" y="1071.50"></text></g><g><title>polar::vm::PolarVirtualMachine::push_choice (9 samples, 0.91%)</title><rect x="94.1414%" y="1045" width="0.9091%" height="15" fill="rgb(244,118,24)"/><text x="94.3914%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.91%)</title><rect x="94.1414%" y="1029" width="0.9091%" height="15" fill="rgb(211,54,0)"/><text x="94.3914%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.91%)</title><rect x="94.1414%" y="1013" width="0.9091%" height="15" fill="rgb(245,137,45)"/><text x="94.3914%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.91%)</title><rect x="94.1414%" y="997" width="0.9091%" height="15" fill="rgb(232,154,31)"/><text x="94.3914%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="94.5455%" y="981" width="0.5051%" height="15" fill="rgb(253,6,39)"/><text x="94.7955%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="94.5455%" y="965" width="0.5051%" height="15" fill="rgb(234,183,24)"/><text x="94.7955%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.51%)</title><rect x="94.5455%" y="949" width="0.5051%" height="15" fill="rgb(252,84,40)"/><text x="94.7955%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.51%)</title><rect x="94.5455%" y="933" width="0.5051%" height="15" fill="rgb(224,65,2)"/><text x="94.7955%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.51%)</title><rect x="94.5455%" y="917" width="0.5051%" height="15" fill="rgb(229,38,24)"/><text x="94.7955%" y="927.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.51%)</title><rect x="94.5455%" y="901" width="0.5051%" height="15" fill="rgb(218,131,50)"/><text x="94.7955%" y="911.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.51%)</title><rect x="94.5455%" y="885" width="0.5051%" height="15" fill="rgb(233,106,18)"/><text x="94.7955%" y="895.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="94.6465%" y="869" width="0.4040%" height="15" fill="rgb(220,216,11)"/><text x="94.8965%" y="879.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (116 samples, 11.72%)</title><rect x="83.4343%" y="1557" width="11.7172%" height="15" fill="rgb(251,100,45)"/><text x="83.6843%" y="1567.50">&lt;criterion::routi..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (116 samples, 11.72%)</title><rect x="83.4343%" y="1541" width="11.7172%" height="15" fill="rgb(235,143,32)"/><text x="83.6843%" y="1551.50">core::iter::trait..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (116 samples, 11.72%)</title><rect x="83.4343%" y="1525" width="11.7172%" height="15" fill="rgb(248,124,34)"/><text x="83.6843%" y="1535.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (116 samples, 11.72%)</title><rect x="83.4343%" y="1509" width="11.7172%" height="15" fill="rgb(225,221,4)"/><text x="83.6843%" y="1519.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (116 samples, 11.72%)</title><rect x="83.4343%" y="1493" width="11.7172%" height="15" fill="rgb(242,27,43)"/><text x="83.6843%" y="1503.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (116 samples, 11.72%)</title><rect x="83.4343%" y="1477" width="11.7172%" height="15" fill="rgb(227,54,8)"/><text x="83.6843%" y="1487.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (116 samples, 11.72%)</title><rect x="83.4343%" y="1461" width="11.7172%" height="15" fill="rgb(253,139,49)"/><text x="83.6843%" y="1471.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (116 samples, 11.72%)</title><rect x="83.4343%" y="1445" width="11.7172%" height="15" fill="rgb(231,26,43)"/><text x="83.6843%" y="1455.50">core::iter::trait..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (116 samples, 11.72%)</title><rect x="83.4343%" y="1429" width="11.7172%" height="15" fill="rgb(207,121,39)"/><text x="83.6843%" y="1439.50">core::iter::trait..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1413" width="11.7172%" height="15" fill="rgb(223,101,35)"/><text x="83.6843%" y="1423.50">core::iter::trait..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1397" width="11.7172%" height="15" fill="rgb(232,87,23)"/><text x="83.6843%" y="1407.50">core::iter::adapt..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1381" width="11.7172%" height="15" fill="rgb(225,180,29)"/><text x="83.6843%" y="1391.50">&lt;criterion::routi..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1365" width="11.7172%" height="15" fill="rgb(225,25,17)"/><text x="83.6843%" y="1375.50">criterion::benchm..</text></g><g><title>bench::too_many_predicates::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1349" width="11.7172%" height="15" fill="rgb(223,8,52)"/><text x="83.6843%" y="1359.50">bench::too_many_p..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (116 samples, 11.72%)</title><rect x="83.4343%" y="1333" width="11.7172%" height="15" fill="rgb(246,42,21)"/><text x="83.6843%" y="1343.50">criterion::Benche..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (116 samples, 11.72%)</title><rect x="83.4343%" y="1317" width="11.7172%" height="15" fill="rgb(205,64,43)"/><text x="83.6843%" y="1327.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (116 samples, 11.72%)</title><rect x="83.4343%" y="1301" width="11.7172%" height="15" fill="rgb(221,160,13)"/><text x="83.6843%" y="1311.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (116 samples, 11.72%)</title><rect x="83.4343%" y="1285" width="11.7172%" height="15" fill="rgb(239,58,35)"/><text x="83.6843%" y="1295.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (116 samples, 11.72%)</title><rect x="83.4343%" y="1269" width="11.7172%" height="15" fill="rgb(251,26,40)"/><text x="83.6843%" y="1279.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (116 samples, 11.72%)</title><rect x="83.4343%" y="1253" width="11.7172%" height="15" fill="rgb(247,0,4)"/><text x="83.6843%" y="1263.50">core::iter::trait..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (116 samples, 11.72%)</title><rect x="83.4343%" y="1237" width="11.7172%" height="15" fill="rgb(218,130,10)"/><text x="83.6843%" y="1247.50">core::iter::trait..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1221" width="11.7172%" height="15" fill="rgb(239,32,7)"/><text x="83.6843%" y="1231.50">core::iter::trait..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1205" width="11.7172%" height="15" fill="rgb(210,192,24)"/><text x="83.6843%" y="1215.50">core::iter::adapt..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (116 samples, 11.72%)</title><rect x="83.4343%" y="1189" width="11.7172%" height="15" fill="rgb(226,212,17)"/><text x="83.6843%" y="1199.50">core::ops::functi..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (116 samples, 11.72%)</title><rect x="83.4343%" y="1173" width="11.7172%" height="15" fill="rgb(219,201,28)"/><text x="83.6843%" y="1183.50">bench::simple_que..</text></g><g><title>bench::Runner::run (116 samples, 11.72%)</title><rect x="83.4343%" y="1157" width="11.7172%" height="15" fill="rgb(235,207,41)"/><text x="83.6843%" y="1167.50">bench::Runner::run</text></g><g><title>bench::Runner::next (116 samples, 11.72%)</title><rect x="83.4343%" y="1141" width="11.7172%" height="15" fill="rgb(241,95,54)"/><text x="83.6843%" y="1151.50">bench::Runner::ne..</text></g><g><title>polar::polar::Polar::query (116 samples, 11.72%)</title><rect x="83.4343%" y="1125" width="11.7172%" height="15" fill="rgb(248,12,23)"/><text x="83.6843%" y="1135.50">polar::polar::Pol..</text></g><g><title>polar::vm::PolarVirtualMachine::run (116 samples, 11.72%)</title><rect x="83.4343%" y="1109" width="11.7172%" height="15" fill="rgb(228,173,4)"/><text x="83.6843%" y="1119.50">polar::vm::PolarV..</text></g><g><title>polar::vm::PolarVirtualMachine::next (116 samples, 11.72%)</title><rect x="83.4343%" y="1093" width="11.7172%" height="15" fill="rgb(254,99,5)"/><text x="83.6843%" y="1103.50">polar::vm::PolarV..</text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (45 samples, 4.55%)</title><rect x="90.6061%" y="1077" width="4.5455%" height="15" fill="rgb(212,184,17)"/><text x="90.8561%" y="1087.50">polar..</text></g><g><title>polar::vm::PolarVirtualMachine::rename_vars (1 samples, 0.10%)</title><rect x="95.0505%" y="1061" width="0.1010%" height="15" fill="rgb(252,174,1)"/><text x="95.3005%" y="1071.50"></text></g><g><title>polar::types::Rule::map (1 samples, 0.10%)</title><rect x="95.0505%" y="1045" width="0.1010%" height="15" fill="rgb(241,118,51)"/><text x="95.3005%" y="1055.50"></text></g><g><title>polar::types::Term::map (1 samples, 0.10%)</title><rect x="95.0505%" y="1029" width="0.1010%" height="15" fill="rgb(227,94,47)"/><text x="95.3005%" y="1039.50"></text></g><g><title>polar::types::Value::map (1 samples, 0.10%)</title><rect x="95.0505%" y="1013" width="0.1010%" height="15" fill="rgb(229,104,2)"/><text x="95.3005%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.0505%" y="997" width="0.1010%" height="15" fill="rgb(219,28,31)"/><text x="95.3005%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.0505%" y="981" width="0.1010%" height="15" fill="rgb(233,109,36)"/><text x="95.3005%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.0505%" y="965" width="0.1010%" height="15" fill="rgb(246,88,11)"/><text x="95.3005%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="95.0505%" y="949" width="0.1010%" height="15" fill="rgb(209,212,17)"/><text x="95.3005%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.0505%" y="933" width="0.1010%" height="15" fill="rgb(243,59,29)"/><text x="95.3005%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.0505%" y="917" width="0.1010%" height="15" fill="rgb(244,205,48)"/><text x="95.3005%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.0505%" y="901" width="0.1010%" height="15" fill="rgb(227,30,6)"/><text x="95.3005%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="95.1515%" y="1237" width="0.2020%" height="15" fill="rgb(220,205,48)"/><text x="95.4015%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="95.1515%" y="1221" width="0.2020%" height="15" fill="rgb(250,94,14)"/><text x="95.4015%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="95.1515%" y="1205" width="0.2020%" height="15" fill="rgb(216,119,42)"/><text x="95.4015%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="95.1515%" y="1189" width="0.2020%" height="15" fill="rgb(232,155,0)"/><text x="95.4015%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="95.1515%" y="1173" width="0.2020%" height="15" fill="rgb(212,24,32)"/><text x="95.4015%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="95.1515%" y="1157" width="0.2020%" height="15" fill="rgb(216,69,20)"/><text x="95.4015%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="95.1515%" y="1141" width="0.2020%" height="15" fill="rgb(229,73,31)"/><text x="95.4015%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="95.1515%" y="1125" width="0.2020%" height="15" fill="rgb(224,219,20)"/><text x="95.4015%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="95.1515%" y="1109" width="0.2020%" height="15" fill="rgb(215,146,41)"/><text x="95.4015%" y="1119.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="95.1515%" y="1093" width="0.2020%" height="15" fill="rgb(244,71,31)"/><text x="95.4015%" y="1103.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="95.1515%" y="1077" width="0.2020%" height="15" fill="rgb(224,24,11)"/><text x="95.4015%" y="1087.50"></text></g><g><title>malloc_consolidate (2 samples, 0.20%)</title><rect x="95.1515%" y="1061" width="0.2020%" height="15" fill="rgb(229,76,15)"/><text x="95.4015%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="95.4545%" y="1093" width="0.2020%" height="15" fill="rgb(209,93,2)"/><text x="95.7045%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="95.4545%" y="1077" width="0.2020%" height="15" fill="rgb(216,200,50)"/><text x="95.7045%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="95.4545%" y="1061" width="0.2020%" height="15" fill="rgb(211,67,34)"/><text x="95.7045%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="95.4545%" y="1045" width="0.2020%" height="15" fill="rgb(225,87,47)"/><text x="95.7045%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.5556%" y="1029" width="0.1010%" height="15" fill="rgb(217,185,16)"/><text x="95.8056%" y="1039.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="95.6566%" y="1029" width="0.1010%" height="15" fill="rgb(205,0,0)"/><text x="95.9066%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="95.8586%" y="981" width="0.1010%" height="15" fill="rgb(207,116,45)"/><text x="96.1086%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.8586%" y="965" width="0.1010%" height="15" fill="rgb(221,156,26)"/><text x="96.1086%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.8586%" y="949" width="0.1010%" height="15" fill="rgb(213,140,4)"/><text x="96.1086%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.8586%" y="933" width="0.1010%" height="15" fill="rgb(231,224,15)"/><text x="96.1086%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.61%)</title><rect x="95.4545%" y="1157" width="0.6061%" height="15" fill="rgb(244,76,20)"/><text x="95.7045%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.61%)</title><rect x="95.4545%" y="1141" width="0.6061%" height="15" fill="rgb(238,117,7)"/><text x="95.7045%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.61%)</title><rect x="95.4545%" y="1125" width="0.6061%" height="15" fill="rgb(235,1,10)"/><text x="95.7045%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.61%)</title><rect x="95.4545%" y="1109" width="0.6061%" height="15" fill="rgb(216,165,6)"/><text x="95.7045%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="95.6566%" y="1093" width="0.4040%" height="15" fill="rgb(246,91,35)"/><text x="95.9066%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.40%)</title><rect x="95.6566%" y="1077" width="0.4040%" height="15" fill="rgb(228,96,24)"/><text x="95.9066%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="95.6566%" y="1061" width="0.4040%" height="15" fill="rgb(254,217,53)"/><text x="95.9066%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="95.6566%" y="1045" width="0.4040%" height="15" fill="rgb(209,60,0)"/><text x="95.9066%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="95.7576%" y="1029" width="0.3030%" height="15" fill="rgb(250,93,26)"/><text x="96.0076%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="95.8586%" y="1013" width="0.2020%" height="15" fill="rgb(211,9,40)"/><text x="96.1086%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="95.8586%" y="997" width="0.2020%" height="15" fill="rgb(242,57,20)"/><text x="96.1086%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.9596%" y="981" width="0.1010%" height="15" fill="rgb(248,85,48)"/><text x="96.2096%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.9596%" y="965" width="0.1010%" height="15" fill="rgb(212,117,2)"/><text x="96.2096%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="95.9596%" y="949" width="0.1010%" height="15" fill="rgb(243,19,3)"/><text x="96.2096%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="95.9596%" y="933" width="0.1010%" height="15" fill="rgb(232,217,24)"/><text x="96.2096%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="95.9596%" y="917" width="0.1010%" height="15" fill="rgb(224,175,40)"/><text x="96.2096%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="95.9596%" y="901" width="0.1010%" height="15" fill="rgb(212,162,32)"/><text x="96.2096%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="95.9596%" y="885" width="0.1010%" height="15" fill="rgb(215,9,4)"/><text x="96.2096%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="96.0606%" y="1141" width="0.2020%" height="15" fill="rgb(242,42,7)"/><text x="96.3106%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="96.0606%" y="1125" width="0.2020%" height="15" fill="rgb(242,184,45)"/><text x="96.3106%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="96.0606%" y="1109" width="0.2020%" height="15" fill="rgb(228,111,51)"/><text x="96.3106%" y="1119.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="96.0606%" y="1093" width="0.2020%" height="15" fill="rgb(236,147,17)"/><text x="96.3106%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="96.2626%" y="1125" width="0.1010%" height="15" fill="rgb(210,75,22)"/><text x="96.5126%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="96.2626%" y="1109" width="0.1010%" height="15" fill="rgb(217,159,45)"/><text x="96.5126%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.11%)</title><rect x="95.3535%" y="1221" width="1.1111%" height="15" fill="rgb(245,165,53)"/><text x="95.6035%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.11%)</title><rect x="95.3535%" y="1205" width="1.1111%" height="15" fill="rgb(251,190,50)"/><text x="95.6035%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.11%)</title><rect x="95.3535%" y="1189" width="1.1111%" height="15" fill="rgb(208,203,29)"/><text x="95.6035%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.11%)</title><rect x="95.3535%" y="1173" width="1.1111%" height="15" fill="rgb(207,209,35)"/><text x="95.6035%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="96.0606%" y="1157" width="0.4040%" height="15" fill="rgb(230,144,49)"/><text x="96.3106%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="96.2626%" y="1141" width="0.2020%" height="15" fill="rgb(229,31,6)"/><text x="96.5126%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="96.3636%" y="1125" width="0.1010%" height="15" fill="rgb(251,129,24)"/><text x="96.6136%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="96.3636%" y="1109" width="0.1010%" height="15" fill="rgb(235,105,15)"/><text x="96.6136%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="96.3636%" y="1093" width="0.1010%" height="15" fill="rgb(216,52,43)"/><text x="96.6136%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="96.3636%" y="1077" width="0.1010%" height="15" fill="rgb(238,144,41)"/><text x="96.6136%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="96.3636%" y="1061" width="0.1010%" height="15" fill="rgb(243,63,9)"/><text x="96.6136%" y="1071.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="96.3636%" y="1045" width="0.1010%" height="15" fill="rgb(246,208,1)"/><text x="96.6136%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 1.21%)</title><rect x="95.3535%" y="1237" width="1.2121%" height="15" fill="rgb(233,182,18)"/><text x="95.6035%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="96.4646%" y="1221" width="0.1010%" height="15" fill="rgb(242,224,8)"/><text x="96.7146%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="96.4646%" y="1205" width="0.1010%" height="15" fill="rgb(243,54,37)"/><text x="96.7146%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (1 samples, 0.10%)</title><rect x="96.4646%" y="1189" width="0.1010%" height="15" fill="rgb(233,192,12)"/><text x="96.7146%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="96.4646%" y="1173" width="0.1010%" height="15" fill="rgb(251,192,53)"/><text x="96.7146%" y="1183.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="96.4646%" y="1157" width="0.1010%" height="15" fill="rgb(246,141,26)"/><text x="96.7146%" y="1167.50"></text></g><g><title>polar::vm::PolarVirtualMachine::backtrack (15 samples, 1.52%)</title><rect x="95.1515%" y="1253" width="1.5152%" height="15" fill="rgb(239,195,19)"/><text x="95.4015%" y="1263.50"></text></g><g><title>polar::vm::PolarVirtualMachine::append_goals (1 samples, 0.10%)</title><rect x="96.5657%" y="1237" width="0.1010%" height="15" fill="rgb(241,16,39)"/><text x="96.8157%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (1 samples, 0.10%)</title><rect x="96.5657%" y="1221" width="0.1010%" height="15" fill="rgb(223,13,53)"/><text x="96.8157%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.10%)</title><rect x="96.5657%" y="1205" width="0.1010%" height="15" fill="rgb(214,227,0)"/><text x="96.8157%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="96.5657%" y="1189" width="0.1010%" height="15" fill="rgb(228,103,26)"/><text x="96.8157%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="96.5657%" y="1173" width="0.1010%" height="15" fill="rgb(254,177,53)"/><text x="96.8157%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.10%)</title><rect x="96.5657%" y="1157" width="0.1010%" height="15" fill="rgb(208,201,34)"/><text x="96.8157%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow (1 samples, 0.10%)</title><rect x="96.5657%" y="1141" width="0.1010%" height="15" fill="rgb(212,39,5)"/><text x="96.8157%" y="1151.50"></text></g><g><title>core::cmp::max (1 samples, 0.10%)</title><rect x="96.5657%" y="1125" width="0.1010%" height="15" fill="rgb(246,117,3)"/><text x="96.8157%" y="1135.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.10%)</title><rect x="96.5657%" y="1109" width="0.1010%" height="15" fill="rgb(244,118,39)"/><text x="96.8157%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.10%)</title><rect x="96.5657%" y="1093" width="0.1010%" height="15" fill="rgb(241,64,10)"/><text x="96.8157%" y="1103.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query (1 samples, 0.10%)</title><rect x="96.6667%" y="1253" width="0.1010%" height="15" fill="rgb(229,39,44)"/><text x="96.9167%" y="1263.50"></text></g><g><title>polar::vm::PolarVirtualMachine::query_for_predicate (1 samples, 0.10%)</title><rect x="96.6667%" y="1237" width="0.1010%" height="15" fill="rgb(230,226,3)"/><text x="96.9167%" y="1247.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.10%)</title><rect x="96.6667%" y="1221" width="0.1010%" height="15" fill="rgb(222,13,42)"/><text x="96.9167%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="96.6667%" y="1205" width="0.1010%" height="15" fill="rgb(247,180,54)"/><text x="96.9167%" y="1215.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::_{{closure}} (1 samples, 0.10%)</title><rect x="96.6667%" y="1189" width="0.1010%" height="15" fill="rgb(205,96,16)"/><text x="96.9167%" y="1199.50"></text></g><g><title>&lt;polar::types::GenericRule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="96.6667%" y="1173" width="0.1010%" height="15" fill="rgb(205,100,21)"/><text x="96.9167%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="96.6667%" y="1157" width="0.1010%" height="15" fill="rgb(248,51,4)"/><text x="96.9167%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="96.6667%" y="1141" width="0.1010%" height="15" fill="rgb(217,197,30)"/><text x="96.9167%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="96.6667%" y="1125" width="0.1010%" height="15" fill="rgb(240,179,40)"/><text x="96.9167%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="96.6667%" y="1109" width="0.1010%" height="15" fill="rgb(212,185,35)"/><text x="96.9167%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="96.6667%" y="1093" width="0.1010%" height="15" fill="rgb(251,222,31)"/><text x="96.9167%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="96.6667%" y="1077" width="0.1010%" height="15" fill="rgb(208,140,36)"/><text x="96.9167%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="96.6667%" y="1061" width="0.1010%" height="15" fill="rgb(220,148,1)"/><text x="96.9167%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="96.6667%" y="1045" width="0.1010%" height="15" fill="rgb(254,4,28)"/><text x="96.9167%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="96.6667%" y="1029" width="0.1010%" height="15" fill="rgb(222,185,44)"/><text x="96.9167%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="96.6667%" y="1013" width="0.1010%" height="15" fill="rgb(215,74,39)"/><text x="96.9167%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="96.6667%" y="997" width="0.1010%" height="15" fill="rgb(247,86,4)"/><text x="96.9167%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="96.6667%" y="981" width="0.1010%" height="15" fill="rgb(231,105,32)"/><text x="96.9167%" y="991.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="96.6667%" y="965" width="0.1010%" height="15" fill="rgb(222,65,35)"/><text x="96.9167%" y="975.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="96.6667%" y="949" width="0.1010%" height="15" fill="rgb(218,145,35)"/><text x="96.9167%" y="959.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="96.6667%" y="933" width="0.1010%" height="15" fill="rgb(208,7,15)"/><text x="96.9167%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="96.6667%" y="917" width="0.1010%" height="15" fill="rgb(209,83,13)"/><text x="96.9167%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="96.6667%" y="901" width="0.1010%" height="15" fill="rgb(218,3,10)"/><text x="96.9167%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="96.6667%" y="885" width="0.1010%" height="15" fill="rgb(211,219,4)"/><text x="96.9167%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="96.6667%" y="869" width="0.1010%" height="15" fill="rgb(228,194,12)"/><text x="96.9167%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="96.6667%" y="853" width="0.1010%" height="15" fill="rgb(210,175,7)"/><text x="96.9167%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="96.6667%" y="837" width="0.1010%" height="15" fill="rgb(243,132,6)"/><text x="96.9167%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="96.6667%" y="821" width="0.1010%" height="15" fill="rgb(207,72,18)"/><text x="96.9167%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="96.6667%" y="805" width="0.1010%" height="15" fill="rgb(236,1,18)"/><text x="96.9167%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="96.6667%" y="789" width="0.1010%" height="15" fill="rgb(227,0,18)"/><text x="96.9167%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="96.6667%" y="773" width="0.1010%" height="15" fill="rgb(247,37,5)"/><text x="96.9167%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="96.6667%" y="757" width="0.1010%" height="15" fill="rgb(237,179,24)"/><text x="96.9167%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="96.6667%" y="741" width="0.1010%" height="15" fill="rgb(226,53,20)"/><text x="96.9167%" y="751.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="96.6667%" y="725" width="0.1010%" height="15" fill="rgb(247,75,7)"/><text x="96.9167%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="96.6667%" y="709" width="0.1010%" height="15" fill="rgb(233,96,12)"/><text x="96.9167%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="96.6667%" y="693" width="0.1010%" height="15" fill="rgb(224,125,0)"/><text x="96.9167%" y="703.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="96.6667%" y="677" width="0.1010%" height="15" fill="rgb(224,92,25)"/><text x="96.9167%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="96.7677%" y="949" width="0.2020%" height="15" fill="rgb(224,42,24)"/><text x="97.0177%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="96.7677%" y="933" width="0.2020%" height="15" fill="rgb(234,132,49)"/><text x="97.0177%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="96.7677%" y="917" width="0.2020%" height="15" fill="rgb(248,100,35)"/><text x="97.0177%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="96.7677%" y="901" width="0.2020%" height="15" fill="rgb(239,94,40)"/><text x="97.0177%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="96.7677%" y="885" width="0.2020%" height="15" fill="rgb(235,139,28)"/><text x="97.0177%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="96.7677%" y="869" width="0.2020%" height="15" fill="rgb(217,144,7)"/><text x="97.0177%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="96.7677%" y="853" width="0.2020%" height="15" fill="rgb(227,55,4)"/><text x="97.0177%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="96.8687%" y="837" width="0.1010%" height="15" fill="rgb(252,82,54)"/><text x="97.1187%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="96.8687%" y="821" width="0.1010%" height="15" fill="rgb(245,172,4)"/><text x="97.1187%" y="831.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="96.8687%" y="805" width="0.1010%" height="15" fill="rgb(207,26,27)"/><text x="97.1187%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.10%)</title><rect x="96.8687%" y="789" width="0.1010%" height="15" fill="rgb(252,98,18)"/><text x="97.1187%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (1 samples, 0.10%)</title><rect x="96.8687%" y="773" width="0.1010%" height="15" fill="rgb(244,8,26)"/><text x="97.1187%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="96.8687%" y="757" width="0.1010%" height="15" fill="rgb(237,173,45)"/><text x="97.1187%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="96.7677%" y="997" width="0.6061%" height="15" fill="rgb(208,213,49)"/><text x="97.0177%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.61%)</title><rect x="96.7677%" y="981" width="0.6061%" height="15" fill="rgb(212,122,37)"/><text x="97.0177%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.61%)</title><rect x="96.7677%" y="965" width="0.6061%" height="15" fill="rgb(213,80,17)"/><text x="97.0177%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="96.9697%" y="949" width="0.4040%" height="15" fill="rgb(206,210,43)"/><text x="97.2197%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.40%)</title><rect x="96.9697%" y="933" width="0.4040%" height="15" fill="rgb(229,214,3)"/><text x="97.2197%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.40%)</title><rect x="96.9697%" y="917" width="0.4040%" height="15" fill="rgb(235,213,29)"/><text x="97.2197%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.40%)</title><rect x="96.9697%" y="901" width="0.4040%" height="15" fill="rgb(248,135,26)"/><text x="97.2197%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.40%)</title><rect x="96.9697%" y="885" width="0.4040%" height="15" fill="rgb(242,188,12)"/><text x="97.2197%" y="895.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.40%)</title><rect x="96.9697%" y="869" width="0.4040%" height="15" fill="rgb(245,38,12)"/><text x="97.2197%" y="879.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.40%)</title><rect x="96.9697%" y="853" width="0.4040%" height="15" fill="rgb(218,42,13)"/><text x="97.2197%" y="863.50"></text></g><g><title>_int_malloc (4 samples, 0.40%)</title><rect x="96.9697%" y="837" width="0.4040%" height="15" fill="rgb(238,132,49)"/><text x="97.2197%" y="847.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="97.3737%" y="709" width="0.1010%" height="15" fill="rgb(209,196,19)"/><text x="97.6237%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="97.3737%" y="901" width="0.2020%" height="15" fill="rgb(244,131,22)"/><text x="97.6237%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="97.3737%" y="885" width="0.2020%" height="15" fill="rgb(223,18,34)"/><text x="97.6237%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.20%)</title><rect x="97.3737%" y="869" width="0.2020%" height="15" fill="rgb(252,124,54)"/><text x="97.6237%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="97.3737%" y="853" width="0.2020%" height="15" fill="rgb(229,106,42)"/><text x="97.6237%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="97.3737%" y="837" width="0.2020%" height="15" fill="rgb(221,129,1)"/><text x="97.6237%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="97.3737%" y="821" width="0.2020%" height="15" fill="rgb(229,74,15)"/><text x="97.6237%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="97.3737%" y="805" width="0.2020%" height="15" fill="rgb(210,206,50)"/><text x="97.6237%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.20%)</title><rect x="97.3737%" y="789" width="0.2020%" height="15" fill="rgb(251,114,31)"/><text x="97.6237%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.20%)</title><rect x="97.3737%" y="773" width="0.2020%" height="15" fill="rgb(215,225,28)"/><text x="97.6237%" y="783.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.20%)</title><rect x="97.3737%" y="757" width="0.2020%" height="15" fill="rgb(237,109,14)"/><text x="97.6237%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.20%)</title><rect x="97.3737%" y="741" width="0.2020%" height="15" fill="rgb(230,13,37)"/><text x="97.6237%" y="751.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="97.3737%" y="725" width="0.2020%" height="15" fill="rgb(231,40,28)"/><text x="97.6237%" y="735.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="97.4747%" y="709" width="0.1010%" height="15" fill="rgb(231,202,18)"/><text x="97.7247%" y="719.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="97.4747%" y="693" width="0.1010%" height="15" fill="rgb(225,33,18)"/><text x="97.7247%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="97.4747%" y="677" width="0.1010%" height="15" fill="rgb(223,64,47)"/><text x="97.7247%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="97.4747%" y="661" width="0.1010%" height="15" fill="rgb(234,114,13)"/><text x="97.7247%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="97.4747%" y="645" width="0.1010%" height="15" fill="rgb(248,56,40)"/><text x="97.7247%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="97.4747%" y="629" width="0.1010%" height="15" fill="rgb(221,194,21)"/><text x="97.7247%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="97.4747%" y="613" width="0.1010%" height="15" fill="rgb(242,108,46)"/><text x="97.7247%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="97.4747%" y="597" width="0.1010%" height="15" fill="rgb(220,106,10)"/><text x="97.7247%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="97.4747%" y="581" width="0.1010%" height="15" fill="rgb(211,88,4)"/><text x="97.7247%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="97.4747%" y="565" width="0.1010%" height="15" fill="rgb(214,95,34)"/><text x="97.7247%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="97.4747%" y="549" width="0.1010%" height="15" fill="rgb(250,160,33)"/><text x="97.7247%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="97.4747%" y="533" width="0.1010%" height="15" fill="rgb(225,29,10)"/><text x="97.7247%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 1.31%)</title><rect x="96.7677%" y="1237" width="1.3131%" height="15" fill="rgb(224,28,30)"/><text x="97.0177%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 1.31%)</title><rect x="96.7677%" y="1221" width="1.3131%" height="15" fill="rgb(231,77,4)"/><text x="97.0177%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.31%)</title><rect x="96.7677%" y="1205" width="1.3131%" height="15" fill="rgb(209,63,21)"/><text x="97.0177%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (13 samples, 1.31%)</title><rect x="96.7677%" y="1189" width="1.3131%" height="15" fill="rgb(226,22,11)"/><text x="97.0177%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (13 samples, 1.31%)</title><rect x="96.7677%" y="1173" width="1.3131%" height="15" fill="rgb(216,82,30)"/><text x="97.0177%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 1.31%)</title><rect x="96.7677%" y="1157" width="1.3131%" height="15" fill="rgb(246,227,38)"/><text x="97.0177%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 1.31%)</title><rect x="96.7677%" y="1141" width="1.3131%" height="15" fill="rgb(251,203,53)"/><text x="97.0177%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.31%)</title><rect x="96.7677%" y="1125" width="1.3131%" height="15" fill="rgb(254,101,1)"/><text x="97.0177%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.31%)</title><rect x="96.7677%" y="1109" width="1.3131%" height="15" fill="rgb(241,180,5)"/><text x="97.0177%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 1.31%)</title><rect x="96.7677%" y="1093" width="1.3131%" height="15" fill="rgb(218,168,4)"/><text x="97.0177%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 1.31%)</title><rect x="96.7677%" y="1077" width="1.3131%" height="15" fill="rgb(224,223,32)"/><text x="97.0177%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (13 samples, 1.31%)</title><rect x="96.7677%" y="1061" width="1.3131%" height="15" fill="rgb(236,106,22)"/><text x="97.0177%" y="1071.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (13 samples, 1.31%)</title><rect x="96.7677%" y="1045" width="1.3131%" height="15" fill="rgb(206,121,5)"/><text x="97.0177%" y="1055.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 1.31%)</title><rect x="96.7677%" y="1029" width="1.3131%" height="15" fill="rgb(233,87,28)"/><text x="97.0177%" y="1039.50"></text></g><g><title>&lt;polar::types::Rule as core::clone::Clone&gt;::clone (13 samples, 1.31%)</title><rect x="96.7677%" y="1013" width="1.3131%" height="15" fill="rgb(236,137,17)"/><text x="97.0177%" y="1023.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="97.3737%" y="997" width="0.7071%" height="15" fill="rgb(209,183,38)"/><text x="97.6237%" y="1007.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="97.3737%" y="981" width="0.7071%" height="15" fill="rgb(206,162,44)"/><text x="97.6237%" y="991.50"></text></g><g><title>&lt;polar::types::Operation as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="97.3737%" y="965" width="0.7071%" height="15" fill="rgb(237,70,39)"/><text x="97.6237%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.71%)</title><rect x="97.3737%" y="949" width="0.7071%" height="15" fill="rgb(212,176,5)"/><text x="97.6237%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.71%)</title><rect x="97.3737%" y="933" width="0.7071%" height="15" fill="rgb(232,95,16)"/><text x="97.6237%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.71%)</title><rect x="97.3737%" y="917" width="0.7071%" height="15" fill="rgb(219,115,35)"/><text x="97.6237%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="97.5758%" y="901" width="0.5051%" height="15" fill="rgb(251,67,27)"/><text x="97.8258%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.51%)</title><rect x="97.5758%" y="885" width="0.5051%" height="15" fill="rgb(222,95,40)"/><text x="97.8258%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.51%)</title><rect x="97.5758%" y="869" width="0.5051%" height="15" fill="rgb(250,35,16)"/><text x="97.8258%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.51%)</title><rect x="97.5758%" y="853" width="0.5051%" height="15" fill="rgb(224,86,44)"/><text x="97.8258%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.51%)</title><rect x="97.5758%" y="837" width="0.5051%" height="15" fill="rgb(237,53,53)"/><text x="97.8258%" y="847.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.51%)</title><rect x="97.5758%" y="821" width="0.5051%" height="15" fill="rgb(208,171,33)"/><text x="97.8258%" y="831.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.51%)</title><rect x="97.5758%" y="805" width="0.5051%" height="15" fill="rgb(222,64,27)"/><text x="97.8258%" y="815.50"></text></g><g><title>_int_malloc (5 samples, 0.51%)</title><rect x="97.5758%" y="789" width="0.5051%" height="15" fill="rgb(221,121,35)"/><text x="97.8258%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.10%)</title><rect x="98.1818%" y="853" width="0.1010%" height="15" fill="rgb(228,137,42)"/><text x="98.4318%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="98.1818%" y="837" width="0.1010%" height="15" fill="rgb(227,54,21)"/><text x="98.4318%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="98.1818%" y="821" width="0.1010%" height="15" fill="rgb(240,168,33)"/><text x="98.4318%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="98.1818%" y="805" width="0.1010%" height="15" fill="rgb(243,159,6)"/><text x="98.4318%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="98.1818%" y="789" width="0.1010%" height="15" fill="rgb(205,211,41)"/><text x="98.4318%" y="799.50"></text></g><g><title>criterion::routine::Routine::profile (148 samples, 14.95%)</title><rect x="83.4343%" y="1573" width="14.9495%" height="15" fill="rgb(253,30,1)"/><text x="83.6843%" y="1583.50">criterion::routine::Rou..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (32 samples, 3.23%)</title><rect x="95.1515%" y="1557" width="3.2323%" height="15" fill="rgb(226,80,18)"/><text x="95.4015%" y="1567.50">&lt;cr..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (32 samples, 3.23%)</title><rect x="95.1515%" y="1541" width="3.2323%" height="15" fill="rgb(253,156,46)"/><text x="95.4015%" y="1551.50">cri..</text></g><g><title>bench::too_many_predicates::_{{closure}} (32 samples, 3.23%)</title><rect x="95.1515%" y="1525" width="3.2323%" height="15" fill="rgb(248,87,27)"/><text x="95.4015%" y="1535.50">ben..</text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (32 samples, 3.23%)</title><rect x="95.1515%" y="1509" width="3.2323%" height="15" fill="rgb(227,122,2)"/><text x="95.4015%" y="1519.50">cri..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (32 samples, 3.23%)</title><rect x="95.1515%" y="1493" width="3.2323%" height="15" fill="rgb(229,94,39)"/><text x="95.4015%" y="1503.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (32 samples, 3.23%)</title><rect x="95.1515%" y="1477" width="3.2323%" height="15" fill="rgb(225,173,31)"/><text x="95.4015%" y="1487.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (32 samples, 3.23%)</title><rect x="95.1515%" y="1461" width="3.2323%" height="15" fill="rgb(239,176,30)"/><text x="95.4015%" y="1471.50">cor..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 3.23%)</title><rect x="95.1515%" y="1445" width="3.2323%" height="15" fill="rgb(212,104,21)"/><text x="95.4015%" y="1455.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (32 samples, 3.23%)</title><rect x="95.1515%" y="1429" width="3.2323%" height="15" fill="rgb(240,209,40)"/><text x="95.4015%" y="1439.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (32 samples, 3.23%)</title><rect x="95.1515%" y="1413" width="3.2323%" height="15" fill="rgb(234,195,5)"/><text x="95.4015%" y="1423.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (32 samples, 3.23%)</title><rect x="95.1515%" y="1397" width="3.2323%" height="15" fill="rgb(238,213,1)"/><text x="95.4015%" y="1407.50">cor..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (32 samples, 3.23%)</title><rect x="95.1515%" y="1381" width="3.2323%" height="15" fill="rgb(235,182,54)"/><text x="95.4015%" y="1391.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 3.23%)</title><rect x="95.1515%" y="1365" width="3.2323%" height="15" fill="rgb(229,50,46)"/><text x="95.4015%" y="1375.50">cor..</text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (32 samples, 3.23%)</title><rect x="95.1515%" y="1349" width="3.2323%" height="15" fill="rgb(219,145,13)"/><text x="95.4015%" y="1359.50">ben..</text></g><g><title>bench::Runner::run (32 samples, 3.23%)</title><rect x="95.1515%" y="1333" width="3.2323%" height="15" fill="rgb(220,226,10)"/><text x="95.4015%" y="1343.50">ben..</text></g><g><title>bench::Runner::next (32 samples, 3.23%)</title><rect x="95.1515%" y="1317" width="3.2323%" height="15" fill="rgb(248,47,30)"/><text x="95.4015%" y="1327.50">ben..</text></g><g><title>polar::polar::Polar::query (32 samples, 3.23%)</title><rect x="95.1515%" y="1301" width="3.2323%" height="15" fill="rgb(231,209,44)"/><text x="95.4015%" y="1311.50">pol..</text></g><g><title>polar::vm::PolarVirtualMachine::run (32 samples, 3.23%)</title><rect x="95.1515%" y="1285" width="3.2323%" height="15" fill="rgb(209,80,30)"/><text x="95.4015%" y="1295.50">pol..</text></g><g><title>polar::vm::PolarVirtualMachine::next (32 samples, 3.23%)</title><rect x="95.1515%" y="1269" width="3.2323%" height="15" fill="rgb(232,9,14)"/><text x="95.4015%" y="1279.50">pol..</text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (16 samples, 1.62%)</title><rect x="96.7677%" y="1253" width="1.6162%" height="15" fill="rgb(243,91,43)"/><text x="97.0177%" y="1263.50"></text></g><g><title>polar::vm::PolarVirtualMachine::choose (3 samples, 0.30%)</title><rect x="98.0808%" y="1237" width="0.3030%" height="15" fill="rgb(231,90,52)"/><text x="98.3308%" y="1247.50"></text></g><g><title>polar::vm::PolarVirtualMachine::push_choice (3 samples, 0.30%)</title><rect x="98.0808%" y="1221" width="0.3030%" height="15" fill="rgb(253,192,44)"/><text x="98.3308%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="98.0808%" y="1205" width="0.3030%" height="15" fill="rgb(241,66,31)"/><text x="98.3308%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.30%)</title><rect x="98.0808%" y="1189" width="0.3030%" height="15" fill="rgb(235,81,37)"/><text x="98.3308%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.30%)</title><rect x="98.0808%" y="1173" width="0.3030%" height="15" fill="rgb(223,221,9)"/><text x="98.3308%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.30%)</title><rect x="98.0808%" y="1157" width="0.3030%" height="15" fill="rgb(242,180,7)"/><text x="98.3308%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="98.0808%" y="1141" width="0.3030%" height="15" fill="rgb(243,78,19)"/><text x="98.3308%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="98.0808%" y="1125" width="0.3030%" height="15" fill="rgb(233,23,17)"/><text x="98.3308%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="98.0808%" y="1109" width="0.3030%" height="15" fill="rgb(252,122,45)"/><text x="98.3308%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="98.0808%" y="1093" width="0.3030%" height="15" fill="rgb(247,108,20)"/><text x="98.3308%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="98.0808%" y="1077" width="0.3030%" height="15" fill="rgb(235,84,21)"/><text x="98.3308%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="98.0808%" y="1061" width="0.3030%" height="15" fill="rgb(247,129,10)"/><text x="98.3308%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="98.0808%" y="1045" width="0.3030%" height="15" fill="rgb(208,173,14)"/><text x="98.3308%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="98.0808%" y="1029" width="0.3030%" height="15" fill="rgb(236,31,38)"/><text x="98.3308%" y="1039.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="98.0808%" y="1013" width="0.3030%" height="15" fill="rgb(232,65,17)"/><text x="98.3308%" y="1023.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.30%)</title><rect x="98.0808%" y="997" width="0.3030%" height="15" fill="rgb(224,45,49)"/><text x="98.3308%" y="1007.50"></text></g><g><title>&lt;polar::types::Term as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="98.0808%" y="981" width="0.3030%" height="15" fill="rgb(225,2,53)"/><text x="98.3308%" y="991.50"></text></g><g><title>&lt;polar::types::Value as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="98.1818%" y="965" width="0.2020%" height="15" fill="rgb(248,210,53)"/><text x="98.4318%" y="975.50"></text></g><g><title>&lt;polar::types::Predicate as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="98.1818%" y="949" width="0.2020%" height="15" fill="rgb(211,1,30)"/><text x="98.4318%" y="959.50"></text></g><g><title>&lt;polar::types::Symbol as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="98.1818%" y="933" width="0.2020%" height="15" fill="rgb(224,96,15)"/><text x="98.4318%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="98.1818%" y="917" width="0.2020%" height="15" fill="rgb(252,45,11)"/><text x="98.4318%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="98.1818%" y="901" width="0.2020%" height="15" fill="rgb(220,125,38)"/><text x="98.4318%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="98.1818%" y="885" width="0.2020%" height="15" fill="rgb(243,161,33)"/><text x="98.4318%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="98.1818%" y="869" width="0.2020%" height="15" fill="rgb(248,197,34)"/><text x="98.4318%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="98.2828%" y="853" width="0.1010%" height="15" fill="rgb(228,165,23)"/><text x="98.5328%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="98.2828%" y="837" width="0.1010%" height="15" fill="rgb(236,94,38)"/><text x="98.5328%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="98.2828%" y="821" width="0.1010%" height="15" fill="rgb(220,13,23)"/><text x="98.5328%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="98.2828%" y="805" width="0.1010%" height="15" fill="rgb(234,26,39)"/><text x="98.5328%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.10%)</title><rect x="98.2828%" y="789" width="0.1010%" height="15" fill="rgb(205,117,44)"/><text x="98.5328%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="98.2828%" y="773" width="0.1010%" height="15" fill="rgb(250,42,2)"/><text x="98.5328%" y="783.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="98.2828%" y="757" width="0.1010%" height="15" fill="rgb(223,83,14)"/><text x="98.5328%" y="767.50"></text></g><g><title>[unknown] (975 samples, 98.48%)</title><rect x="0.0000%" y="1589" width="98.4848%" height="15" fill="rgb(241,147,50)"/><text x="0.2500%" y="1599.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (1 samples, 0.10%)</title><rect x="98.3838%" y="1573" width="0.1010%" height="15" fill="rgb(218,90,6)"/><text x="98.6338%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="98.3838%" y="1557" width="0.1010%" height="15" fill="rgb(210,191,5)"/><text x="98.6338%" y="1567.50"></text></g><g><title>std::panicking::try (1 samples, 0.10%)</title><rect x="98.3838%" y="1541" width="0.1010%" height="15" fill="rgb(225,139,19)"/><text x="98.6338%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="98.3838%" y="1525" width="0.1010%" height="15" fill="rgb(210,1,33)"/><text x="98.6338%" y="1535.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="1509" width="0.1010%" height="15" fill="rgb(213,50,3)"/><text x="98.6338%" y="1519.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="1493" width="0.1010%" height="15" fill="rgb(234,227,4)"/><text x="98.6338%" y="1503.50"></text></g><g><title>bench::main (1 samples, 0.10%)</title><rect x="98.3838%" y="1477" width="0.1010%" height="15" fill="rgb(246,63,5)"/><text x="98.6338%" y="1487.50"></text></g><g><title>bench::benches (1 samples, 0.10%)</title><rect x="98.3838%" y="1461" width="0.1010%" height="15" fill="rgb(245,136,27)"/><text x="98.6338%" y="1471.50"></text></g><g><title>bench::too_many_predicates (1 samples, 0.10%)</title><rect x="98.3838%" y="1445" width="0.1010%" height="15" fill="rgb(247,199,27)"/><text x="98.6338%" y="1455.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (1 samples, 0.10%)</title><rect x="98.3838%" y="1429" width="0.1010%" height="15" fill="rgb(252,158,49)"/><text x="98.6338%" y="1439.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1 samples, 0.10%)</title><rect x="98.3838%" y="1413" width="0.1010%" height="15" fill="rgb(254,73,1)"/><text x="98.6338%" y="1423.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (1 samples, 0.10%)</title><rect x="98.3838%" y="1397" width="0.1010%" height="15" fill="rgb(248,93,19)"/><text x="98.6338%" y="1407.50"></text></g><g><title>criterion::analysis::common (1 samples, 0.10%)</title><rect x="98.3838%" y="1381" width="0.1010%" height="15" fill="rgb(206,67,5)"/><text x="98.6338%" y="1391.50"></text></g><g><title>criterion::routine::Routine::profile (1 samples, 0.10%)</title><rect x="98.3838%" y="1365" width="0.1010%" height="15" fill="rgb(209,210,4)"/><text x="98.6338%" y="1375.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (1 samples, 0.10%)</title><rect x="98.3838%" y="1349" width="0.1010%" height="15" fill="rgb(214,185,36)"/><text x="98.6338%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="98.3838%" y="1333" width="0.1010%" height="15" fill="rgb(233,191,26)"/><text x="98.6338%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="98.3838%" y="1317" width="0.1010%" height="15" fill="rgb(248,94,17)"/><text x="98.6338%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="98.3838%" y="1301" width="0.1010%" height="15" fill="rgb(250,64,4)"/><text x="98.6338%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="98.3838%" y="1285" width="0.1010%" height="15" fill="rgb(218,41,53)"/><text x="98.6338%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="98.3838%" y="1269" width="0.1010%" height="15" fill="rgb(251,176,28)"/><text x="98.6338%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="98.3838%" y="1253" width="0.1010%" height="15" fill="rgb(247,22,9)"/><text x="98.6338%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="98.3838%" y="1237" width="0.1010%" height="15" fill="rgb(218,201,14)"/><text x="98.6338%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="98.3838%" y="1221" width="0.1010%" height="15" fill="rgb(218,94,10)"/><text x="98.6338%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="1205" width="0.1010%" height="15" fill="rgb(222,183,52)"/><text x="98.6338%" y="1215.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="1189" width="0.1010%" height="15" fill="rgb(242,140,25)"/><text x="98.6338%" y="1199.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="1173" width="0.1010%" height="15" fill="rgb(235,197,38)"/><text x="98.6338%" y="1183.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="1157" width="0.1010%" height="15" fill="rgb(237,136,15)"/><text x="98.6338%" y="1167.50"></text></g><g><title>bench::too_many_predicates::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="1141" width="0.1010%" height="15" fill="rgb(223,44,49)"/><text x="98.6338%" y="1151.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (1 samples, 0.10%)</title><rect x="98.3838%" y="1125" width="0.1010%" height="15" fill="rgb(227,71,15)"/><text x="98.6338%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="98.3838%" y="1109" width="0.1010%" height="15" fill="rgb(225,153,20)"/><text x="98.6338%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="98.3838%" y="1093" width="0.1010%" height="15" fill="rgb(210,190,26)"/><text x="98.6338%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="98.3838%" y="1077" width="0.1010%" height="15" fill="rgb(223,147,5)"/><text x="98.6338%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="98.3838%" y="1061" width="0.1010%" height="15" fill="rgb(207,14,23)"/><text x="98.6338%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="98.3838%" y="1045" width="0.1010%" height="15" fill="rgb(211,195,53)"/><text x="98.6338%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="98.3838%" y="1029" width="0.1010%" height="15" fill="rgb(237,75,46)"/><text x="98.6338%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="98.3838%" y="1013" width="0.1010%" height="15" fill="rgb(254,55,14)"/><text x="98.6338%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="98.3838%" y="997" width="0.1010%" height="15" fill="rgb(230,185,30)"/><text x="98.6338%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="981" width="0.1010%" height="15" fill="rgb(220,14,11)"/><text x="98.6338%" y="991.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="965" width="0.1010%" height="15" fill="rgb(215,169,44)"/><text x="98.6338%" y="975.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched::_{{closure}} (1 samples, 0.10%)</title><rect x="98.3838%" y="949" width="0.1010%" height="15" fill="rgb(253,203,20)"/><text x="98.6338%" y="959.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="98.3838%" y="933" width="0.1010%" height="15" fill="rgb(229,225,17)"/><text x="98.6338%" y="943.50"></text></g><g><title>bench::too_many_predicates::make_runner (1 samples, 0.10%)</title><rect x="98.3838%" y="917" width="0.1010%" height="15" fill="rgb(236,76,26)"/><text x="98.6338%" y="927.50"></text></g><g><title>polar::polar::Polar::load_str (1 samples, 0.10%)</title><rect x="98.3838%" y="901" width="0.1010%" height="15" fill="rgb(234,15,30)"/><text x="98.6338%" y="911.50"></text></g><g><title>polar::polar::Polar::new_load (1 samples, 0.10%)</title><rect x="98.3838%" y="885" width="0.1010%" height="15" fill="rgb(211,113,48)"/><text x="98.6338%" y="895.50"></text></g><g><title>polar::types::Sources::add_source (1 samples, 0.10%)</title><rect x="98.3838%" y="869" width="0.1010%" height="15" fill="rgb(221,31,36)"/><text x="98.6338%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.10%)</title><rect x="98.3838%" y="853" width="0.1010%" height="15" fill="rgb(215,118,52)"/><text x="98.6338%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.10%)</title><rect x="98.3838%" y="837" width="0.1010%" height="15" fill="rgb(241,151,27)"/><text x="98.6338%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.10%)</title><rect x="98.3838%" y="821" width="0.1010%" height="15" fill="rgb(253,51,3)"/><text x="98.6338%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find_insert_slot (1 samples, 0.10%)</title><rect x="98.3838%" y="805" width="0.1010%" height="15" fill="rgb(216,201,24)"/><text x="98.6338%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.10%)</title><rect x="98.3838%" y="789" width="0.1010%" height="15" fill="rgb(231,107,4)"/><text x="98.6338%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.10%)</title><rect x="98.3838%" y="773" width="0.1010%" height="15" fill="rgb(243,97,54)"/><text x="98.6338%" y="783.50"></text></g><g><title>__GI___clone (2 samples, 0.20%)</title><rect x="98.4848%" y="1589" width="0.2020%" height="15" fill="rgb(221,32,51)"/><text x="98.7348%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.5859%" y="1573" width="0.1010%" height="15" fill="rgb(218,171,35)"/><text x="98.8359%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.6869%" y="1573" width="0.1010%" height="15" fill="rgb(214,20,53)"/><text x="98.9369%" y="1583.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="98.7879%" y="837" width="0.1010%" height="15" fill="rgb(239,9,52)"/><text x="99.0379%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="98.8889%" y="661" width="0.1010%" height="15" fill="rgb(215,114,45)"/><text x="99.1389%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.30%)</title><rect x="98.7879%" y="1077" width="0.3030%" height="15" fill="rgb(208,118,9)"/><text x="99.0379%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.30%)</title><rect x="98.7879%" y="1061" width="0.3030%" height="15" fill="rgb(235,7,39)"/><text x="99.0379%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.30%)</title><rect x="98.7879%" y="1045" width="0.3030%" height="15" fill="rgb(243,225,15)"/><text x="99.0379%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="98.7879%" y="1029" width="0.3030%" height="15" fill="rgb(225,216,18)"/><text x="99.0379%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.30%)</title><rect x="98.7879%" y="1013" width="0.3030%" height="15" fill="rgb(233,36,38)"/><text x="99.0379%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.30%)</title><rect x="98.7879%" y="997" width="0.3030%" height="15" fill="rgb(239,88,23)"/><text x="99.0379%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.30%)</title><rect x="98.7879%" y="981" width="0.3030%" height="15" fill="rgb(219,181,35)"/><text x="99.0379%" y="991.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.30%)</title><rect x="98.7879%" y="965" width="0.3030%" height="15" fill="rgb(215,18,46)"/><text x="99.0379%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.30%)</title><rect x="98.7879%" y="949" width="0.3030%" height="15" fill="rgb(241,38,11)"/><text x="99.0379%" y="959.50"></text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (3 samples, 0.30%)</title><rect x="98.7879%" y="933" width="0.3030%" height="15" fill="rgb(248,169,45)"/><text x="99.0379%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="98.7879%" y="917" width="0.3030%" height="15" fill="rgb(239,50,49)"/><text x="99.0379%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="98.7879%" y="901" width="0.3030%" height="15" fill="rgb(231,96,31)"/><text x="99.0379%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="98.7879%" y="885" width="0.3030%" height="15" fill="rgb(224,193,37)"/><text x="99.0379%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="98.7879%" y="869" width="0.3030%" height="15" fill="rgb(227,153,50)"/><text x="99.0379%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="98.7879%" y="853" width="0.3030%" height="15" fill="rgb(249,228,3)"/><text x="99.0379%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="837" width="0.2020%" height="15" fill="rgb(219,164,43)"/><text x="99.1389%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="821" width="0.2020%" height="15" fill="rgb(216,45,41)"/><text x="99.1389%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="98.8889%" y="805" width="0.2020%" height="15" fill="rgb(210,226,51)"/><text x="99.1389%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="789" width="0.2020%" height="15" fill="rgb(209,117,49)"/><text x="99.1389%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="773" width="0.2020%" height="15" fill="rgb(206,196,24)"/><text x="99.1389%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="757" width="0.2020%" height="15" fill="rgb(253,218,3)"/><text x="99.1389%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="741" width="0.2020%" height="15" fill="rgb(252,166,2)"/><text x="99.1389%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="725" width="0.2020%" height="15" fill="rgb(236,218,26)"/><text x="99.1389%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="98.8889%" y="709" width="0.2020%" height="15" fill="rgb(254,84,19)"/><text x="99.1389%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="693" width="0.2020%" height="15" fill="rgb(219,137,29)"/><text x="99.1389%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="98.8889%" y="677" width="0.2020%" height="15" fill="rgb(227,47,52)"/><text x="99.1389%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="98.9899%" y="661" width="0.1010%" height="15" fill="rgb(229,167,24)"/><text x="99.2399%" y="671.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (4 samples, 0.40%)</title><rect x="98.7879%" y="1317" width="0.4040%" height="15" fill="rgb(233,164,1)"/><text x="99.0379%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.40%)</title><rect x="98.7879%" y="1301" width="0.4040%" height="15" fill="rgb(218,88,48)"/><text x="99.0379%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.40%)</title><rect x="98.7879%" y="1285" width="0.4040%" height="15" fill="rgb(226,214,24)"/><text x="99.0379%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (4 samples, 0.40%)</title><rect x="98.7879%" y="1269" width="0.4040%" height="15" fill="rgb(233,29,12)"/><text x="99.0379%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="98.7879%" y="1253" width="0.4040%" height="15" fill="rgb(219,120,34)"/><text x="99.0379%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.40%)</title><rect x="98.7879%" y="1237" width="0.4040%" height="15" fill="rgb(226,78,44)"/><text x="99.0379%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.40%)</title><rect x="98.7879%" y="1221" width="0.4040%" height="15" fill="rgb(240,15,48)"/><text x="99.0379%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.40%)</title><rect x="98.7879%" y="1205" width="0.4040%" height="15" fill="rgb(253,176,7)"/><text x="99.0379%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.40%)</title><rect x="98.7879%" y="1189" width="0.4040%" height="15" fill="rgb(206,166,28)"/><text x="99.0379%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (4 samples, 0.40%)</title><rect x="98.7879%" y="1173" width="0.4040%" height="15" fill="rgb(241,53,51)"/><text x="99.0379%" y="1183.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.40%)</title><rect x="98.7879%" y="1157" width="0.4040%" height="15" fill="rgb(249,112,30)"/><text x="99.0379%" y="1167.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (4 samples, 0.40%)</title><rect x="98.7879%" y="1141" width="0.4040%" height="15" fill="rgb(217,85,30)"/><text x="99.0379%" y="1151.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (4 samples, 0.40%)</title><rect x="98.7879%" y="1125" width="0.4040%" height="15" fill="rgb(233,49,7)"/><text x="99.0379%" y="1135.50"></text></g><g><title>bench::too_many_predicates::_{{closure}} (4 samples, 0.40%)</title><rect x="98.7879%" y="1109" width="0.4040%" height="15" fill="rgb(234,109,9)"/><text x="99.0379%" y="1119.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (4 samples, 0.40%)</title><rect x="98.7879%" y="1093" width="0.4040%" height="15" fill="rgb(253,95,22)"/><text x="99.0379%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="99.0909%" y="1077" width="0.1010%" height="15" fill="rgb(233,176,25)"/><text x="99.3409%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="99.0909%" y="1061" width="0.1010%" height="15" fill="rgb(236,33,39)"/><text x="99.3409%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="99.0909%" y="1045" width="0.1010%" height="15" fill="rgb(223,226,42)"/><text x="99.3409%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="99.0909%" y="1029" width="0.1010%" height="15" fill="rgb(216,99,33)"/><text x="99.3409%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="99.0909%" y="1013" width="0.1010%" height="15" fill="rgb(235,84,23)"/><text x="99.3409%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="99.0909%" y="997" width="0.1010%" height="15" fill="rgb(232,2,27)"/><text x="99.3409%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="99.0909%" y="981" width="0.1010%" height="15" fill="rgb(241,23,22)"/><text x="99.3409%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="99.0909%" y="965" width="0.1010%" height="15" fill="rgb(211,73,27)"/><text x="99.3409%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="99.0909%" y="949" width="0.1010%" height="15" fill="rgb(235,109,49)"/><text x="99.3409%" y="959.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="99.0909%" y="933" width="0.1010%" height="15" fill="rgb(230,99,29)"/><text x="99.3409%" y="943.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched::_{{closure}} (1 samples, 0.10%)</title><rect x="99.0909%" y="917" width="0.1010%" height="15" fill="rgb(245,199,7)"/><text x="99.3409%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="99.0909%" y="901" width="0.1010%" height="15" fill="rgb(217,179,10)"/><text x="99.3409%" y="911.50"></text></g><g><title>bench::too_many_predicates::make_runner (1 samples, 0.10%)</title><rect x="99.0909%" y="885" width="0.1010%" height="15" fill="rgb(254,99,47)"/><text x="99.3409%" y="895.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="99.0909%" y="869" width="0.1010%" height="15" fill="rgb(251,121,7)"/><text x="99.3409%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="99.0909%" y="853" width="0.1010%" height="15" fill="rgb(250,177,26)"/><text x="99.3409%" y="863.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="99.0909%" y="837" width="0.1010%" height="15" fill="rgb(232,88,15)"/><text x="99.3409%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.10%)</title><rect x="99.0909%" y="821" width="0.1010%" height="15" fill="rgb(251,54,54)"/><text x="99.3409%" y="831.50"></text></g><g><title>bench::too_many_predicates (5 samples, 0.51%)</title><rect x="98.7879%" y="1413" width="0.5051%" height="15" fill="rgb(208,177,15)"/><text x="99.0379%" y="1423.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (5 samples, 0.51%)</title><rect x="98.7879%" y="1397" width="0.5051%" height="15" fill="rgb(205,97,32)"/><text x="99.0379%" y="1407.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (5 samples, 0.51%)</title><rect x="98.7879%" y="1381" width="0.5051%" height="15" fill="rgb(217,192,13)"/><text x="99.0379%" y="1391.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (5 samples, 0.51%)</title><rect x="98.7879%" y="1365" width="0.5051%" height="15" fill="rgb(215,163,41)"/><text x="99.0379%" y="1375.50"></text></g><g><title>criterion::analysis::common (5 samples, 0.51%)</title><rect x="98.7879%" y="1349" width="0.5051%" height="15" fill="rgb(246,83,29)"/><text x="99.0379%" y="1359.50"></text></g><g><title>criterion::routine::Routine::profile (5 samples, 0.51%)</title><rect x="98.7879%" y="1333" width="0.5051%" height="15" fill="rgb(219,2,45)"/><text x="99.0379%" y="1343.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1 samples, 0.10%)</title><rect x="99.1919%" y="1317" width="0.1010%" height="15" fill="rgb(242,215,33)"/><text x="99.4419%" y="1327.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (1 samples, 0.10%)</title><rect x="99.1919%" y="1301" width="0.1010%" height="15" fill="rgb(217,1,6)"/><text x="99.4419%" y="1311.50"></text></g><g><title>bench::too_many_predicates::_{{closure}} (1 samples, 0.10%)</title><rect x="99.1919%" y="1285" width="0.1010%" height="15" fill="rgb(207,85,52)"/><text x="99.4419%" y="1295.50"></text></g><g><title>criterion::Bencher&lt;M&gt;::iter_batched (1 samples, 0.10%)</title><rect x="99.1919%" y="1269" width="0.1010%" height="15" fill="rgb(231,171,19)"/><text x="99.4419%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="99.1919%" y="1253" width="0.1010%" height="15" fill="rgb(207,128,4)"/><text x="99.4419%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.10%)</title><rect x="99.1919%" y="1237" width="0.1010%" height="15" fill="rgb(219,208,4)"/><text x="99.4419%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="99.1919%" y="1221" width="0.1010%" height="15" fill="rgb(235,161,42)"/><text x="99.4419%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="99.1919%" y="1205" width="0.1010%" height="15" fill="rgb(247,218,18)"/><text x="99.4419%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="99.1919%" y="1189" width="0.1010%" height="15" fill="rgb(232,114,51)"/><text x="99.4419%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="99.1919%" y="1173" width="0.1010%" height="15" fill="rgb(222,95,3)"/><text x="99.4419%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (1 samples, 0.10%)</title><rect x="99.1919%" y="1157" width="0.1010%" height="15" fill="rgb(240,65,29)"/><text x="99.4419%" y="1167.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (1 samples, 0.10%)</title><rect x="99.1919%" y="1141" width="0.1010%" height="15" fill="rgb(249,209,20)"/><text x="99.4419%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="99.1919%" y="1125" width="0.1010%" height="15" fill="rgb(241,48,37)"/><text x="99.4419%" y="1135.50"></text></g><g><title>bench::simple_queries::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="99.1919%" y="1109" width="0.1010%" height="15" fill="rgb(230,140,42)"/><text x="99.4419%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="1093" width="0.1010%" height="15" fill="rgb(230,176,45)"/><text x="99.4419%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="1077" width="0.1010%" height="15" fill="rgb(245,112,21)"/><text x="99.4419%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="1061" width="0.1010%" height="15" fill="rgb(207,183,35)"/><text x="99.4419%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.1919%" y="1045" width="0.1010%" height="15" fill="rgb(227,44,33)"/><text x="99.4419%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="1029" width="0.1010%" height="15" fill="rgb(246,120,21)"/><text x="99.4419%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="1013" width="0.1010%" height="15" fill="rgb(235,57,52)"/><text x="99.4419%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="997" width="0.1010%" height="15" fill="rgb(238,84,10)"/><text x="99.4419%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.1919%" y="981" width="0.1010%" height="15" fill="rgb(251,200,32)"/><text x="99.4419%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="965" width="0.1010%" height="15" fill="rgb(247,159,13)"/><text x="99.4419%" y="975.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="949" width="0.1010%" height="15" fill="rgb(238,64,4)"/><text x="99.4419%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.1919%" y="933" width="0.1010%" height="15" fill="rgb(221,131,51)"/><text x="99.4419%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="917" width="0.1010%" height="15" fill="rgb(242,5,29)"/><text x="99.4419%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="901" width="0.1010%" height="15" fill="rgb(214,130,32)"/><text x="99.4419%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.1919%" y="885" width="0.1010%" height="15" fill="rgb(244,210,16)"/><text x="99.4419%" y="895.50"></text></g><g><title>__libc_start_main (6 samples, 0.61%)</title><rect x="98.7879%" y="1573" width="0.6061%" height="15" fill="rgb(234,48,26)"/><text x="99.0379%" y="1583.50"></text></g><g><title>main (6 samples, 0.61%)</title><rect x="98.7879%" y="1557" width="0.6061%" height="15" fill="rgb(231,82,38)"/><text x="99.0379%" y="1567.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.61%)</title><rect x="98.7879%" y="1541" width="0.6061%" height="15" fill="rgb(254,128,41)"/><text x="99.0379%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.61%)</title><rect x="98.7879%" y="1525" width="0.6061%" height="15" fill="rgb(212,73,49)"/><text x="99.0379%" y="1535.50"></text></g><g><title>std::panicking::try (6 samples, 0.61%)</title><rect x="98.7879%" y="1509" width="0.6061%" height="15" fill="rgb(205,62,54)"/><text x="99.0379%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.61%)</title><rect x="98.7879%" y="1493" width="0.6061%" height="15" fill="rgb(228,0,8)"/><text x="99.0379%" y="1503.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (6 samples, 0.61%)</title><rect x="98.7879%" y="1477" width="0.6061%" height="15" fill="rgb(251,28,17)"/><text x="99.0379%" y="1487.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.61%)</title><rect x="98.7879%" y="1461" width="0.6061%" height="15" fill="rgb(238,105,27)"/><text x="99.0379%" y="1471.50"></text></g><g><title>bench::main (6 samples, 0.61%)</title><rect x="98.7879%" y="1445" width="0.6061%" height="15" fill="rgb(237,216,33)"/><text x="99.0379%" y="1455.50"></text></g><g><title>bench::benches (6 samples, 0.61%)</title><rect x="98.7879%" y="1429" width="0.6061%" height="15" fill="rgb(229,228,25)"/><text x="99.0379%" y="1439.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 0.10%)</title><rect x="99.2929%" y="1413" width="0.1010%" height="15" fill="rgb(233,75,23)"/><text x="99.5429%" y="1423.50"></text></g><g><title>criterion::debug_enabled (1 samples, 0.10%)</title><rect x="99.2929%" y="1397" width="0.1010%" height="15" fill="rgb(231,207,16)"/><text x="99.5429%" y="1407.50"></text></g><g><title>&lt;criterion::DEBUG_ENABLED as core::ops::deref::Deref&gt;::deref (1 samples, 0.10%)</title><rect x="99.2929%" y="1381" width="0.1010%" height="15" fill="rgb(231,191,45)"/><text x="99.5429%" y="1391.50"></text></g><g><title>&lt;criterion::DEBUG_ENABLED as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.10%)</title><rect x="99.2929%" y="1365" width="0.1010%" height="15" fill="rgb(224,133,17)"/><text x="99.5429%" y="1375.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="99.2929%" y="1349" width="0.1010%" height="15" fill="rgb(209,178,27)"/><text x="99.5429%" y="1359.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.10%)</title><rect x="99.2929%" y="1333" width="0.1010%" height="15" fill="rgb(218,37,11)"/><text x="99.5429%" y="1343.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.10%)</title><rect x="99.2929%" y="1317" width="0.1010%" height="15" fill="rgb(251,226,25)"/><text x="99.5429%" y="1327.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.10%)</title><rect x="99.2929%" y="1301" width="0.1010%" height="15" fill="rgb(209,222,27)"/><text x="99.5429%" y="1311.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (1 samples, 0.10%)</title><rect x="99.2929%" y="1285" width="0.1010%" height="15" fill="rgb(238,22,21)"/><text x="99.5429%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="99.2929%" y="1269" width="0.1010%" height="15" fill="rgb(233,161,25)"/><text x="99.5429%" y="1279.50"></text></g><g><title>&lt;criterion::DEBUG_ENABLED as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.10%)</title><rect x="99.2929%" y="1253" width="0.1010%" height="15" fill="rgb(226,122,53)"/><text x="99.5429%" y="1263.50"></text></g><g><title>std::env::var_os (1 samples, 0.10%)</title><rect x="99.2929%" y="1237" width="0.1010%" height="15" fill="rgb(220,123,17)"/><text x="99.5429%" y="1247.50"></text></g><g><title>std::env::_var_os (1 samples, 0.10%)</title><rect x="99.2929%" y="1221" width="0.1010%" height="15" fill="rgb(230,224,35)"/><text x="99.5429%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.5960%" y="1557" width="0.1010%" height="15" fill="rgb(246,83,8)"/><text x="99.8460%" y="1567.50"></text></g><g><title>_start (11 samples, 1.11%)</title><rect x="98.6869%" y="1589" width="1.1111%" height="15" fill="rgb(230,214,17)"/><text x="98.9369%" y="1599.50"></text></g><g><title>_dl_start (4 samples, 0.40%)</title><rect x="99.3939%" y="1573" width="0.4040%" height="15" fill="rgb(222,97,18)"/><text x="99.6439%" y="1583.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="99.6970%" y="1557" width="0.1010%" height="15" fill="rgb(206,79,1)"/><text x="99.9470%" y="1567.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.10%)</title><rect x="99.6970%" y="1541" width="0.1010%" height="15" fill="rgb(214,121,34)"/><text x="99.9470%" y="1551.50"></text></g><g><title>anon.ecff6ecd6ea0bc3931ec34c6fbb427d3.27.llvm.8775670526355512132 (1 samples, 0.10%)</title><rect x="99.7980%" y="1589" width="0.1010%" height="15" fill="rgb(249,199,46)"/><text x="100.0480%" y="1599.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="99.7980%" y="1573" width="0.1010%" height="15" fill="rgb(214,222,46)"/><text x="100.0480%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.7980%" y="1557" width="0.1010%" height="15" fill="rgb(248,168,30)"/><text x="100.0480%" y="1567.50"></text></g><g><title>all (990 samples, 100%)</title><rect x="0.0000%" y="1621" width="100.0000%" height="15" fill="rgb(226,14,28)"/><text x="0.2500%" y="1631.50"></text></g><g><title>bench-c4f3cf956 (990 samples, 100.00%)</title><rect x="0.0000%" y="1605" width="100.0000%" height="15" fill="rgb(253,123,1)"/><text x="0.2500%" y="1615.50">bench-c4f3cf956</text></g><g><title>polar::vm::PolarVirtualMachine::next (1 samples, 0.10%)</title><rect x="99.8990%" y="1589" width="0.1010%" height="15" fill="rgb(225,24,42)"/><text x="100.1490%" y="1599.50"></text></g><g><title>polar::vm::PolarVirtualMachine::sort_rules (1 samples, 0.10%)</title><rect x="99.8990%" y="1573" width="0.1010%" height="15" fill="rgb(216,161,37)"/><text x="100.1490%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.8990%" y="1557" width="0.1010%" height="15" fill="rgb(251,164,26)"/><text x="100.1490%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.8990%" y="1541" width="0.1010%" height="15" fill="rgb(219,177,3)"/><text x="100.1490%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.10%)</title><rect x="99.8990%" y="1525" width="0.1010%" height="15" fill="rgb(222,65,0)"/><text x="100.1490%" y="1535.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="99.8990%" y="1509" width="0.1010%" height="15" fill="rgb(223,69,54)"/><text x="100.1490%" y="1519.50"></text></g></svg></svg>