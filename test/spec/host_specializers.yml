name: Host class specializers
policies: [host_classes, dict_specializers]
description: Check core host class functionality
cases:
  - description: can specialize on classes
    query: is_unitclass
    input: [{type: UnitClass}]
  - description: can specialize on subclasses
    query: is_parentclass
    input: [{type: ChildClass}]
  - description: can specialize on either subclass or class
    query: has_subclass
    input: [{type: ChildClass}]
    result: [{}, {}]
  - description: can order rules by specificity
    query: level
    input: [{type: GrandchildClass}, {var: x}]
    result: [{x: 3}, {x: 2}, {x: 1}]

  # using dictionaries as specializers on classes
  - description: can specialize on dictionaries 1/3
    query: what_dict_is
    # wolf
    input:
     - {type: Animal, kwargs: {Species: "canis lupus", Genus: "canis", Family: "canidae"}}
     - {var: res}
    result: [{res: "wolf"}, {res: "canine"}]
  - description: can specialize on dictionaries 2/3
    query: what_dict_is
    # dog
    input:
     - {type: Animal, kwargs: {Species: "canis familiaris", Genus: "canis", Family: "canidae"}}
     - {var: res}
    result: [{res: "dog"}, {res: "canine"}]
  - description: can specialize on dictionaries 3/3
    query: what_dict_is
    # canine
    input:
     - {type: Animal, kwargs: {Genus: "canis", Family: "canidae"}}
     - {var: res}
    result: [{res: "canine"}]

  # using instance literals as specializers on classes
  - description: can specialize on instance literals 1/5
    query: what_class_is
    # wolf
    input:
     - {type: Animal, kwargs: {Species: "canis lupus", Genus: "canis", Family: "canidae"}}
     - {var: res}
    result: [{res: "wolf"}, {res: "canis lupus"}, {res: "canine"}, {res: "canid"}, {res: "animal"}]
  - description: can specialize on instance literals 2/5
    query: what_class_is
    # dog
    input:
     - {type: Animal, kwargs: {Species: "canis familiaris", Genus: "canis", Family: "canidae"}}
     - {var: res}
    result: [{res: "dog"}, {res: "canis familiaris"}, {res: "canine"}, {res: "canid"}, {res: "animal"}]
  - description: can specialize on instance literals 3/5
    query: what_class_is
    # canine
    input:
     - {type: Animal, kwargs: {Genus: "canis", Family: "canidae"}}
     - {var: res}
    result: [{res: null}, {res: "canine"}, {res: "canid"}, {res: "animal"}]
  - description: can specialize on instance literals 4/5
    query: what_class_is
    # canid
    input:
     - {type: Animal, kwargs: {Family: "canidae"}}
     - {var: res}
    result: [{res: "canid"}, {res: "animal"}]
  - description: can specialize on instance literals 5/5
    query: what_class_is
    # animal
    input:
     - {type: Animal}
     - {var: res}
    result: [{res: "animal"}]

  # using instance literals and dicts as specializers on classes
  - description: can specialize on both dicts and instance literals
    query: what_is
    # wolf
    input:
     - {type: Animal, kwargs: {Species: "canis lupus", Genus: "canis", Family: "canidae"}}
     - {var: res}
    result: 
      - res: wolf_class
      - res: canine_class
      - res: canid_class
      - res: animal_class
      - res: wolf_dict
      - res: canine_dict
  