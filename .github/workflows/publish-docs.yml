name: Publish Docs
on:
  workflow_dispatch:
    inputs:
      url:
        description: "docs s3 path (docs.oso.dev or docs-preview.oso.dev)"
      oso_version:
        description: "oso release to build docs for"
      flask_oso_version:
        description: "flask oso release to build docs for"
      django_oso_version:
        description: "django oso release to build docs for"
      sqlalchemy_oso_version:
        description: "sqlalchemy oso release to build docs for"
jobs:
  publish:
    name: Publish docs
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DOCS_AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DOCS_AWS_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"
      - name: Install Ruby + gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 2.4
          working-directory: "languages/ruby"
      - name: Install yard
        run: gem install yard
      - name: Download oso from release
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/v${{ github.event.inputs.oso_version }} | jq -r '.assets[] | select(.name == "oso-python-${{ github.event.inputs.oso_version }}.zip") | .url') --output oso-python-${{ github.event.inputs.oso_version }}.zip
      - run: unzip oso-python-${{ github.event.inputs.oso_version }}.zip -d oso-python
      - name: Install oso from release
        run: pip install oso==${{ github.event.inputs.oso_version }} -f oso-python
      - name: Download flask-oso from release
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/flask-v${{ github.event.inputs.flask_oso_version }} | jq -r '.assets[] | select(.name == "flask-oso-python-${{ github.event.inputs.flask_oso_version }}.zip") | .url') --output flask-oso-python-${{ github.event.inputs.flask_oso_version }}.zip
      - run: unzip flask-oso-python-${{ github.event.inputs.flask_oso_version }}.zip -d flask-oso-python
      - name: Download django-oso from release
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/django-v${{ github.event.inputs.django_oso_version }} | jq -r '.assets[] | select(.name == "django-oso-python-${{ github.event.inputs.django_oso_version }}.zip") | .url') --output django-oso-python-${{ github.event.inputs.django_oso_version }}.zip
      - run: unzip django-oso-python-${{ github.event.inputs.django_oso_version }}.zip -d django-oso-python
      - name: Install flask-oso from release
        run: pip install flask_oso==${{ github.event.inputs.flask_oso_version }} -f flask-oso-python
      - name: Install django-oso from release
        run: pip install django_oso==${{ github.event.inputs.django_oso_version }} -f django-oso-python
      - name: Install sqlalchemy-oso from release
        run: pip install sqlalchemy_oso==${{ github.event.inputs.sqlalchemy_oso_version }} -f sqlalchemy-oso-python
      - name: Build docs
        run: SPHINXOPTS="-W" make -C docs build
      - name: s3 publish
        run: aws s3 sync --delete docs/_build/html s3://${{ github.event.inputs.url }}
      - name: cloudfront invalidate docs preview
        run: aws cloudfront create-invalidation --distribution-id E2KU2V8C9KJNU7 --paths "/*"
        if: github.event.inputs.url == 'docs-preview.oso.dev'
      - name: cloudfront invalidate docs
        run: aws cloudfront create-invalidation --distribution-id E1MY35FKBOYAV1 --paths "/*"
        if: github.event.inputs.url == 'docs.oso.dev'
