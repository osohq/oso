name: Publish Docs
on:
  workflow_dispatch:
    inputs:
      url:
        description: "docs s3 path (docs.oso.dev or docs-preview.oso.dev)"
      oso_version:
        description: "oso release to build docs for"
      flask_oso_version:
        description: "flask oso release to build docs for"
      django_oso_version:
        description: "django oso release to build docs for"
      sqlalchemy_oso_version:
        description: "sqlalchemy oso release to build docs for"
jobs:
  publish:
    name: Publish docs
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DOCS_AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DOCS_AWS_SECRET }}
    steps:
      - uses: actions/checkout@v2

      ### Setup dependencies
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"
      - name: Install Ruby + gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 2.4
          working-directory: "languages/ruby"
      - name: Install yard
        run: gem install yard
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Uncomment this when we want WASM on the docs site again
      # - name: Install Rust stable toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: stable
      #
      # ### Build Rust WASM target
      # - name: Add WebAssembly target
      #   run: rustup target add wasm32-unknown-unknown
      # - name: Install wasm-pack
      #   run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      # - name: Build Rust WASM
      #   run: make wasm-build

      ### Install release version of Oso libraries
      - name: Download oso (Node.js) from release
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/v${{ github.event.inputs.oso_version }} | jq -r '.assets[] | select(.name == "oso-js-node-${{ github.event.inputs.oso_version }}.tgz") | .url') --output oso-js-node-${{ github.event.inputs.oso_version }}.tgz
      - name: Copy WASM types file from release archive to JS lib
        run: tar -xzf oso-js-node-${{ github.event.inputs.oso_version }}.tgz -C languages/js --strip-components=2 package/dist/src/polar_wasm_api.d.ts
      - name: Download oso (Python) from release
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/v${{ github.event.inputs.oso_version }} | jq -r '.assets[] | select(.name == "oso-python-${{ github.event.inputs.oso_version }}.zip") | .url') --output oso-python-${{ github.event.inputs.oso_version }}.zip
      - run: unzip oso-python-${{ github.event.inputs.oso_version }}.zip -d oso-python
      - name: Install oso from release
        run: pip install oso==${{ github.event.inputs.oso_version }} -f oso-python
      - name: Download flask-oso from release
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/flask-v${{ github.event.inputs.flask_oso_version }} | jq -r '.assets[] | select(.name == "flask-oso-python-${{ github.event.inputs.flask_oso_version }}.zip") | .url') --output flask-oso-python-${{ github.event.inputs.flask_oso_version }}.zip
      - run: unzip flask-oso-python-${{ github.event.inputs.flask_oso_version }}.zip -d flask-oso-python
      - name: Download django-oso from release
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" $(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/repos/osohq/oso/releases/tags/django-v${{ github.event.inputs.django_oso_version }} | jq -r '.assets[] | select(.name == "django-oso-python-${{ github.event.inputs.django_oso_version }}.zip") | .url') --output django-oso-python-${{ github.event.inputs.django_oso_version }}.zip
      - run: unzip django-oso-python-${{ github.event.inputs.django_oso_version }}.zip -d django-oso-python
      - name: Install flask-oso from release
        run: pip install flask_oso==${{ github.event.inputs.flask_oso_version }} -f flask-oso-python
      - name: Install django-oso from release
        run: pip install django_oso==${{ github.event.inputs.django_oso_version }} -f django-oso-python
      - name: Install sqlalchemy-oso from release
        run: pip install sqlalchemy_oso[flask]==${{ github.event.inputs.sqlalchemy_oso_version }} -f sqlalchemy-oso-python


      ### Build old docs
      - name: Build docs
        run: SPHINXOPTS="-W" make -C docs build

      ### Build new docs
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.79.1'
      - name: Build Hugo docs
        if: github.event.inputs.url == 'docs-preview.oso.dev'
        run: |
          make build
          HUGO_ENV=production hugo -b "https://docs-preview.oso.dev/"
        working-directory: new-docs
      - name: Build Hugo docs
        if: github.event.inputs.url == 'docs.oso.dev'
        run: |
          make build-prod
          HUGO_ENV=production hugo -b "https://docs.osohq.com/"
        working-directory: new-docs

      ### Push to S3 + invalidate cache
      - name: s3 publish
        run: aws s3 sync --delete new-docs/public/ s3://${{ github.event.inputs.url }}
      - name: cloudfront invalidate docs preview
        run: aws cloudfront create-invalidation --distribution-id E2KU2V8C9KJNU7 --paths "/*"
        if: github.event.inputs.url == 'docs-preview.oso.dev'
      - name: cloudfront invalidate docs
        run: aws cloudfront create-invalidation --distribution-id E1MY35FKBOYAV1 --paths "/*"
        if: github.event.inputs.url == 'docs.oso.dev'
