name: Create Django Integration Release
on:
  push:
    tags:
      - "django-v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  version:
    name: Compute and verify the version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set version env
        env:
          github_ref: ${{ github.ref }}
        run: echo "oso_version=${github_ref/refs\/tags\/django-v/}" >> $GITHUB_ENV
      - name: Check python version matches
        run: grep "__version__ = \"$oso_version\"" django_oso/__init__.py
        working-directory: languages/python/django-oso
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: version
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"

      - name: Copy in readme
        run: |
          rm languages/python/django-oso/README.md
          cp README.md languages/python/django-oso/README.md
      - name: Upgrade pip and install wheel
        run: |
          pip install --upgrade pip
          pip install wheel
      - name: Build wheels
        run: |
          python -m pip wheel -w wheelhouse .
        working-directory: languages/python/django-oso
      - uses: actions/upload-artifact@v2
        with:
          name: wheel
          path: languages/python/django-oso/wheelhouse/*.whl

  # TODO what validation can we do here.
  release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      [
        build_wheels,
      ]
    steps:
      - name: Set version output
        id: version
        env:
          github_ref: ${{ github.ref }}
        run: echo "::set-output name=oso_version::${github_ref/refs\/tags\/django-v/}"
      - name: Download oso python wheels from package run
        uses: actions/download-artifact@v1
        with:
          name: wheel
      - name: Zip file
        run: zip --junk-paths -r django-oso-python.zip wheel/
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: django-v${{ steps.version.outputs.oso_version }}
          release_name: django-oso ${{ steps.version.outputs.oso_version }}
          body: |
            django-oso ${{ steps.version.outputs.oso_version }}
          draft: false
          prerelease: true
      - name: Upload Python Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./django-oso-python.zip
          asset_name: django-oso-python-${{ steps.version.outputs.oso_version }}.zip
          asset_content_type: application/zip
